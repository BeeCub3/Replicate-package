TY  - CONF
TI  - Model Based Systems Engineering Approach to Technology Roadmapping
AU  - Golkar, Alessandro
AU  - Garzaniti, Nicola
T3  - SummerSim '20
AB  - This paper formulates a model-based technology roadmapping architecture as an integrated framework to model and simulate decision-making problems in technology strategy settings. A model-based roadmapping framework is proposed as a complementary approach to traditional workshop-based roadmapping approaches. The framework structures a technology roadmap in data analytics, knowledge management, continuous improvement, and visualization elements. All elements are interrelated and managed through a systematic model structure, a relational database and distributed version control. The paper demonstrates the approach on a case study of orbital launch vehicles, and provides a side by side comparison of the approach to traditional workshop-based roadmapping methods. The approach presented in this paper allows roadmapping teams to deliver fact-based roadmaps while ensuring information consistency and holistic inclusion of all relevant product, technology, and market perspectives.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2020 Summer Simulation Conference
DA  - 2020///
PY  - 2020
PB  - Society for Computer Simulation International
SN  - 978-1-71381-429-0
KW  - model-based systems engineering
KW  - technology forecasting
KW  - technology roadmapping
KW  - technology strategy modeling
ER  - 

TY  - CONF
TI  - Guidelines for Model Based Systems Engineering
AU  - Steinbach, D.
T3  - DATE '12
AB  - CassidianÂ® is working on modeling guidelines. We present our approach and report first results and findings to illustrate progress and direction of our work.
C1  - San Jose, CA, USA
C3  - Proceedings of the Conference on Design, Automation and Test in Europe
DA  - 2012///
PY  - 2012
SP  - 159
EP  - 160
PB  - EDA Consortium
SN  - 978-3-9810801-8-6
KW  - guidelines
KW  - model based
KW  - rules
KW  - systems engineering
ER  - 

TY  - CONF
TI  - Teaching Model-Based Systems Engineering for Industry 4.0: Student Challenges and Expectations
AU  - Butting, Arvid
AU  - Konar, Sinem
AU  - Rumpe, Bernhard
AU  - Wortmann, Andreas
T3  - MODELS '18
AB  - Industry 4.0 and its international siblings envision revolutionizing manufacturing through integrating software-intensive systems from business plans to manufacturing systems to products and across the complete value-added chain. We observe a trend towards model-based systems engineering in the context of Industry 4.0, which requires finding a balance between modeling challenges and manufacturing challenges in educating software engineering students to become a vital part of this revolution. We conducted a project class on model-based systems engineering for Industry 4.0 to uncover the challenges in preparing the participating computer science students for playing a role contributing to the vision of Industry 4.0. To this end, we instrumented the class with a questionnaire and semi-structured interviews to understand the challenges and expectations of students on this topic. We report the results of both and lessons learned for future project classes on model-based systems engineering for Industry 4.0.
C1  - New York, NY, USA
C3  - Proceedings of the 21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
DA  - 2018///
PY  - 2018
DO  - 10.1145/3270112.3270122
SP  - 74
EP  - 81
PB  - Association for Computing Machinery
SN  - 978-1-4503-5965-8
UR  - https://doi.org/10.1145/3270112.3270122
KW  - MBSE
KW  - industry 4.0
KW  - project class
KW  - teaching challenges
ER  - 

TY  - CONF
TI  - Security-Aware, Model-Based Systems Engineering with SysML
AU  - Oates, Robert
AU  - Thom, Fran
AU  - Herries, Graham
T3  - ICS-CSR 2013
AB  - Addressing the cyber security demands of industrial control systems is a challenging task as the systems are typically built from equipment with limited computational power and integrated into highly complex, infrastructure-critical systems. To ensure the security of such systems, security considerations must form a ubiquitous part of the design and maintenance processes. This work provides an overview of the literature regarding the key issues faced by engineers attempting to secure industrial control systems, appraises work done to integrate cyber security into the systems engineering process and puts forward recommendations for the future of security-aware systems engineering through the extension of SysML to incorporate a Security viewpoint on the model. These recommendations include the presentation of a novel threat model profile that forms the basis of the SysML extensions.
C1  - Swindon, GBR
C3  - Proceedings of the 1st International Symposium on ICS & SCADA Cyber Security Research 2013
DA  - 2013///
PY  - 2013
SP  - 78
EP  - 87
PB  - BCS
SN  - 978-1-78017-232-3
KW  - SysML
KW  - Systems Engineering
KW  - Industrial control systems
ER  - 

TY  - CONF
TI  - Coping with Variability in Model-Based Systems Engineering: An Experience in Green Energy
AU  - Trujillo, Salvador
AU  - Garate, Jose Miguel
AU  - Lopez-Herrejon, Roberto Erick
AU  - Mendialdua, Xabier
AU  - Rosado, Albert
AU  - Egyed, Alexander
AU  - Krueger, Charles W.
AU  - de Sosa, Josune
T3  - ECMFA'10
AB  - Model-Based Systems Engineering (MBSE) is an emerging engineering discipline whose driving motivation is to provide support throughout the entire system life cycle. MBSE not only addresses the engineering of software systems but also their interplay with physical systems. Quite frequently, successful systems need to be customized to cater for the concrete and specific needs of customers, end-users, and other stakeholders. To effectively meet this demand, it is vital to have in place mechanisms to cope with the variability, the capacity to change, that such customization requires. In this paper we describe our experience in modeling variability using SysML, a leading MBSE language, for developing a product line of wind turbine systems used for the generation of electricity.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 6th European Conference on Modelling Foundations and Applications
DA  - 2010///
PY  - 2010
DO  - 10.1007/978-3-642-13595-8_23
SP  - 293
EP  - 304
PB  - Springer-Verlag
SN  - 3-642-13594-3
UR  - https://doi.org/10.1007/978-3-642-13595-8_23
ER  - 

TY  - CONF
TI  - Strategies and Best Practices for Model-Based Systems Engineering Adoption in Embedded Systems Industry
AU  - Amorim, Tiago
AU  - Vogelsang, Andreas
AU  - Pudlitz, Florian
AU  - Gersing, Peter
AU  - Philipps, Jan
T3  - ICSE-SEIP '19
AB  - [Context] Model-based Systems Engineering (MBSE) advocates the integrated use of models throughout all development phases of a system development life-cycle. It is also often suggested as a solution to cope with the challenges of engineering complex systems. However, MBSE adoption is no trivial task and companies, especially large ones, struggle to achieve it in a timely and effective way. [Goal] We aim to discover what are the best practices and strategies to implement MBSE in companies that develop embedded software systems. [Method] Using an inductive-deductive research approach, we conducted 14 semi-structured interviews with experts from 10 companies. Further, we analyzed the data and drew some conclusions which were validated by an on-line questionnaire in a triangulation fashion. [Results] Our findings are summarized in an empirically validated list of 18 best practices for MBSE adoption and through a prioritized list of the 5 most important best practices. [Conclusions] Raising engineers' awareness regarding MBSE advantages and acquiring experience through small projects are considered the most important practices to increase the success of MBSE adoption.
C3  - Proceedings of the 41st International Conference on Software Engineering: Software Engineering in Practice
DA  - 2019///
PY  - 2019
DO  - 10.1109/ICSE-SEIP.2019.00030
SP  - 203
EP  - 212
PB  - IEEE Press
UR  - https://doi.org/10.1109/ICSE-SEIP.2019.00030
KW  - best practices
KW  - embedded systems
KW  - empirical research
KW  - model-based systems engineering
KW  - process adoption
ER  - 

TY  - JOUR
TI  - Extending a Synthesis-Centric Model-Based Systems Engineering Framework with Stochastic Model Checking
AU  - Markovski, J.
AU  - Estens Musa, E. S.
AU  - Reniers, M. A.
T2  - Electron. Notes Theor. Comput. Sci.
AB  - We propose to integrate performance evaluation with supervisory control synthesis to bring higher confidence in the control design. Supervisory control theory deals with automatic synthesis of supervisory controllers that ensure safe behavior of the supervised system, based on the models of the uncontrolled system and the (safety) control requirements. For the purpose of performance evaluation, we turn to stochastic model checking of continuous-time Markov chains, which requires an extension of the model of the uncontrolled system with Markovian delays. We cast our proposal as an extension of a model-based systems engineering framework that relies on supervisor synthesis. We treat the Markovian delays syntactically, exploiting their equivalent interleaving behavior with uniquely-named uncontrollable transitions. In this way, we can employ already available synthesis tools, while preserving the stochastic behavior. To this end, we develop model transformation tools to extract the underlying Markov process from the stochastic discrete-event model of the supervised system. We illustrate the approach by modeling a pipeless plant that employs automated guided vehicles instead of fixed piping in order to ensure greater flexibility of the plant. The control problem that we solve is safe high-level movement coordination of the vehicles, ensured by the supervisory controller. We show how to seamlessly introduce stochastic behavior in the supervised system and we evaluate several performance and reliability aspects of the plant. We implement the framework by interfacing two state-of-the-art tools: Supremica for supervisory controller synthesis and MRMC for Markovian model checking. To this end, we improve previous attempts by providing support for data-based observers, which greatly improve the modeling capabilities of the framework.
DA  - 2013/08//
PY  - 2013
DO  - 10.1016/j.entcs.2013.07.011
VL  - 296
SP  - 163
EP  - 181
SN  - 1571-0661
UR  - https://doi.org/10.1016/j.entcs.2013.07.011
KW  - supervisory control theory
KW  - Markov processes
KW  - performance evaluation
ER  - 

TY  - JOUR
TI  - An Automatic Model-to-Model Mapping and Transformation Methodology to Serve Model-Based Systems Engineering
AU  - Wang, Tiexin
AU  - Truptil, Sebastien
AU  - Benaben, Frederick
T2  - Inf. Syst. E-Bus. Manag.
AB  - With enterprise collaboration becoming increasingly frequent, the ability of an enterprise to cooperate with others has become one of the core factors in gaining competitive advantage. This trend has led to an urgent requirement to improve cooperation ability. To this end, model-based systems engineering is being adapted so that it can be used to represent and simulate the working processes of enterprises. Model-to-model mappings and transformations, as important aspects in model-based systems engineering, have become two of the key factors in improving the cooperation capabilities of enterprises. However, the foundations for achieving automatic model-to-model transformation have not yet been built. Normally, model transformation rules are built on the basis of model mappings, and model mappings concern semantic or syntactic representations. One of the difficulties in achieving model-to-model mappings and transformations lies in detecting the semantics and semantic relations that are conveyed in different models. This paper presents an automatic model-to-model mapping and transformation methodology, which applies semantic and syntactic checking measurements to detect the meanings and relations between different models automatically. Both of the semantic and syntactic checking measurements are combined into a refined meta-model based model transformation process. To evaluate the performance of this methodology, we demonstrate its applicability with a realistic example.
DA  - 2017/05//
PY  - 2017
DO  - 10.1007/s10257-016-0321-z
VL  - 15
IS  - 2
SP  - 323
EP  - 376
SN  - 1617-9846
UR  - https://doi.org/10.1007/s10257-016-0321-z
KW  - Model-driven engineering
KW  - Automatic model-to-model transformation
KW  - Enterprise collaboration
KW  - Model-to-model mappings
KW  - Semantic and syntactic checking
ER  - 

TY  - THES
TI  - Application of Model-Based Systems Engineering Using MADe, and MagicDraw Modeling Tools to Ascertain Reliability, Risk, and Safety of Aerospace Components
AU  - Odita, Tony A
AU  - Bronner, LeeRoy
AU  - Jones, Garfield
AU  - Wilson, Danyell
AB  - The emergence of model-based engineering, with the model-based systems engineering (MBSE) leading the way, is transforming design, and analysis methodologies. The recognized benefits to systems development include moving from document-centric information systems, and document-centric project communication to a model-centric environment, in which, control of design changes in the life cycles is facilitated. In addition, a "single source of truth" about the system, which is up to date in all respects of the design, becomes the authoritative source of data, and information about the system (Lindsey et al., 2020b). This promotes consistency about integration of the system elements as the design emerges, and thereby may move the design to an overall optimum. Therefore, Goddard Space Flight Center Safety and Mission Assurance (SMA) team, which comprises Reliability Engineers, Quality Engineers, and Safety Engineers supporting NASA missions, must be aligned and integrated into model-based engineering to ensure the outputs of their analyses are appropriate, and the value for design, development, and operational processes System Reliability, Risk, and Safety plays an essential role in systems engineering. In fact, it is an important non-functional requirement for critical projects. Since large and complex systems keep increasing in complexity, and accuracy, it is becoming inadequate to adopt classical Reliability, Risk, and Safety techniques, which are mainly statistical, and probabilistic. Moreover, the integration of conventional Reliability, Risk, and Safety technique in typical systems engineering processes is difficult, and therefore, their use is often adopted in the latest stage and the verification process. A good implementation of Reliability, Risk, and Safety analysis early in the design process would help increase completion time, and reduce development cost. As for reliability, it is anticipated that by using the modeling techniques, Reliability Artifacts (e.g., Failure Modes Effects, and Criticality Analysis (FMECA), Limited Life Analysis (LLA), Hazard Reports, and Fault Tree Analysis (FTA)) will be more accurate, consistent, and efficiently produced, which provides engineers with greater time for analysis, system behavior investigation (simulation), and risk-based project decision making. However, to achieve this expectation, a robust and unified modeling process must be developed, implemented, and tested.As Model-Based Systems Engineering (MBSE) becomes an important method for specifying, developing, and designing systems, our approach takes full advantage of this method by adopting Reliability, Risk, and Safety, and MBSE in the early system lifecycle, such as the specification, and the integration stages/processes. This is a useful approach, which may lead to a better quality of the final product or system. MBSE is a systems engineering (SE) paradigm that emphasizes the application of rigorous visual modeling principles and also practices the systems engineering activities throughout the System Development Life Cycle (SDLC). Using MBSE methods, along with Reliability, Risk and Safety modeling tools allows a unified representation of the system in a model that enables a highly related level of details (Chen &amp; Meli, 2017; Ramos et al., 2012). When dealing with complex, and interdisciplinary systems of systems (SoS), traditional SE methodologies fall short of achieving a project or product objectives. In this dissertation, our goal is to define a framework for Reliability, Risk, and Safety assessment for component-based systems with respect to NASA's Sounding Rocket Program (NSRP) using MBSE methodologies.NASA has developed guidance on the modeling scope, and depth needed for SMA analysis compatibility. The establishment of SMA-to-SE/SE-to-SMA modeling collaboration and transition points will be using results from this research. Additionally, they will be used to identify where reliability analyses and related products may have to take on a new shape while still identifying the risks to the system performing as required over its lifecycle to satisfy mission objectives, and advance Model-Based tool capabilities (Lindsey et al., 2020b; Odita, 2019).
CY  - USA
DA  - 2020///
PY  - 2020
M3  - PhD Thesis
PB  - Morgan State University
ER  - 

TY  - CONF
TI  - Towards Configuration Support for Collaborative Simulator Development - A Product Line Approach in Model Based Systems Engineering
AU  - Andersson, Henric
AU  - Carlsson, Magnus
AU  - Ãlvander, Johan
T3  - WETICE '11
AB  - In development and support of complex products such as power plants, automotive vehicles, or aircrafts, modeling and simulation has become an important activity as a basis for knowledge capture. Simulation is used in several steps of the product lifecycle; for evaluation of early design, for system verification, and for user training. With emerging techniques such as tools for high-level modeling, multi-core computing, and visualization, the number of useful models is growing. This paper focuses on reuse of multipurpose models and configuration support in a product line context. A configurator prototype system is presented. The simulator set created from validated models is considered to be a secondary product line. The product set which the simulation models represent is considered to be the primary product line. The Saab Gripen fighter aircraft, together with simulators in which the aircraft behavior, performance, and handling qualities are represented, is used to exemplify application. Integration principles of the systems for simulator configuration, Software Configuration Management, and Product Data Management (PDM) are studied. Preliminary results show that a configurator tool can be used, but there is need to map structures between the simulation and PDM domains.
C1  - USA
C3  - Proceedings of the 2011 IEEE 20th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises
DA  - 2011///
PY  - 2011
DO  - 10.1109/WETICE.2011.74
SP  - 185
EP  - 192
PB  - IEEE Computer Society
SN  - 978-0-7695-4410-6
UR  - https://doi.org/10.1109/WETICE.2011.74
KW  - MBSE
KW  - Simulation
KW  - Configurator
KW  - Product Line
ER  - 

TY  - CONF
TI  - Bridging the Gap between Product Lines and Systems Engineering: An Experience in Variability Management for Automotive Model Based Systems Engineering
AU  - Dumitrescu, Cosmin
AU  - Mazo, Raul
AU  - Salinesi, Camille
AU  - Dauron, Alain
T3  - SPLC '13
AB  - We present in this paper an experience in modeling a family of parking brake systems, with shared assets and alternative solutions, and relate them to the needs of Renault in terms of variability management. The models are realized using a set of customized tools for model based systems engineering and variability management, based on SysML models. The purpose is to present an industrial context that requires the adoption of a product line approach and of variability modeling techniques, outside of a pure-software domain. At Renault, the interest is in identifying variations and reuse opportunities early in the product development cycle, as well as in preparing vehicle configuration specifications during the systems engineering process. This would lead to lowering the engineering effort and to higher quality and confidence in carry-over and carry across based solutions. We advocate for a tight integration of variability management with the model based systems engineering approach, which needs to address methodological support, modeling techniques and efficient tools for interactive configuration, adapted for engineering activities.
C1  - New York, NY, USA
C3  - Proceedings of the 17th International Software Product Line Conference
DA  - 2013///
PY  - 2013
DO  - 10.1145/2491627.2491655
SP  - 254
EP  - 263
PB  - Association for Computing Machinery
SN  - 978-1-4503-1968-3
UR  - https://doi.org/10.1145/2491627.2491655
KW  - systems engineering
KW  - variability management
ER  - 

TY  - CHAP
TI  - Integration of Modeling and Verification for System Model Based on KARMA Language
AU  - Ding, Jie
AU  - Reniers, Michel
AU  - Lu, Jinzhi
AU  - Wang, Guoxin
AU  - Feng, Lei
AU  - Kiritsis, Dimitris
T2  - Proceedings of the 18th ACM SIGPLAN International Workshop on Domain-Specific Modeling
AB  - Model-based systems engineering (MBSE) enables to verify the system performance using system behavior models, which can identify design faults that do not meet the stakeholdersâ requirements as early as possible, thus reducing the R&amp;D cost and error risks. Currently, different domain engineers make use of different modeling languages to create their own behavior models. Different behavior models are verified by different approaches. It is difficult to adopt a unified integrated platform to support the modeling and verification of heterogeneous behavior models during the conceptual design phase. This paper proposes a unified modeling and verification approach supporting system formalisms and verification. The KARMA language is used to support the unified formalisms across MBSE models and dynamic simulations for different domain specific models. In order to describe the behavior model more precisely and to facilitate verification, the syntax of hybrid automata is integrated into KARMA. We implemented behavior models and their verification in MetaGraph, a multi-architecture modeling tool. Finally, the effectiveness of the proposed approach is validated by two cases: 1) the scenario of booking railway tickets using BPMN models; 2) the behavior performance simulation of unmanned vehicles using a SysML state machine diagram.
CY  - New York, NY, USA
DA  - 2021///
PY  - 2021
SP  - 41
EP  - 50
PB  - Association for Computing Machinery
SN  - 978-1-4503-9106-1
UR  - https://doi.org/10.1145/3486603.3486775
ER  - 

TY  - CONF
TI  - Towards a Model-Driven Product Line Engineering Process: An Industrial Case Study
AU  - Bilic, Damir
AU  - Sundmark, Daniel
AU  - Afzal, Wasif
AU  - Wallin, Peter
AU  - Causevic, Adnan
AU  - Amlinger, Christoffer
AU  - Barkah, Dani
T3  - ISEC 2020
AB  - Many organizations developing software-intensive systems face challenges with high product complexity and large numbers of variants. In order to effectively maintain and develop these product variants, Product-Line Engineering methods are often considered, while Model-based Systems Engineering practices are commonly utilized to tackle product complexity. In this paper, we report on an industrial case study concerning the ongoing adoption of Product Line Engineering in the Model-based Systems Engineering environment at Volvo Construction Equipment (Volvo CE) in Sweden. In the study, we identify and define a Product Line Engineering process that is aligned with Model-based Systems Engineering activities at the engines control department of Volvo CE. Furthermore, we discuss the implications of the migration from the current development process to a Model-based Product Line Engineering-oriented process. This process, and its implications, are derived by conducting and analyzing interviews with Volvo CE employees, inspecting artifacts and documents, and by means of participant observation. Based on the results of a first system model iteration, we were able to document how Model-based Systems Engineering and variability modeling will affect development activities, work products and stakeholders of the work products.
C1  - New York, NY, USA
C3  - Proceedings of the 13th Innovations in Software Engineering Conference on Formerly Known as India Software Engineering Conference
DA  - 2020///
PY  - 2020
DO  - 10.1145/3385032.3385043
PB  - Association for Computing Machinery
SN  - 978-1-4503-7594-8
UR  - https://doi.org/10.1145/3385032.3385043
KW  - Engine System Development
KW  - Model-Based Systems Engineering
KW  - Product Line Engineering
ER  - 

TY  - CONF
TI  - Advanced Systems Engineering and Model Philosophy (WIP)
AU  - Brown, Barclay R.
T3  - SummerSim '15
AB  - Being an engineer in the age of the Internet of Things means dealing with constant, dizzying complexity and change. The tools of the past, even last decade's software-based tools, may not be up to the challenge. What's needed is a new paradigm for engineeringâModel Based Engineering. Live, interconnected, real-time engineering information replaces dead-end documents, reports and drawings. Changes propagate across all engineering disciplines and bits of engineering information are linked up to form new product variants. Systems are built out of virtual bytes before being built out of real steel and silicon, saving time, money and cutting through the complexity. In this paper the world of Model Based Engineering is examined along with a key sub-practice, Model Based Systems Engineering.
C1  - San Diego, CA, USA
C3  - Proceedings of the Conference on Summer Computer Simulation
DA  - 2015///
PY  - 2015
SP  - 1
EP  - 6
PB  - Society for Computer Simulation International
SN  - 978-1-5108-1059-4
KW  - model based engineering
KW  - model based systems engineering
ER  - 

TY  - CONF
TI  - A MBSE Based Flight Scenario Identification Approach for Civil Aircraft Certification Test
AU  - Zhang, Xuan
AU  - Ding, Xiaojian
AU  - Wang, Kaiwei
T3  - WSSE 2020
AB  - Defining and designing civil aircraft certification test flight scenario (CTFS) is a prerequisite for conducting airworthiness certification flight test. The design method and process of CTFS based on the airworthiness compliance evidence link are then proposed. With "compliance evidence link" as the core, logical and traceable airworthiness compliance evidence is analysised. The model-based systems engineering (MBSE) method is used to realize the modeling of the process of constructing the compliance evidence link for CTFS. In order to improve the operability, taking the airworthiness requirement "ground heading maneuverability" as a typical case, the process of requirement analysis, design, and requirement confirmation of CTFS is demonstrated. The final designed CTFS can support the conduct of civil aircraft airworthiness certification flight test.
C1  - New York, NY, USA
C3  - Proceedings of the 2020 The 2nd World Symposium on Software Engineering
DA  - 2020///
PY  - 2020
DO  - 10.1145/3425329.3425392
SP  - 12
EP  - 17
PB  - Association for Computing Machinery
SN  - 978-1-4503-8787-3
UR  - https://doi.org/10.1145/3425329.3425392
KW  - airworthiness certification
KW  - certification test flight scenario (CTFS)
KW  - compliance evidence link
KW  - model-based systems engineering (MBSE)
ER  - 

TY  - CONF
TI  - Model-Based Product Line Engineering in an Industrial Automotive Context: An Exploratory Case Study
AU  - Bilic, Damir
AU  - Sundmark, Daniel
AU  - Afzal, Wasif
AU  - Wallin, Peter
AU  - Causevic, Adnan
AU  - Amlinger, Christoffer
T3  - SPLC '18
AB  - Product Line Engineering is an approach to reuse assets of complex systems by taking advantage of commonalities between product families. Reuse within complex systems usually means reuse of artifacts from different engineering domains such as mechanical, electronics and software engineering. Model-based systems engineering is becoming a standard for systems engineering and collaboration within different domains. This paper presents an exploratory case study on initial efforts of adopting Product Line Engineering practices within the model-based systems engineering process at Volvo Construction Equipment (Volvo CE), Sweden. We have used SysML to create overloaded models of the engine systems at Volvo CE. The variability within the engine systems was captured by using the Orthogonal Variability Modeling language. The case study has shown us that overloaded SysML models tend to become complex even on small scale systems, which in turn makes scalability of the approach a major challenge. For successful reuse and to, possibly, tackle scalability, it is necessary to have a database of reusable assets from which product variants can be derived.
C1  - New York, NY, USA
C3  - Proceedings of the 22nd International Systems and Software Product Line Conference - Volume 2
DA  - 2018///
PY  - 2018
DO  - 10.1145/3236405.3237200
SP  - 56
EP  - 63
PB  - Association for Computing Machinery
SN  - 978-1-4503-5945-0
UR  - https://doi.org/10.1145/3236405.3237200
KW  - model-based systems engineering
KW  - variability management
KW  - orthogonal variability modeling
KW  - system product lines
ER  - 

TY  - CHAP
TI  - An Integrated Model-Based Tool Chain for Managing Variability in Complex System Design
AU  - Bilic, Damir
AU  - Brosse, Etienne
AU  - Sadovykh, Andrey
AU  - Truscan, Dragos
AU  - Bruneliere, Hugo
AU  - Ryssel, Uwe
T2  - Proceedings of the 22nd International Conference on Model Driven Engineering Languages and Systems
AB  - Software-intensive systems in the automotive domain are often built in different variants, notably in order to support different market segments and legislation regions. Model-based concepts are frequently applied to manage complexity in such variable systems. However, the considered approaches are often focused on single-product development. In order to support variable products in a model-based systems engineering environment, we describe a tool-supported approach that allows us to annotate SysML models with variability data. Such variability information is exchanged between the system modeling tool and variability management tools through the Variability Exchange Language. The contribution of the paper includes the introduction of the model-based product line engineering tool chain and its application on a practical case study at Volvo Construction Equipment. Initial results suggest an improved efficiency in developing such a variable system.
DA  - 2019///
PY  - 2019
SP  - 288
EP  - 293
PB  - IEEE Press
SN  - 978-1-72815-125-0
UR  - https://doi.org/10.1109/MODELS-C.2019.00045
ER  - 

TY  - CONF
TI  - Maritime Safety Case in a Box
AU  - Bailes, Murray
T3  - ASSC '11
AB  - The Maritime Safety Case in a Box is the result of applying the principles and techniques of Model Based Systems Engineering to Safety Engineering to establish a framework of models that support the definition of a generic safety case for a maritime combat system.These models are currently constructed in COREâ¢, a MBSE application built by Vitech Corporation but could be ported to other modelling tools or a set of processes as required.These models span:a) A set of DoDAF compliant Operational and System domain models of the combat system for a naval maritime platform;b) A set of Program Domain models that describe the Program Activities and their products to define a Safety Case that is compliant with the relevant statutory and regulatory requirements;c) A set of generic hazard, cause, control and accident assessments for physical hazards such as hazardous materials, slip, trip or fall, electricity, confined space, etcd) A set of generic functional hazard assessments based on analysis of the Operational and System Models described above.The intersection of these models provides a solid framework to maximise the effectiveness of the safety engineering process while reducing the cost by providing a set of partially completed hazard assessments or patterns for the system under consideration that can be tailored or extended for each class of ship.
C1  - AUS
C3  - Proceedings of the Australian System Safety Conference - Volume 133
DA  - 2011///
PY  - 2011
SP  - 3
EP  - 18
PB  - Australian Computer Society, Inc.
SN  - 978-1-921770-13-5
KW  - model based systems engineering
KW  - DoDAF
KW  - maritime
KW  - safety case
KW  - safety patterns
ER  - 

TY  - CONF
TI  - The Four Dimensions of Variability and Their Impact on MBPLE: How to Approach Variability in the Development of Aircraft Product Lines at Airbus
AU  - Forlingieri, Marco
T3  - VaMoS '22
AB  - The development of complex systems such as aircraft product lines requires the support of advanced modeling methodologies such as Model-Based Systems Engineering (MBSE) and Product-Line Engineering (PLE). To enable the development of such complex product lines, Airbus is adopting the combination of MBSE and PLE, a method previously applied in other industries and known as Model-Based Product Line Engineering (MBPLE). In adopting MBPLE it is necessary to understand the type of constraints that influences the definition of variability within a development program or project. This paper proposes four different dimensions of variability which facilitate and guide the application of MBPLE at Airbus but that can also be extended to other industries and organizations. Those four dimensions, namely Co-Variability in product, manufacturing and services, Variability in development lifecycle, Variability in layers of abstraction, and Variability in system hierarchy levels, are first described. Afterward, their impact on the MBPLE method steps, namely âDefine Product Line Feature Modelsâ, âDefine Product Line Assetsâ, âSelect Member Product Feature Configurationâ and âDerive Member Product Assetsâ, is analyzed with the support of an Airbus example.
C1  - New York, NY, USA
C3  - Proceedings of the 16th International Working Conference on Variability Modelling of Software-Intensive Systems
DA  - 2022///
PY  - 2022
DO  - 10.1145/3510466.3511275
PB  - Association for Computing Machinery
SN  - 978-1-4503-9604-2
UR  - https://doi.org/10.1145/3510466.3511275
KW  - Airbus
KW  - Model Based Product Line Engineering
KW  - Model Based Systems Engineering
KW  - Variability Modeling
ER  - 

TY  - JOUR
TI  - SysML-Based Design Chain Information Modeling for Variety Management in Production Reconfiguration
AU  - Wu, Dazhong
AU  - Zhang, Linda L.
AU  - Jiao, Roger J.
AU  - Lu, Roberto F.
T2  - J. Intell. Manuf.
AB  - Satisfying diverse customer needs leads to proliferation of product variants. It is imperative to model the coherence of functional, product and process varieties throughout the design chain. Based on a model-based systems engineering approach, this paper applies the Systems Modeling Language (SysML) to model design chain information. To support variety management decisions, the SysML-based information models are further implemented as a variety coding information system. A case study of switchgear enclosure production reconfiguration system demonstrates that SysML-based information modeling excels in conducting requirements, structural, behavioral and constraints analysis and in performing trade-off study. In addition, it maintains semantic coherence along the design chain, keeps traceability across different levels of abstraction, thus improving interoperability among heterogeneous tools.
DA  - 2013/06//
PY  - 2013
DO  - 10.1007/s10845-011-0585-6
VL  - 24
IS  - 3
SP  - 575
EP  - 596
SN  - 0956-5515
UR  - https://doi.org/10.1007/s10845-011-0585-6
KW  - SysML
KW  - Design chain management
KW  - Information modeling
KW  - Model-based systems engineering
KW  - Production reconfiguration
KW  - Variety management
ER  - 

TY  - CHAP
TI  - Modeling and Verification Method for an Early Evaluation of Systems of Systems Interactions
AU  - Baduel, Ronan
AU  - Ober, Iulian
AU  - Bruel, Jean-Michel
T2  - Proceedings of the 35th Annual ACM Symposium on Applied Computing
AB  - This paper presents the results achieved while pursuing the verification and validation of a train system behavior at the first steps of development in an industrial context. At this stage, and at least from the industrial point of view, the train can be considered as a System of Systems (SoS). A method is proposed, supported by preliminary results through the definition and verification of constrained states and preconditions to use cases, as well as a structure for the behavior.
CY  - New York, NY, USA
DA  - 2020///
PY  - 2020
SP  - 1798
EP  - 1805
PB  - Association for Computing Machinery
SN  - 978-1-4503-6866-7
UR  - https://doi.org/10.1145/3341105.3373944
ER  - 

TY  - JOUR
TI  - A Combined Design Structure Matrix (DSM) and Discrete Differential Evolution (DDE) Approach for Scheduling and Organizing System Development Tasks Modelled Using SysML
AU  - Nonsiri, Sarayut
AU  - Christophe, FranÃ§ois
AU  - CoataneÃ©;a, Eric
AU  - Mokammel, Faisal
T2  - J. Integr. Des. Process Sci.
AB  - During a system engineering process there are an important number of tasks that need to be organized, mapped together and recursively considered. The tasks that are mapped together are exchanging different flows of information and material. In this type of iterative processes, significant savings in term of development time can be made by providing a method that is optimizing the amount of feedbacks and iterations to the minimal level simply required for the successful development of the system. Task scheduling in a system engineering process can become extremely complex. Nevertheless it is a crucial step of the early stages of the systems engineering process for time-to-market, cost-efficiency and quality reasons. In this article, the authors are proposing to combine a computational approach (Discrete Differential Evolution) with Model Based Systems Engineering (MBSE) for minimizing iterations and reducing lead-time development. The present article is contributing to recent research works using Design Structure Matrixes (DSM) and computational methods for visualizing and analyzing systems engineering processes. The paper is proposing a framework integrating a model-based approach and a DSM based analysis of the process architecture to assist system engineers in organizing and scheduling tasks. As a result, this framework allows engineers to automatically populate DSMs generated from MBSE models developed in SysML. A specific stereotype is proposed to represent system development tasks in SysML. The sequencing of the engineering tasks is optimized with the application of a Discrete Differential Evolution algorithm (DDE) taking into account the different constraints. The practical use of the proposed framework is demonstrated on the case study of a mobile robot developed for the Eurobot competition. The article also discusses the possibility to use the current framework to analyze the impact of requirement changes on the scheduling of development tasks.
DA  - 2014/07//
PY  - 2014
VL  - 18
IS  - 3
SP  - 19
EP  - 40
SN  - 1092-0617
KW  - Model-Based Systems Engineering
KW  - Design Structure Matrix
KW  - Discrete Differential Evolution
KW  - Sequencing
KW  - Systems Engineering Process
ER  - 

TY  - CHAP
TI  - Variability Realization in Model-Based System Engineering Using Software Product Line Techniques: An Industrial Perspective
AU  - SchÃ¤fer, Andreas
AU  - Becker, Martin
AU  - Andres, Markus
AU  - Kistenfeger, Tim
AU  - Rohlf, Florian
T2  - Proceedings of the 25th ACM International Systems and Software Product Line Conference - Volume A
AB  - Efficiently handling system variants is rising of importance in industry and challenges the application of model-based systems engineering.This paper reveals the increasing industrial demand of guidance and decision support on how to handle variants and variability within SysML and UML models. While a substantial amount of variability realization approaches has already been published on source code level, there is little guidance for practitioners on system model level. Hence, there is major uncertainty in dealing with system changes or concurrent system modeling of related system. Due to a poor modularization and variability realization these model variants are ending up in interwoven and complex system models.In this paper, we aim to raise awareness of the need for appropriate guidance and decision support, identify important contextual factors of MBSE that influence variability realization, and derive well known variability mechanisms used in software coding for their applicability in system modeling.
CY  - New York, NY, USA
DA  - 2021///
PY  - 2021
SP  - 25
EP  - 34
PB  - Association for Computing Machinery
SN  - 978-1-4503-8469-8
UR  - https://doi.org/10.1145/3461001.3473060
ER  - 

TY  - CONF
TI  - Towards a Framework for Executable Systems Modeling: An Executable Systems Modeling Language (ESysML)
AU  - Amissah, Matthew
AU  - Toba, Ange-Lionel
AU  - Handley, Holly A. H.
AU  - Seck, Mamadou
T3  - Mod4Sim '18
AB  - The Systems Modeling Language (SysML), which is the de-facto modeling standard in the systems engineering community, consists of a number of independently derived methodologies (i.e. state charts, activity diagrams etc.) which have been co-opted into a single modeling framework. This and the lack of an overarching meta-model that specifies relationships and rules governing the various language constructs precludes their uniform application across diagram types. This has resulted in a large unwieldy and at best semi-formal language specification, with adverse implications for interoperability of modeling tools and model execution. This paper presents an executable language that re-factors the SysML language schema and offers an equivalent textual syntax for model specification in tandem with the existing graphical syntax. This is aimed at supporting the development of time based simulation models useful for decision support and architecture verification and validation in systems engineering.
C1  - San Diego, CA, USA
C3  - Proceedings of the Model-Driven Approaches for Simulation Engineering Symposium
DA  - 2018///
PY  - 2018
PB  - Society for Computer Simulation International
SN  - 978-1-5108-6018-6
KW  - SysML
KW  - model based systems engineering
KW  - model driven engineering
ER  - 

TY  - JOUR
TI  - Model-Based Concept of Operations Development Using Gaming Simulation
AU  - Korfiatis, Peter
AU  - Cloutier, Robert
AU  - Zigh, Teresa
T2  - Simul. Gaming
AB  - Background. Extensive research exists in the application of gaming simulation to education, experimentation and policy. Systems engineers have begun to utilize gaming simulation during design. However, such applications have not extended to early design activities and have provided little evidence of value to systems engineering.Aim. The purpose of this research is to test the hypothesis that the use of gaming simulation will improve an artifact created early in the design process, the Concept of Operations CONOPS. The aim of this article is to provide an update to work in progress towards testing this hypothesis.Method. A gaming simulation was developed that allows system stakeholders to interact in an immersive environment and develop CONOPS.Results. As the research has matured, informal free-form testing has been conducted. Debriefing has shown that players perceive value from this gaming simulation and yielded observations relative to fidelity, validity, and usability.Conclusion. The conclusion of this article points to preliminary acceptance of the use of gaming simulation towards CONOPS development. Future work will validate this assertion using quantitative data collected from controlled experiments.
DA  - 2015/10//
PY  - 2015
DO  - 10.1177/1046878115571290
VL  - 46
IS  - 5
SP  - 471
EP  - 488
SN  - 1046-8781
UR  - https://doi.org/10.1177/1046878115571290
KW  - systems engineering
KW  - MBSE
KW  - model-based systems engineering
KW  - concept of operations
KW  - CONOPS
KW  - gaming simulation
KW  - immersive environments
ER  - 

TY  - CONF
TI  - Enabling Model Testing of Cyber-Physical Systems
AU  - GonzÃ¡lez, Carlos A.
AU  - Varmazyar, Mojtaba
AU  - Nejati, Shiva
AU  - Briand, Lionel C.
AU  - Isasi, Yago
T3  - MODELS '18
AB  - Applying traditional testing techniques to Cyber-Physical Systems (CPS) is challenging due to the deep intertwining of software and hardware, and the complex, continuous interactions between the system and its environment. To alleviate these challenges we propose to conduct testing at early stages and over executable models of the system and its environment. Model testing of CPSs is however not without difficulties. The complexity and heterogeneity of CPSs renders necessary the combination of different modeling formalisms to build faithful models of their different components. The execution of CPS models thus requires an execution framework supporting the cosimulation of different types of models, including models of the software (e.g., SysML), hardware (e.g., SysML or Simulink), and physical environment (e.g., Simulink). Furthermore, to enable testing in realistic conditions, the cosimulation process must be (1) fast, so that thousands of simulations can be conducted in practical time, (2) controllable, to precisely emulate the expected runtime behavior of the system and, (3) observable, by producing simulation data enabling the detection of failures. To tackle these challenges, we propose a SysML-based modeling methodology for model testing of CPSs, and an efficient SysML-Simulink cosimulation framework. Our approach was validated on a case study from the satellite domain.
C1  - New York, NY, USA
C3  - Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems
DA  - 2018///
PY  - 2018
DO  - 10.1145/3239372.3239409
SP  - 176
EP  - 186
PB  - Association for Computing Machinery
SN  - 978-1-4503-4949-9
UR  - https://doi.org/10.1145/3239372.3239409
KW  - Model-Based Systems Engineering
KW  - Cyber-Physical Systems
KW  - Model Testing
ER  - 

TY  - CONF
TI  - RAMSAS4Modelica: A Simulation-Driven Method for System Dependability Analysis Centered on the Modelica Language and Related Tools
AU  - Garro, Alfredo
AU  - Tundis, Andrea
T3  - DEVS '14
AB  - The paper presents RAMSAS4Modelica, a method for supporting the Dependability Analysis of systems centered on the Modelica language and related tools. RAMSAS4Modelica is the result of a redefinition of the four main phases of the RAMSAS method as well as of their activities and related work-products. Moreover, new activities have been introduced so to benefit of some proposed extensions to the Modelica language. These enhancements allow not only the modeling of dependability requirements but also their traceability and verification by combing Simulation with classical analysis techniques. Indeed, starting from a Modelica-based system design, such extensions also enable the generation of Fault Tree Diagrams for performing Fault Tree Analysis. The paper exemplifies these distinctive features of RAMSAS4Modelica through a case study concerning a Tank System.
C1  - San Diego, CA, USA
C3  - Proceedings of the Symposium on Theory of Modeling & Simulation - DEVS Integrative
DA  - 2014///
PY  - 2014
PB  - Society for Computer Simulation International
KW  - model-based systems engineering
KW  - modelica
KW  - simulation
KW  - system dependability
KW  - verification and validation
ER  - 

TY  - CONF
TI  - Model-Based Availability Analysis for Automated Production Systems: A Case Study
AU  - Mund, Jakob
AU  - Junker, Maximilian
AU  - Bougouffa, Safa
AU  - Cha, Suhyun
AU  - Vogel-Heuser, Birgit
T3  - MEMOCODE '17
AB  - Availability is among the most important characteristics of manufacturing systems since it affects the productivity of the system. Yet, we argue that current approaches are inadequate for thoroughly analyzing availability of such systems.In this paper, we present a novel approach for analyzing availability of automated production systems. This approach extends the system's normative specification with deviation models to represent the occurrence and effects of faults in system components, and specific models to precisely capture failure definitions and availability requirements. Based thereon, we show how the system's conformance to availability requirements can be verified automatically using the probabilistic model-checker Prism. To facilitate applicability of the approach, we provide basic building blocks for common fault occurrences, effects, and availability metrics. Moreover, we illustrate its applicability and benefits by evaluating the effects of using different positioning sensors on the availability of the Pick-and-Place Unit, a lab-scale demonstrator considered suitable for evaluations of novel research approaches.We argue that our approach is able to verify quantitative availability requirements while reducing redundant models, and thereby, potential inconsistencies.
C1  - New York, NY, USA
C3  - Proceedings of the 15th ACM-IEEE International Conference on Formal Methods and Models for System Design
DA  - 2017///
PY  - 2017
DO  - 10.1145/3127041.3127051
SP  - 46
EP  - 55
PB  - Association for Computing Machinery
SN  - 978-1-4503-5093-8
UR  - https://doi.org/10.1145/3127041.3127051
KW  - model-based systems engineering
KW  - industrial automation
KW  - probabilistic model checking
ER  - 

TY  - CONF
TI  - Cyber-Physical Systems Engineering: Model-Based Solutions
AU  - Garro, Alfredo
AU  - Vaccaro, Vittorio
AU  - DutrÃ©, Stefan
AU  - Stegen, Jef
T3  - SummerSim '19
AB  - As cyber-physical systems become more widespread, the scale and complexity of hardware and software is increasing dramatically. Requirement Engineering plays a main role in this field. It gives a better vision of the problem, facilitates the development of the components, makes the final product better and facilitates business choices. In this context, a lot of work is already being carried out to improve the functionalities offered to designers for the development of systems. This paper shows how to improve the efficiency of cyber-physical system development by redefining some phases of the underlying systems engineering processes. It also shows how the complexity that characterizes these processes can be reduced with the use of innovative techniques for the integration and visualization of system models.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2019 Summer Simulation Conference
DA  - 2019///
PY  - 2019
PB  - Society for Computer Simulation International
KW  - model-based systems engineering
KW  - integration and visualization
KW  - requirements management
KW  - safety analysis
ER  - 

TY  - CONF
TI  - A Model-Based Method for System Reliability Analysis
AU  - Garro, Alfredo
AU  - Tundis, Andrea
T3  - TMS/DEVS '12
AB  - System reliability is an important non-functional requirement whose satisfaction is even crucial for mission critical systems. However, the increase in both system complexity and accuracy required in the reliability analyses often makes inadequate traditional techniques which are mainly based on statistical and probabilistic tools and on the hierarchical decomposition of the system in terms of its components. Moreover, the integration of classical techniques in typical system development processes, and especially in the design phases, is quite difficult and thus their use is often postponed to the later development stages (e.g. system verification) with the possible risk of having to revise even basic design choices and with a consequent increase in both completion time and development cost. To address these issues, the paper proposes a Model-Based method for system reliability analysis which combines in a unified framework the benefits of popular OMG modeling languages (UML, SysML) with the wide adopted Mathworks simulation and analysis environments (Matlab, Simulink). The flexibility and scalability of the proposal, as well as its effectiveness in evaluating through simulation the system reliability performances, is exemplified through a case study concerning the reliability analysis of a Flight Management System.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2012 Symposium on Theory of Modeling and Simulation - DEVS Integrative M&S Symposium
DA  - 2012///
PY  - 2012
PB  - Society for Computer Simulation International
SN  - 978-1-61839-786-7
KW  - SysML
KW  - model-based systems engineering
KW  - integrated avionics systems
KW  - reliability analysis
ER  - 

TY  - CONF
TI  - Building the Virtual Product with Big Models
AU  - Brown, Barclay
AU  - Mittal, Saurabh
AU  - Tolk, Andreas
AU  - Arafat, Sayyidul
T3  - SummerSim '15
AB  - Models have demonstrated proven benefits in specific aspects of the engineering process. Mechanical models, performance models, algorithmic models, systems engineering architecture models and others have proven useful and even perhaps indispensable. Models provide value at different points in the lifecycle with some supporting design and architecture while others simulate and evaluate aspects of the new product or system.The panel and paper will explore the question, "what will be needed to build a virtual product using comprehensive, multi-domain (big) models?" What new processes, concepts and frameworks must be embraced and what old ones must be discarded?
C1  - San Diego, CA, USA
C3  - Proceedings of the Conference on Summer Computer Simulation
DA  - 2015///
PY  - 2015
SP  - 1
EP  - 6
PB  - Society for Computer Simulation International
SN  - 978-1-5108-1059-4
KW  - MBSE
KW  - model-based systems engineering
KW  - composability
KW  - interoperability
KW  - model engineering
KW  - model-driven systems engineering
KW  - ontology
KW  - system-of-systems
ER  - 

TY  - CONF
TI  - Monitoring Morphisms to Support Sustainable Interoperability of Enterprise Systems
AU  - Ferreira, JosÃ©
AU  - Agostinho, Carlos
AU  - Sarraipa, JoÃ£o
AU  - Jardim-Goncalves, Ricardo
T3  - OTM'11
AB  - Nowadays, organizations are required to be part of a global collaborative world. Sometimes this is the only way they can access new and wider markets, reaching new opportunities, skills and sharing assets, e.g. tools, lessons learnt. However, due to the different sources of enterprise models and semantics, organizations are experiencing difficulties in exchanging information electronically and seamlessly. To solve this issue, most of them try to attain interoperability by establishing peer-to-peer mapping morphisms with different business partners, or in optimized networks use neutral data standards to regulate communications. Moreover, more and more enterprise systems are dynamic, looking forward to meet further requirements, causing new interoperability problems and efficiency reduction. This paper proposes a multiagent framework to monitor existing enterprise system networks, being capable of detecting morphism changes. An example from systems engineering is presented, where network harmonization breakings are timely detected, and possible solutions are suggested to regain the interoperable status, thus enhancing robustness for reaching sustainability of business networks.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 2011th Confederated International Conference on On the Move to Meaningful Internet Systems
DA  - 2011///
PY  - 2011
SP  - 71
EP  - 82
PB  - Springer-Verlag
SN  - 978-3-642-25125-2
KW  - model-based systems engineering
KW  - interoperability
KW  - model morphisms
KW  - multi agent systems
KW  - sustainable interoperability
ER  - 

TY  - CONF
TI  - Detecting Inconsistencies in Annotated Product Line Models
AU  - Bilic, Damir
AU  - Carlson, Jan
AU  - Sundmark, Daniel
AU  - Afzal, Wasif
AU  - Wallin, Peter
T3  - SPLC '20
AB  - Model-based product line engineering applies the reuse practices from product line engineering with graphical modeling for the specification of software intensive systems. Variability is usually described in separate variability models, while the implementation of the variable systems is specified in system models that use modeling languages such as SysML. Most of the SysML modeling tools with variability support, implement the annotation-based modeling approach. Annotated product line models tend to be error-prone since the modeler implicitly describes every possible variant in a single system model. To identifying variability-related inconsistencies, in this paper, we firstly define restrictions on the use of SysML for annotative modeling in order to avoid situations where resulting instances of the annotated model may contain ambiguous model constructs. Secondly, inter-feature constraints are extracted from the annotated model, based on relations between elements that are annotated with features. By analyzing the constraints, we can identify if the combined variability- and system model can result in incorrect or ambiguous instances. The evaluation of our prototype implementation shows the potential of our approach by identifying inconsistencies in the product line model of our industrial partner which went undetected through several iterations of the model.
C1  - New York, NY, USA
C3  - Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A - Volume A
DA  - 2020///
PY  - 2020
DO  - 10.1145/3382025.3414969
PB  - Association for Computing Machinery
SN  - 978-1-4503-7569-6
UR  - https://doi.org/10.1145/3382025.3414969
KW  - SysML
KW  - model-based systems engineering
KW  - variability modeling
KW  - consistency checking
KW  - product line engineering
ER  - 

TY  - CONF
TI  - DEVS-Based Evaluation of UAVs-Based Target-Search Strategies in Realistically-Modeled Missions
AU  - BordÃ³n-Ruiz, Juan Bautista
AU  - Besada-Portas, Eva
AU  - Risco-MartÃ­n, JosÃ© Luis
AU  - LÃ³pez-Orozco, JosÃ© Antonio
T3  - SIGSIM-PADS '21
AB  - Searching for targets from a group of Unmanned Aerial Vehicles (UAVs) is a complex problem, whose applications range from the localization of military targets to search and rescue missions. Determining the best locations to search within the mission scenario requires to consider the dynamics of the UAVs and of its onboard sensors, and the uncertainty of the problem, usually related with the target initial location and dynamics, and with the sensor likelihood. Besides, what is best is not always the same (e.g. it can be maximizing the detection probability and/or minimizing the target detection time, while ensuring communications, smooth trajectories, energy saving, etc). These makes the evaluation of UAVs target-search strategies a complex system itself. In this paper, we tackle this problem using the Discrete Event System Specification (DEVS) to exploit its modular and hierarchical design, and to improve the reusability and scalability of our evaluation system. DEVS also provides simple and clear semantics to manage the complexities of the system, represents an explicit separation between the model specification and the corresponding simulation, and helps us to debug and verify our model, as the results of the paper show.
C1  - New York, NY, USA
C3  - Proceedings of the 2021 ACM SIGSIM Conference on Principles of Advanced Discrete Simulation
DA  - 2021///
PY  - 2021
DO  - 10.1145/3437959.3459253
SP  - 141
EP  - 152
PB  - Association for Computing Machinery
SN  - 978-1-4503-8296-0
UR  - https://doi.org/10.1145/3437959.3459253
KW  - model based systems engineering
KW  - Bayesian search
KW  - discrete event systems
KW  - multi-agent systems
KW  - multi-objective path planning
ER  - 

TY  - JOUR
TI  - A Model-Driven Approach to Enable the Simulation of Complex Systems on Distributed Architectures
AU  - Bocciarelli, Paolo
AU  - DâAmbrogio, Andrea
AU  - Falcone, Alberto
AU  - Garro, Alfredo
AU  - Giglio, Andrea
T2  - Simulation
AB  - The increasing complexity of modern systems makes their design, development, and operation extremely challenging and therefore new systems engineering and modeling and simulation (M&amp;S) methods, techniques, and tools are emerging, also to benefit from distributed simulation environments. In this context, one of the most mature and popular standards for distributed simulation is the IEEE 1516-2010 - Standard for M&amp;S high level architecture (HLA). However, building and maintaining distributed simulations components, based on the IEEE 1516-2010 standard, is still a challenging and effort-consuming task. To ease the development of full-fledged HLA-based simulations, the paper proposes the MONADS method (MOdel-driveN Architecture for Distributed Simulation), which relies on the model-driven systems engineering paradigm. The method takes as input system models specified in Systems Modeling Language, the reference modeling language in the systems engineering field, and produces as output the final code of the corresponding HLA-based distributed simulation through a chain of model-to-model and model-to-text transformations. The obtained simulation code is based on the HLA Development Kit software framework, which has been developed by the SMASH-Lab (System Modeling and Simulation Hub - Laboratory) of the University of Calabria (Italy), in cooperation with the Software, Robotics, and Simulation Division (ER) of NASAâs Lyndon B. Johnson Space Center (JSC) in Houston (TX, USA). The effectiveness of the method is shown through a case study that concerns a military patrol operation, in which a set of drones are engaged to patrol the border of a military area, in order to prevent both ground and flight attacks from entering the area.
DA  - 2019/12//
PY  - 2019
DO  - 10.1177/0037549719829828
VL  - 95
IS  - 12
SP  - 1185
EP  - 1211
SN  - 0037-5497
UR  - https://doi.org/10.1177/0037549719829828
KW  - model-based systems engineering
KW  - distributed simulation
KW  - high-level architecture
KW  - Modeling and simulation
ER  - 

TY  - CONF
TI  - A Co-Simulation Approach for the Evaluation of Multi-Core Embedded Platforms in Cyber-Physical Systems
AU  - Vanommeslaeghe, Yon
AU  - Van Acker, Bert
AU  - Vanherpen, Ken
AU  - De Meulenaere, Paul
T3  - SummerSim '20
AB  - The increasing complexity of Cyber-Physical Systems (CPS) causes a shift from traditional single-core embedded platforms to complex multi-core or even heterogeneous platforms to meet the performance requirements. However, the deployment of control or monitoring algorithms on such platforms is not straight-forward as the temporal behaviour of the embedded platform can affect the functional behaviour of these algorithms. In this paper we propose a co-simulation strategy for multi-core embedded platforms. This allows to evaluate the impact of the deployment on the behaviour of the algorithm early on in the design process, this way reducing the risk of costly re-engineering and allowing for a more agile design process. Our approach is validated using an example case in different deployment scenarios, after which its applicability is demonstrated using a real-world use case.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2020 Summer Simulation Conference
DA  - 2020///
PY  - 2020
PB  - Society for Computer Simulation International
SN  - 978-1-71381-429-0
KW  - model-based systems engineering
KW  - co-simulation
KW  - control embedded co-design
KW  - cyber-physical systems
KW  - multi-core embedded platforms
ER  - 

TY  - CONF
TI  - A Library of Embedded Platform Components for the Simulation of Real-Time Embedded Systems
AU  - Mertens, Joost
AU  - Vanherpen, Ken
AU  - Denil, Joachim
AU  - De Meulenaere, Paul
T3  - TMS '19
AB  - When modeling the control algorithm(s) of a Cyber-Physical System, control engineers evaluate if its behavior satisfies the specifications by executing a Model-in-the-Loop simulation. However, often the deployment of a control algorithm on an embedded system affects its behavior. Tools exist that include these deployment effects in the Model-in-the-Loop simulation. However, they require engineers to significantly modify existing control models to incorporate these effects at this (higher) abstraction level. As such, engineers are restricted in evaluating various deployment configurations. We created a library of configurable embedded components that enables an engineer to model the embedded platform at the same level of abstraction as the model of the control algorithm. Our method requires minimal changes to the modeled control algorithm so that evaluating its deployed behavior, using a co-simulation, is facilitated. We compared our co-simulation results with a deployed system and evaluated our approach with current state-of-the-art tools.
C1  - San Diego, CA, USA
C3  - Proceedings of the Theory of Modeling and Simulation Symposium
DA  - 2019///
PY  - 2019
PB  - Society for Computer Simulation International
KW  - model-based systems engineering
KW  - control embedded co-design
KW  - cyber-physical systems
KW  - real-time simulation
KW  - SimEventsÂ®
ER  - 

TY  - JOUR
TI  - Exploring Systems Engineering Patterns in Government Acquisition of Complex Information Systems
AU  - Doskey, Steven
AU  - Mazzuchi, Thomas
AU  - Sarkani, Shahram
T2  - Inf. Knowl. Syst. Manag.
AB  - In this paper, the authors describe an innovative means of identifying patterns present in systems engineering activity when government organization acquire and build complex information systems. The research uses a Bayesian belief network to model causal relationships present in government acquisitions to create a systems engineering relative effectiveness index model that can be used to identify and analyze systems engineering patterns; and subsequently forecast possible areas of performance risks within projects and organizations.
DA  - 2013/04//
PY  - 2013
VL  - 12
IS  - 2
SP  - 97
EP  - 114
SN  - 1389-1995
KW  - Model-Based Systems Engineering
KW  - Knowledge Integration
KW  - Organizational Management
KW  - Risk Management
KW  - Systems Engineering Management
ER  - 

TY  - CONF
TI  - The Experiment Model and Validity Frame in M&S
AU  - Denil, Joachim
AU  - Klikovits, Stefan
AU  - Mosterman, Pieter J.
AU  - Vallecillo, Antonio
AU  - Vangheluwe, Hans
T3  - TMS/DEVS '17
AB  - Modelling and Simulation approaches use system models to conduct simulation experiments. Experimental frames have been applied in this context to formally define a system's context. During the creation of an experimental frame for a simple spring model it becomes clear that experimental frames in their current definition lack certain properties and omit relevant information. Our approach describes the process of capturing the context of models and systems to provide truly reproducible experiment descriptions. The information, captured as experimental setups, can then be used for different purposes and in different scenarios, in particular for checking the validity of a model, the discovery of suitable models for the design of a system, and for calibrating models.
C1  - San Diego, CA, USA
C3  - Proceedings of the Symposium on Theory of Modeling & Simulation
DA  - 2017///
PY  - 2017
PB  - Society for Computer Simulation International
KW  - model-based systems engineering (MBSE)
KW  - cyber-physical systems (CPS)
KW  - multi-paradigm modelling (MPM)
ER  - 

TY  - CONF
TI  - Virtual Verification of System Designs against System Requirements
AU  - Schamai, Wladimir
AU  - Helle, Philipp
AU  - Fritzson, Peter
AU  - Paredis, Christiaan J. J.
T3  - MODELS'10
AB  - System development and integration with a sufficient maturity at entry into service is a competitive challenge in the aerospace sector. With the ever-increasing complexity of products, this can only be achieved using efficient model-based techniques for system design as well as for system testing. However, natural language requirements engineering is an established technique that cannot be completely replaced for a number of reasons. This is a fact that has to be considered by any new approach. Building on the general idea of model-based systems engineering, we aim at building an integrated virtual verification environment for modeling systems, requirements, and test cases, so that system designs can be simulated and verified against the requirements in the early stages of system development. This paper provides a description of the virtual verification of system designs against system requirements methodology and exemplifies its application in a ModelicaML modeling environment.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 2010 International Conference on Models in Software Engineering
DA  - 2010///
PY  - 2010
SP  - 75
EP  - 89
PB  - Springer-Verlag
SN  - 978-3-642-21209-3
KW  - requirements
KW  - MBSE
KW  - verification
KW  - model-based testing
KW  - Modelica
KW  - ModelicaML
ER  - 

TY  - JOUR
TI  - Model-Based Safety Assessment with SysML and Component Fault Trees: Application and Lessons Learned
AU  - Munk, Peter
AU  - Nordmann, Arne
T2  - Softw. Syst. Model.
AB  - Mastering the complexity of safety assurance for modern, software-intensive systems is challenging in several domains, such as automotive, robotics, and avionics. Model-based safety analysis techniques show promising results to handle this challenge by automating the generation of required artifacts for an assurance case. In this work, we adapt prominent approaches and propose to augment of SysML models with component fault trees (CFTs) to support the fault tree analysis and the failure mode and effects analysis. While most existing approaches based on CFTs are only targeting the system topology, e.&nbsp;g., UML class diagrams, we propose an integration of CFTs with SysML internal block diagrams as well as SysML activity diagrams. We realized our approach in a prototypical tool. We conclude with best practices and lessons learned that emerged from our case studies with an electronic power steering system and a boost recuperation system.
DA  - 2020/07//
PY  - 2020
DO  - 10.1007/s10270-020-00782-w
VL  - 19
IS  - 4
SP  - 889
EP  - 910
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-020-00782-w
KW  - MBSE
KW  - Model-based systems engineering
KW  - CFT
KW  - Component fault tree
KW  - Dependability
KW  - Failure mode and effects analysis
KW  - Fault tree analysis
KW  - Fault trees
KW  - FMEA
KW  - FTA
KW  - MBSA
KW  - Model-based safety analysis
KW  - Reliability
KW  - Safety
ER  - 

TY  - CHAP
TI  - Model Checking as a Service: Towards Pragmatic Hidden Formal Methods
AU  - HorvÃ¡th, Benedek
AU  - Graics, Bence
AU  - Hajdu, Ãkos
AU  - Micskei, ZoltÃ¡n
AU  - MolnÃ¡r, Vince
AU  - RÃ¡th, IstvÃ¡n
AU  - Andolfato, Luigi
AU  - Gomes, Ivan
AU  - Karban, Robert
T2  - Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
AB  - Executable models can be used to support all engineering activities in Model-Based Systems Engineering. Testing and simulation of such models can provide early feedback about design choices. However, in today's complex systems, failures could arise due to subtle errors that are hard to find without checking all possible execution paths. Formal methods, and especially model checking can uncover such subtle errors, yet their usage in practice is limited due to the specialized expertise and high computing power required. Therefore we created an automated, cloud-based environment that can verify complex reachability properties on SysML State Machines using hidden model checkers. The approach and the prototype is illustrated using an example from the aerospace domain.
CY  - New York, NY, USA
DA  - 2020///
PY  - 2020
PB  - Association for Computing Machinery
SN  - 978-1-4503-8135-2
UR  - https://doi.org/10.1145/3417990.3421407
ER  - 

TY  - JOUR
TI  - SysML-Based Uniform Behavior Modeling and Automated Mapping of Design and Simulation Model for Complex Mechatronics
AU  - Cao, Yue
AU  - Liu, Yusheng
AU  - Fan, Hongri
AU  - Fan, Bo
T2  - Comput. Aided Des.
AB  - Model-based systems engineering (MBSE) is becoming a promising solution for the design of mechatronic systems with the increasing of complexity. To facilitate system design engineers to express their various behavioral requirements, a uniform behavior modeling approach is proposed based on SysML. A set of new constructs are proposed which compose the uniform behavior modeling profile. Based on the profile, the hybrid behavior of the mechatronic system can be uniformly represented in a multi-view and hierarchical way. Moreover, the language- and tool-dependent simulation related information is also described based on SysML as the complement part of the uniform behavior model, which can be transformed to different simulation platforms based on the triple graph grammar (TGG). In this way, the system-level design of the mechatronic system is simulated and verified automatically in the early design stage. Finally, the method is implemented and an example is given to illustrate the whole process.
DA  - 2013/03//
PY  - 2013
DO  - 10.1016/j.cad.2012.05.001
VL  - 45
IS  - 3
SP  - 764
EP  - 776
SN  - 0010-4485
UR  - https://doi.org/10.1016/j.cad.2012.05.001
KW  - SysML
KW  - Model transformation
KW  - Hybrid behavior modeling
KW  - Mechatronic system
KW  - System-level behavior
ER  - 

TY  - CONF
TI  - Automatic SysML-Based Safety Analysis
AU  - Helle, Philipp
T3  - ACES-MB '12
AB  - Model-based Safety Analysis (MBSA) techniques exist that ensure an increased consistency by formalising the safety analysis and allow automation of the safety calculations. With the increased acceptance of Model-based Systems Engineering (MBSE) as the new systems engineering paradigm, it seems natural to combine MBSE and MBSA. This work provides a methodology and tool support for an integrated MBSE and MBSA on one common model based on SysML which allows the systems engineers to perform an automated safety analysis to receive quick feedback on their design decisions during the system design phase.
C1  - New York, NY, USA
C3  - Proceedings of the 5th International Workshop on Model Based Architecting and Construction of Embedded Systems
DA  - 2012///
PY  - 2012
DO  - 10.1145/2432631.2432635
SP  - 19
EP  - 24
PB  - Association for Computing Machinery
SN  - 978-1-4503-1800-6
UR  - https://doi.org/10.1145/2432631.2432635
KW  - SysML
KW  - MBSE
KW  - safety analysis
KW  - MBSA
ER  - 

TY  - CONF
TI  - Unit Testing Platform to Verify Devs Models
AU  - Henares, Kevin
AU  - Risco-MartÃ­n, JosÃ© L.
AU  - Ayala, JosÃ© L.
AU  - Hermida, RomÃ¡n
T3  - SummerSim '20
AB  - The natural progression from classic Model-Based Systems Engineering (MBSE) methodologies to Modeling and Simulation-Based Systems Engineering (M&amp;SBSE) brings the need for more flexible and powerful validation tools. Completing the structure and descriptions of static models with self-diagnosis greatly facilitates the development, implementation, and validation of complex models. However, current simulation development environments and libraries often lack providing complete tools to validate these complex models straightforwardly and with the proper level of detail.In this article, we tackle this issue transferring one of the traditional software testing methods, unit testing, to the modeling and simulation field. To this end, we integrate a unit-testing method to the DEVS methodology, allowing the specification of expected states, outcomes, and behaviors of the simulation modules in an XML-based syntax, in all the levels of the hierarchical design. As a result, this methodology enables the generation of powerful and easy-readable verification files.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2020 Summer Simulation Conference
DA  - 2020///
PY  - 2020
PB  - Society for Computer Simulation International
SN  - 978-1-71381-429-0
KW  - verification
KW  - DEVS
KW  - unit testing
KW  - validation
ER  - 

TY  - JOUR
TI  - Trade-off Analysis for SysML Models Using Decision Points and CSPs
AU  - Leserf, Patrick
AU  - de Saqui-Sannes, Pierre
AU  - Hugues, JÃ©rÃ´me
T2  - Softw. Syst. Model.
AB  - The expected benefits of model-based systems engineering (MBSE) include assistance to the system designer in finding the set of optimal architectures and making trade-off analysis. Design objectives such as cost, performance and reliability are often conflicting. The SysML-based methods OOSEM and the ARCADIA method focus on the design and analysis of one alternative of the system. They freeze the topology and the execution platform before optimization starts. Further, their limitation quickly appears when a large number of alternatives were evaluated. The paper avoids these problems and improves trade-off analysis in a MBSE approach by combining the SysML modeling language and so-called âdecision points.â An enhanced SysML model with decision points shows up alternatives for component redundancy and instance selection and allocation. The same SysML model is extended with constraints and objective functions using an optimization context and parametric diagrams. Then, a representation of a constraint satisfaction multi-criteria objective problem is generated and solved with a combination of solvers. A demonstrator implements the proposed approach into an Eclipse plug-in; it uses the Papyrus and CSP solvers, both are open-source tools. A case study illustrates the methodology: a mission controller for an Unmanned Aerial Vehicle that includes a stereoscopic camera sensor module.
DA  - 2019/12//
PY  - 2019
DO  - 10.1007/s10270-019-00717-0
VL  - 18
IS  - 6
SP  - 3265
EP  - 3281
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00717-0
KW  - SysML
KW  - MBSE
KW  - CSP
KW  - Decision points
KW  - Optimal architecture design
KW  - Optimization
KW  - Papyrus
KW  - System engineering
ER  - 

TY  - CONF
TI  - Extending MBSE Methodology and SysML Formalism to Integrate Human Considerations
AU  - Raymond, Camille
AU  - Prun, Daniel
T3  - HCI-Aero '16
AB  - In response to the challenges related to integrate human considerations within complex interactive systems, the Human-System Integration (HSI) initiative has been proposed.Nevertheless, the HSI approach is difficult to fit efficiently into the system engineering processes because of the lack of shared methodologies, modeling semantics and tools.This paper focuses on the needs for a new methodology and an adapted formalism to improve the collaboration between the system engineers and HSI practitioners. It concludes with the presentation of our methodology based on the Model-Based System Engineering (MBSE) and the SysML modelling language.
C1  - New York, NY, USA
C3  - Proceedings of the International Conference on Human-Computer Interaction in Aerospace
DA  - 2016///
PY  - 2016
DO  - 10.1145/2950112.2951852
PB  - Association for Computing Machinery
SN  - 978-1-4503-4406-7
UR  - https://doi.org/10.1145/2950112.2951852
KW  - SysML
KW  - MBSE
KW  - system engineering
KW  - human-system integration
ER  - 

TY  - BOOK
TI  - A Practical Guide to SysML, Third Edition: The Systems Modeling Language
AU  - Friedenthal, Sanford
AU  - Moore, Alan
AU  - Steiner, Rick
AB  - A Practical Guide to SysML, Third Edition, fully updated for SysML version 1.4, provides a comprehensive and practical guide for modeling systems with SysML. With their unique perspective as leading contributors to the language, Friedenthal, Moore, and Steiner provide a full description of the language along with a quick reference guide and practical examples to help you use SysML. The book begins with guidance on the most commonly used features to help you get started quickly. Part 1 explains the benefits of a model-based approach, providing an overview of the language and how to apply SysML to model systems. Part 2 includes a comprehensive description of SysML that provides a detailed understanding that can serve as a foundation for modeling with SysML, and as a reference for practitioners. Part 3 includes methods for applying model-based systems engineering using SysML to specify and design systems, and how these methods can help manage complexity. Part 4 deals with topics related to transitioning MBSE practice into your organization, including integration of the system model with other engineering models, and strategies for adoption of MBSE. Learn how and why to deploy MBSE in your organization with an introduction to systems and model-based systems engineering Use SysML to describe systems with this general overview and a detailed description of the Systems Modeling Language Review practical examples of MBSE methodologies to understand their application to specifying and designing a system Includes comprehensive modeling notation tables as an appendix that can be used as a standalone reference
CY  - San Francisco, CA, USA
DA  - 2014///
PY  - 2014
ET  - 3rd
PB  - Morgan Kaufmann Publishers Inc.
SN  - 0-12-800202-6
ER  - 

TY  - JOUR
TI  - Requirement-Driven Model-Based Development Methodology Applied to the Design of a Real-Time MEG Data Processing Unit
AU  - Chen, Tao
AU  - Schiek, Michael
AU  - Dammers, JÃ¼rgen
AU  - Shah, N. Jon
AU  - van Waasen, Stefan
T2  - Softw. Syst. Model.
AB  - The paper describes a multidisciplinary work that uses a model-based systems engineering method for developing real-time magnetoencephalography (MEG) signal processing. We introduce a requirement-driven, model-based development methodology (RDD and MBD) to provide a high-level environment and efficiently handle the complexity of computation and control systems. The proposed development methodology focuses on the use of System Modeling Language to define high-level model-based design descriptions for later implementation in heterogeneous hardware/software systems. The proposed approach was applied to the implementation of a real-time artifact rejection unit in MEG signal processing and demonstrated high efficiency in designing complex high-performance embedded systems. In MEG signal processing, biological artifacts in particular have a signal strength that overtop the signal of interest by orders of magnitude and must be removed from the measurement to achieve high-quality source reconstructions with minimal error contributions. However, many existing brainâcomputer interface studies overlook real-time artifact removal because of the demanding computational process. In this work, an automated real-time artifact rejection method is introduced, which is based on the recently presented method âocular and cardiac artifact rejection for real-time analysis in MEGâ (OCARTA). The method has been implemented using the RDD and MBD approach and successfully verified on a Virtex-6 field-programmable gate array.
DA  - 2020/11//
PY  - 2020
DO  - 10.1007/s10270-020-00797-3
VL  - 19
IS  - 6
SP  - 1567
EP  - 1587
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-020-00797-3
KW  - SysML
KW  - MBSE
KW  - Artifact rejection
KW  - MEG
KW  - Neurofeedback
KW  - Real-time systems
ER  - 

TY  - BOOK
TI  - A Practical Guide to SysML: The Systems Modeling Language
AU  - Friedenthal, Sanford
AU  - Moore, Alan
AU  - Steiner, Rick
AB  - A general purpose graphical modeling language used to specify, analyze, and design systems that may include hardware, software, and personnel, SysML is now being adopted by companies across a broad range of industries, including aerospace and defense, automotive, and IT system developers. This book is the bestselling, authoritative guide to SysML for systems and software engineers, providing a comprehensive and practical resource for modeling systems with SysML. Fully updated to cover newly released version 1.3, it includes a full description of the modeling language along with a quick reference guide, and shows how an organization or project can transition to model-based systems engineering using SysML, with considerations for processes, methods, tools, and training. Numerous examples to help readers understand how SysML can be used in practice, while reference material facilitates studying for the OMG Systems Modeling Professional (OCSMP) Certification Program, designed to test candidates knowledge of SysML and their ability to use models to represent real-world systems. Authoritative and comprehensive guide to understanding and implementing SysML A quick reference guide, including language descriptions and practical examples Application of model-based methodologies to solve complex system problems Guidance on transitioning to model-based systems engineering using SysML Preparation guide for OMG Certified Systems Modeling Professional (OCSMP) Table of Contents Part I Introduction Systems Engineering Overview Model-Based Systems Engineering3 SysML Language Overview SysML Language Overview Part II Language Description SysML Language Architecture Organizing the Model with Packages Modeling Structure with Blocks Modeling Constraints with Parametrics Modeling Flow-Based Behavior with Activities Modeling Message-Based Behavior with Interactions Modeling Event-Based Behavior with State Machines Modeling Functionality with Use Cases Modeling Text-Based Requirements and their Relationship to Design Modeling Cross-Cutting Relationships with Allocations Customizing SysML for Specific Domains Part III Modeling Examples Water Distiller Example Using Functional Analysis Residential Security System Example Using the Object-Oriented Systems Engineering Method Part IV Transitioning to Model-Based Systems Engineering Integrating SysML into a Systems Development Environment Deploying SysML into an Organization APPENDIXES A-1 SysML Reference Guide A-2 Cross Reference Guide to the OMG Systems Modeling Professional Certification Program (OCSMP) - NEW
CY  - San Francisco, CA, USA
DA  - 2011///
PY  - 2011
ET  - 2
PB  - Morgan Kaufmann Publishers Inc.
SN  - 978-0-12-385207-6
ER  - 

TY  - CHAP
TI  - Teaching Software Modelling in an Undergraduate Introduction to Software Engineering
AU  - Westphal, Bernd
T2  - Proceedings of the 22nd International Conference on Model Driven Engineering Languages and Systems
AB  - In this article we present our design of an (otherwise completely ordinary) undergraduate introduction to software engineering with an emphasis on contemporary software modelling.A distinguishing aspect of our course is that we aim at a comprehensive introduction of modelling in two regards. Firstly, we introduce proper sub-languages of common modelling languages like UML class diagrams (rather than sampling examples or covering as many building blocks as possible) with a complete formal abstract syntax and semantics (so to give exact meaning to all models from the sub-language). Secondly, we emphasise issues arising from software models in the context of software engineering, e.g., that (formal) analysis results needs proper interpretation wrt. the considered software.We discuss our objectives wrt. modelling in software engineering, and outline the content of the course and the narratives that we use to reach these objectives. Evaluation results from four seasons of teaching the course give no indication of over-straining students wrt. level or workload.
DA  - 2019///
PY  - 2019
SP  - 690
EP  - 699
PB  - IEEE Press
SN  - 978-1-72815-125-0
UR  - https://doi.org/10.1109/MODELS-C.2019.00105
ER  - 

TY  - CONF
TI  - PrivDPI: Privacy-Preserving Encrypted Traffic Inspection with Reusable Obfuscated Rules
AU  - Ning, Jianting
AU  - Poh, Geong Sen
AU  - Loh, Jia-Ch'ng
AU  - Chia, Jason
AU  - Chang, Ee-Chien
T3  - CCS '19
AB  - Network middleboxes perform deep packet inspection (DPI) to detect anomalies and suspicious activities in network traffic. However, increasingly these traffic are encrypted and middleboxes can no longer make sense of them. A recent proposal by Sherry et al. (SIGCOMM 2015), named BlindBox, enables the middlebox to perform inspection in a privacy-preserving manner. BlindBox deploys garbled circuit to generate encrypted rules for the purpose of inspecting the encrypted traffic directly. However, the setup latency (which could be 97s on a ruleset of 3,000 as reported) and overhead size incurred by garbled circuit are high. Since communication can only be commenced after the encrypted rules being generated, such delay is intolerable in many real-time applications. In this work, we present PrivDPI, which reduces the setup delay while retaining similar privacy guarantee. Compared to BlindBox, for a ruleset of 3,000, our encrypted rule generation is 288x faster and requires 290,227x smaller overhead for the first session, and is even 1,036x faster and requires 3424,505x smaller overhead over 20 consecutive sessions. The performance gain is based on a new technique for generating encrypted rules as well as the idea of reusing intermediate results generated in previous sessions across subsequent sessions. This is in contrast to Blindbox which performs encrypted rule generation from scratch for every session. Nevertheless, PrivDPI is 6x slower in generating the encrypted traffic tokens, yet in our implementation, the token encryption rate of PrivDPI is more than 17,271 per second which is sufficient for many real-time applications. Moreover, the intermediate values generated in each session can be reused across subsequent sessions for repeated tokens, which could further speedup token encryption. Overall, our experiment shows that PrivDPI is practical and especially suitable for connections with short flows.
C1  - New York, NY, USA
C3  - Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security
DA  - 2019///
PY  - 2019
DO  - 10.1145/3319535.3354204
SP  - 1657
EP  - 1670
PB  - Association for Computing Machinery
SN  - 978-1-4503-6747-9
UR  - https://doi.org/10.1145/3319535.3354204
KW  - encrypted traffic inspection
KW  - middlebox privacy
KW  - network privacy
ER  - 

TY  - JOUR
TI  - Modeling for Supervisor Synthesis â a Lock-Bridge Combination Case Study
AU  - Reijnen, Ferdie F. H.
AU  - Goorden, Martijn A.
AU  - van de Mortel-Fronczak, Joanna M.
AU  - Rooda, Jacobus E.
T2  - Discrete Event Dynamic Systems
AB  - Designing supervisory controllers for high-tech systems is becoming increasingly complex due to demands for verified safety, higher quality and availability, and extending functionality. Supervisor synthesis is a method to automatically derive a supervisor from a model of the plant and a model of the control requirements. While supervisor synthesis is an active research topic, only a few reports exist on industrial applications. One of the reasons for this is the lack of acquaintance of control engineers with modeling and specifying in the framework of automata. In addition to this, there are no clear guidelines for obtaining the necessary models for synthesis. In this paper, we describe a general way of modeling for the plant and the requirements in order to contribute towards the acceptance of supervisor synthesis in industry. This way of modeling is illustrated with an industrial case study in which a supervisory controller is synthesized for the Algera complex. The Algera complex consists of a waterway lock and a movable bascule bridge. The supervisor has to control 80 actuators based on the observations from 96 discrete sensors, in response to 63 control commands available from the operator. We show how to model the plant as a collection of extended finite-state automata, how to model the requirement as a collection of event conditions, how to synthesize the monolithic supervisor, and how to validate the resulting supervisor using continuous-time simulation.
DA  - 2020/09//
PY  - 2020
DO  - 10.1007/s10626-020-00314-0
VL  - 30
IS  - 3
SP  - 499
EP  - 532
SN  - 0924-6703
UR  - https://doi.org/10.1007/s10626-020-00314-0
KW  - Extended finite-state automata
KW  - Industrial application
KW  - Infrastructural systems
KW  - Supervisor synthesis
ER  - 

TY  - JOUR
TI  - Application of Machine Learning Techniques to the Flexible Assessment and Improvement of Requirements Quality
AU  - Moreno, ValentÃ­n
AU  - GÃ©nova, Gonzalo
AU  - Parra, Eugenio
AU  - Fraga, Anabel
T2  - Software Quality Journal
AB  - It is already common to compute quantitative metrics of requirements to assess their quality. However, the risk is to build assessment methods and tools that are both arbitrary and rigid in the parameterization and combination of metrics. Specifically, we show that a linear combination of metrics is insufficient to adequately compute a global measure of quality. In this work, we propose to develop a flexible method to assess and improve the quality of requirements that can be adapted to different contexts, projects, organizations, and quality standards, with a high degree of automation. The domain experts contribute with an initial set of requirements that they have classified according to their quality, and we extract their quality metrics. We then use machine learning techniques to emulate the implicit expertâs quality function. We provide also a procedure to suggest improvements in bad requirements. We compare the obtained rule-based classifiers with different machine learning algorithms, obtaining measurements of effectiveness around 85%. We show as well the appearance of the generated rules and how to interpret them. The method is tailorable to different contexts, different styles to write requirements, and different demands in quality. The whole process of inferring and applying the quality rules adapted to each organization is highly automated.
DA  - 2020/12//
PY  - 2020
DO  - 10.1007/s11219-020-09511-4
VL  - 28
IS  - 4
SP  - 1645
EP  - 1674
SN  - 0963-9314
UR  - https://doi.org/10.1007/s11219-020-09511-4
KW  - Automatic classification
KW  - Automatic improvement
KW  - Expertsâ judgment
KW  - Flexible assessment
KW  - Machine learning
KW  - Requirements quality
ER  - 

TY  - CHAP
TI  - P2DPI: Practical and Privacy-Preserving Deep Packet Inspection
AU  - Kim, Jongkil
AU  - Camtepe, Seyit
AU  - Baek, Joonsang
AU  - Susilo, Willy
AU  - Pieprzyk, Josef
AU  - Nepal, Surya
T2  - Proceedings of the 2021 ACM Asia Conference on Computer and Communications Security
AB  - The amount of encrypted Internet traffic almost doubles every year thanks to the wide adoption of end-to-end traffic encryption solutions such as IPSec, TLS and SSH. Despite all the benefits of user privacy the end-to-end encryption provides, the encrypted internet traffic blinds intrusion detection system (IDS) and makes detecting malicious traffic hugely difficult. The resulting conflict between the user's privacy and security has demanded solutions for deep packet inspection (DPI) over encrypted traffic. The approach of those solutions proposed to date is still restricted in that they require intensive computations during connection setup or detection. For example, BlindBox, introduced by Sherry et al. (SIGCOMM 2015) enables inspection over the TLS-encrypted traffic without compromising users' privacy, but its usage is limited due to a significant delay on establishing an inspected channel. PrivDPI, proposed more recently by Ning et al. (ACM CCS 2019), improves the overall efficiency of BlindBox and makes the inspection scenario more viable. Despite the improvement, we show in this paper that the user privacy of Ning et al.'s PrivDPI can be compromised entirely by the rule generator without involving any other parties, including the middlebox. Having observed the difficulties of realizing efficiency and security in the previous work, we propose a new DPI system for encrypted traffic, named "Practical and Privacy-Preserving Deep Packet Inspection (P2DPI)â. P2DPI enjoys the same level of security and privacy that BlindBox provides. At the same time, P2DPI offers fast setup and encryption and outperforms PrivDPI. Our results are supported by formal security analysis. We implemented our P2DPI and comparable PrivDPI and performed extensive experimentation for performance analysis and comparison.
CY  - New York, NY, USA
DA  - 2021///
PY  - 2021
SP  - 135
EP  - 146
PB  - Association for Computing Machinery
SN  - 978-1-4503-8287-8
UR  - https://doi.org/10.1145/3433210.3437525
ER  - 

TY  - JOUR
TI  - On the Use of Models for High-Performance Scientific Computing Applications: An Experience Report
AU  - Ober, Ileana
AU  - Palyart, Marc
AU  - Bruel, Jean-Michel
AU  - Lugato, David
T2  - Softw. Syst. Model.
AB  - This paper reports on a four-year project that aims to raise the abstraction level through the use of model-driven engineering (MDE) techniques in the development of scientific applications relying on high-performance computing. The development and maintenance of high-performance scientific computing software is reputedly a complex task. This complexity results from the frequent evolutions of supercomputers and the tight coupling between software and hardware aspects. Moreover, current parallel programming approaches result in a mixing of concerns within the source code. Our approach relies on the use of MDE and consists in defining domain-specific modeling languages targeting various domain experts involved in the development of HPC applications, allowing each of them to handle their dedicated model in a both user-friendly and hardware-independent way. The different concerns are separated thanks to the use of several models as well as several modeling viewpoints on these models. Depending on the targeted execution platforms, these abstract models are translated into executable implementations by means of model transformations. To make all of these effective, we have developed a tool chain that is also presented in this paper. The approach is assessed through a multi-dimensional validation that focuses on its applicability, its expressiveness and its efficiency. To capitalize on the gained experience, we analyze some lessons learned during this project.
DA  - 2018/02//
PY  - 2018
DO  - 10.1007/s10270-016-0518-0
VL  - 17
IS  - 1
SP  - 319
EP  - 342
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-016-0518-0
KW  - Model-driven engineering
KW  - Architecture
KW  - Fortran
KW  - High-performance calculus
KW  - HPC
KW  - MDE
ER  - 

TY  - JOUR
TI  - Maximally Permissive Controlled System Synthesis for Non-Determinism and Modal Logic
AU  - Van Hulst, A. C.
AU  - Reniers, M. A.
AU  - Fokkink, W. J.
T2  - Discrete Event Dynamic Systems
AB  - We propose a new technique for controlled system synthesis on non-deterministic automata for requirements in modal logic. Synthesis, as defined in this paper, restricts a behavioral specification of the uncontrolled system such that it satisfies a given logical expression, while adhering to the rules dictated by supervisory control such as maximal permissiveness and controllability. The applied requirement formalism extends Hennessy-Milner logic with the invariant and reachability modalities from GÃ¶del-LÃ¶b logic, and is therefore able to express a broad range of control requirements, such as marker state reachability and deadlock-freeness. This paper contributes to the field of control synthesis by achieving maximal permissiveness in a non-deterministic context for control requirements in modal logic, and treatment of controllability via partial bisimulation. We present a well-defined and complete derivation of the synthesis result, which is supported further by computer-verified proofs created using the Coq proof assistant. The synthesis method is also presented in algorithmic form, including an analysis of its computational complexity. We show that the proposed synthesis theory allows full expressibility of Ramadge-Wonham supervisory control theory and we illustrate its applicability in two small industrial case studies, including an analysis with regard to scalability.
DA  - 2017/03//
PY  - 2017
DO  - 10.1007/s10626-016-0231-8
VL  - 27
IS  - 1
SP  - 109
EP  - 142
SN  - 0924-6703
UR  - https://doi.org/10.1007/s10626-016-0231-8
KW  - Controllability
KW  - Controlled system synthesis
KW  - Maximal permissiveness
KW  - Modal logic
KW  - Non-determinism
KW  - Partial bisimulation
ER  - 

TY  - THES
TI  - Computational Augmentation of Model Based System Engineering: Supporting Mechatronic System Model Development with AI Technologies
AU  - Singh, Jugraj
AB  - Efforts in applying computational support for automatic design synthesis and configuration generation as well as efforts to support descriptive and computational model development for system design and verification has been approached with semantic formalisation of modelling languages and of generic structural and functional concepts using meta-models. Modelling the system using descriptive models helps the designer to explicitly document dependencies between properties and parameters of system and external entities. The descriptive models thus produced often do not consider physics based justification for presence and/or absence of relations. It is often the case, the simulation results obtained at later stages requires changing requirements as well as modifying logical (modelling relations between high level functions parameters/properties and parameters/properties of high level entities) and physical architectures (modelling relations between component's parameters and properties) to accommodate those requirements. The current MBSE (Model Based System Engineering) tools have capabilities to verify construction of models according to predefined model formats i.e. meta-models. However, these tools and current research in augmenting capabilities of these tools lacks the focus on evaluating content inside the models i.e. whether the system modelled by models represents a system that can be physically realized. This work has tried to avail the potential of available AI (Artificial Intelligence) technologies for assisting modelling activities performed for requirement definition and analysis, architecture design and verification phase of system development process by directing designer to tools that can formalise outputs of model development activities. The proposed problem formulation is based on the insight that a system modelled at both conceptual and detailed design level can be represented by logical and mathematical relations between the properties and parameters of internal and external components or functions of the system and domain. Therefore formulation defines concepts used in requirement, logical architecture and physical architecture models using relation between parameters and properties in those models. Concepts, such as operational requirements (or non-functional requirements for particular use case scenario), are defined through the usage of sets and linking value domains of those sets to particular system application domain for which system model is being developed. These relations enables systematic elaboration of requirements into logical and physical architecture models as well as storage and retrieval of existing model knowledge using existing AI tools. A novel framework has been developed to retrieve existing descriptive structure and function models using logical reasoning as well as to retrieve existing simulation models stored in embedding space of auto-encoder neural network. Beside adopting the concepts of semantic formalisation and meta-model based descriptive knowledge retrieval it utilises novel application of unsupervised representation learning capability of neural network auto-encoders to store known physically and technologically feasible designs in low dimensional representation that cluster similar designs therefore inducing similarity or distance metric that can be used to retrieve the known design with similar behaviour as new required behaviour. Framework also enable application of generic and domain specific logical constraints (as other works has done before) and introduces new concept of system application domain to ensures that at every stage of the model development leading to conceptual physical design architecture stays inside the physical constraints as per system usage domain. The instantiated meta-model elements which are classified to a system application domain (SAD) are implicitly constraint by system usage context constraints (e.g. parameter value restriction), similarly known simulation models can also be categorised to different SADs. The proposed framework extends the conventional approach of automated design synthesis which is only based only on decomposition of high level function (summarizing input to output mapping) into basic functions and selecting components to realize those basic functions. "A system is designed with the aim that it can execute its function(s) as per performance requirements of that function(s) in required operational conditions"- By concentrating on this statement it can be seen that conventional approach of functional decomposition and function allocation to known structural components cannot guarantee to yield a working system in required scenarios by ignoring the dependencies between environment or operating conditions and operating modes of prospective designs satisfying high level function. The results obtained from the implementation of domain specific knowledge representation and retrieval (involving mixture of numerical and logical constraints) as well as the results obtained from implementation of neural network auto-encoder for representation and retrieval of domain specific simulation model demonstrates the viability of these technologies to support the proposed framework.
DA  - 2019///
PY  - 2019
M3  - PhD Thesis
PB  - De Montfort University (United Kingdom)
ER  - 

TY  - JOUR
TI  - Integrating Heterogeneous Engineering Knowledge and Tools for Efficient Industrial Simulation Model Support
AU  - NovÃ¡k, Petr
AU  - Serral, EstefanÃ­a
AU  - Mordinyi, Richard
AU  - Å indelÃ¡Å, Radek
T2  - Adv. Eng. Inform.
AB  - The enhanced knowledge management improves the simulation design and integration.The article proposes a data model supporting simulation model engineering.An infrastructure called the Engineering Service Bus improves simulation processes.The approach is evaluated on a hydraulic system use-case showing its efficiency. Design of simulation models and their integration into industrial automation systems require knowledge from several heterogeneous data sources and tools. Due to the heterogeneity of engineering data, the integration of the tools and data are time-consuming and error-prone tasks nowadays. The key goal of this article is to provide an effective and efficient integration of heterogeneous data sources and tools as a knowledge basis to support dynamic simulation for industrial plants. The integrated knowledge is utilized both (i) in the design phase of simulation models for defining structure and interfaces of the models and (ii) in the runtime phase of industrial systems for model-driven configuration of the integrated environment. Reaching such goals with a manual approach or point-to-point integration is not beneficial as it may be possible for a few tools and data sources, but quickly gets very complex. A growing number of elements increases the risk of errors and the effort needed for integration. The proposed solution is based on a specification of a common data model to represent engineering knowledge and a service-oriented tool integration with the Engineering Service Bus. Engineering knowledge is integrated in a knowledge base implemented with ontologies in Web Ontology Language-Description Logic (OWL-DL). The proposed approach is demonstrated and evaluated on an educational hydraulic system. Major results of the article are: (i) a data model to represent engineering knowledge for dynamic industrial systems, (ii) the integration platform that, based on this model, integrates the tools for system design and runtime, and (iii) basic design-time and runtime processes for the integrated industrial simulations.
DA  - 2015/08//
PY  - 2015
DO  - 10.1016/j.aei.2015.05.001
VL  - 29
IS  - 3
SP  - 575
EP  - 590
SN  - 1474-0346
UR  - https://doi.org/10.1016/j.aei.2015.05.001
KW  - Ontology design
KW  - Data transformation
KW  - Integrated environment
KW  - Knowledge modeling
KW  - System integration and implementation
ER  - 

TY  - JOUR
TI  - Evolution of Software in Automated Production Systems
AU  - Vogel-Heuser, Birgit
AU  - Fay, Alexander
AU  - Schaefer, Ina
AU  - Tichy, Matthias
T2  - J. Syst. Softw.
AB  - Automated Production Systems (aPS) impose specific requirements regarding evolution.We present a classification of how Automated Production Systems evolve.We discuss the state of art and research needs for the development phases of aPS.Model-driven engineering and Variability Management are key issues.Cross-discipline analysis of (non)-functional requirements must be improved. Coping with evolution in automated production systems implies a cross-disciplinary challenge along the system's life-cycle for variant-rich systems of high complexity. The authors from computer science and automation provide an interdisciplinary survey on challenges and state of the art in evolution of automated production systems. Selected challenges are illustrated on the case of a simple pick and place unit. In the first part of the paper, we discuss the development process of automated production systems as well as the different type of evolutions during the system's life-cycle on the case of a pick and place unit. In the second part, we survey the challenges associated with evolution in the different development phases and a couple of cross-cutting areas and review existing approaches addressing the challenges. We close with summarizing future research directions to address the challenges of evolution in automated production systems. Display Omitted
DA  - 2015/12//
PY  - 2015
DO  - 10.1016/j.jss.2015.08.026
VL  - 110
IS  - C
SP  - 54
EP  - 84
SN  - 0164-1212
UR  - https://doi.org/10.1016/j.jss.2015.08.026
KW  - Automation
KW  - Software engineering
KW  - Automated production systems
KW  - Evolution
ER  - 

TY  - CONF
TI  - Highlighting the Challenges of Model-Based Engineering for Spaceflight Software Systems
AU  - Pettit, Robert G.
AU  - Mezcciani, Navneet
T3  - MiSE '13
AB  - Spaceflight software continues to experience exponential growth as functionality migrates from hardware to software. The resulting complexity of these mission critical systems demands new approaches to software systems engineering in order to effectively manage the development efforts and ensure that reliability is not compromised. Model-based systems/software engineering (MBE) approaches present attractive solutions to address the size and complexity through abstraction and analytical models. However, there are many challenges that must be addressed before MBE approaches can be effectively adopted on a large scale across an entire system. In this position paper, we highlight some of the key challenges based on our experiences with flight software programs employing elements of MBE.
C3  - Proceedings of the 5th International Workshop on Modeling in Software Engineering
DA  - 2013///
PY  - 2013
SP  - 51
EP  - 54
PB  - IEEE Press
SN  - 978-1-4673-6447-8
KW  - systems engineering
KW  - flight software
KW  - model-based engineering
KW  - software engineering
ER  - 

TY  - JOUR
TI  - Modeling Variability in the Video Domain: Language and Experience Report
AU  - AlfÃ©rez, Mauricio
AU  - Acher, Mathieu
AU  - Galindo, JosÃ© A.
AU  - Baudry, Benoit
AU  - Benavides, David
T2  - Software Quality Journal
AB  - In an industrial project, we addressed the challenge of developing a software-based video generator such that consumers and providers of video processing algorithms can benchmark them on a wide range of video variants. This article aims to report on our positive experience in modeling, controlling, and implementing software variability in the video domain. We describe how we have designed and developed a variability modeling language, called VM, resulting from the close collaboration with industrial partners during 2 years. We expose the specific requirements and advanced variability constructs; we developed and used to characterize and derive variations of video sequences. The results of our experiments and industrial experience show that our solution is effective to model complex variability information and supports the synthesis of hundreds of realistic video variants. From the software language perspective, we learned that basic variability mechanisms are useful but not enough; attributes and multi-features are of prior importance; meta-information and specific constructs are relevant for scalable and purposeful reasoning over variability models. From the video domain and software perspective, we report on the practical benefits of a variability approach. With more automation and control, practitioners can now envision benchmarking video algorithms over large, diverse, controlled, yet realistic datasets (videos that mimic real recorded videos)âsomething impossible at the beginning of the project.
DA  - 2019/03//
PY  - 2019
DO  - 10.1007/s11219-017-9400-8
VL  - 27
IS  - 1
SP  - 307
EP  - 347
SN  - 0963-9314
UR  - https://doi.org/10.1007/s11219-017-9400-8
KW  - Automated reasoning
KW  - Configuration
KW  - Domain-specific languages
KW  - Feature modeling
KW  - Software product line engineering
KW  - Variability modeling
KW  - Video testing
ER  - 

TY  - JOUR
TI  - Scope in Model Transformations
AU  - JukÅ¡s, MÄ?Ris
AU  - Verbrugge, Clark
AU  - Elaasar, Maged
AU  - Vangheluwe, Hans
T2  - Softw. Syst. Model.
AB  - A notion of hierarchical scope is commonplace in many programmatic systems. In the context of model, and in particular graph transformation, the use of scope can present two advantages: first, more natural expression of transformation application locality, and second, reduction in the number of match candidates, promising performance improvements. Previous work on scope, however, has focused on applying it to rule hierarchies, which reduces the number of matches performed, but not necessarily the cost of finding a single match. In this paper we define and explore a hierarchical scope formalism applied to the input graph, with associated modifications to the transformation rule definition. We then experimentally evaluate the benefits and challenges of our scoped model transformations in the state-of-the-art graph rewriting tool GrGen and our research-oriented, meta-modeling and rule-based model transformation tool AToMPM. We use a non-trivial "fire spreading" simulation transformation taken from distributed simulation community and a mutual exclusion transformation benchmark to demonstrate that integration of scope results in an elegant, intuitive, and efficient way of solving model transformation problems.
DA  - 2018/10//
PY  - 2018
DO  - 10.1007/s10270-016-0555-8
VL  - 17
IS  - 4
SP  - 1227
EP  - 1252
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-016-0555-8
KW  - Efficient pattern matching
KW  - Graph grammar
KW  - Graph scoping
KW  - Rule-based model transformations
KW  - Scope
KW  - Search plans
ER  - 

TY  - CONF
TI  - Towards a Dynamic Infrastructure for Playing with Systems of Systems
AU  - Schneider, Jean-Philippe
AU  - Teodorov, Ciprian
AU  - Senn, Eric
AU  - Champeau, JoÃ«l
T3  - ECSAW '14
AB  - Systems of systems (SoS) are assemblies of systems working together to achieve a common goal. Each integrated system keeps its own project management and ability to work outside the SoS. Designing a SoS implies the ability to integrate design data coming from multiple sources most of the time in a heterogeneous design environment, involving a wide range of application domains, professions, methodologies and communication means. To define such systems, it is crucial to define an architecture that takes in account the functionalities required by all the stakeholders, and to enable their simulation as a mean to provide the stakeholders with a global view of a SoS before deployment. In this paper, we define some principles that drive the development of a new functional architecture simulator in the context of SoS engineering. To tame the heterogeneity of SoS components, design tools, and methodologies, we sketch a new model-transformation approach that unifies parsing and model transformation.
C1  - New York, NY, USA
C3  - Proceedings of the 2014 European Conference on Software Architecture Workshops
DA  - 2014///
PY  - 2014
DO  - 10.1145/2642803.2642834
PB  - Association for Computing Machinery
SN  - 978-1-4503-2778-7
UR  - https://doi.org/10.1145/2642803.2642834
KW  - Model parsing and transformation
KW  - Model-Based System Engineering
KW  - Simulation
ER  - 

TY  - CONF
TI  - CharacterizingÂ AndÂ MitigatingÂ SoftÂ Errors in GPU DRAM
AU  - Sullivan, Michael B.
AU  - Saxena, Nirmal
AU  - O'Connor, Mike
AU  - Lee, Donghyuk
AU  - Racunas, Paul
AU  - Hukerikar, Saurabh
AU  - Tsai, Timothy
AU  - Hari, Siva Kumar Sastry
AU  - Keckler, Stephen W.
T3  - MICRO '21
AB  - GPUs are used in high-reliability systems, including high-performance computers and autonomous vehicles. Because GPUs employ a high-bandwidth, wide-interface to DRAM and fetch each memory access from a single DRAM device, implementing full-device correction through ECC is expensive and impractical. This challenge is compounded by worsening relative rates of multi-bit DRAM errors and increasing GPU memory capacities. This paper first presents high-energy neutron beam testing results for the HBM2 memory on a compute-class GPU. These results uncovered unexpected intermittent errors that we determine to be caused by cell damage from the high-intensity beam. As these errors are an artifact of the testing apparatus, we provide best-practice guidance on how to identify and filter them from the results of beam testing campaigns. Second, we use the soft error beam testing results to inform the design and evaluation of system-level error protection mechanisms by reporting the relative error rates and error patterns from soft errors in GPU DRAM. We observe locality in the multi-bit errors, which we attribute to the underlying structure of the HBM2 memory. Based on these error patterns, we propose several novel ECC schemes to decrease the silent data corruption risk by up to five orders of magnitude relative to SEC-DED ECC, while also reducing the number of uncorrectable errors by up to 7.87 Ã. We compare novel binary and symbol-based ECC organizations that differ in their design complexity, hardware overheads, and permanent error correction abilities, ultimately recommending two promising organizations. These schemes replace SEC-DED ECC with no additional redundancy, likely no performance impacts, and modest area and complexity costs.
C1  - New York, NY, USA
C3  - MICRO-54: 54th Annual IEEE/ACM International Symposium on Microarchitecture
DA  - 2021///
PY  - 2021
DO  - 10.1145/3466752.3480111
SP  - 641
EP  - 653
PB  - Association for Computing Machinery
SN  - 978-1-4503-8557-2
UR  - https://doi.org/10.1145/3466752.3480111
ER  - 

TY  - CONF
TI  - Model-Based Security Analysis for Mobile Communications
AU  - JÃ¼rjens, Jan
AU  - Schreck, Joerg
AU  - Bartmann, Peter
T3  - ICSE '08
AB  - Mobile communication systems are increasingly used in companies. In order to make these applications secure, the security analysis has to be an integral part of the system design and IT management process for such mobile communication systems. This work presents the experiences and results from the security analysis of a mobile system architecture at a large German telecommunications company, by making use of an approach to Model-based Security Engineering that is based on the UML extension UMLsec. The focus lies on the security mechanisms and security policies of the mobile applications which were analyzed using the UMLsec method and tools. Main results of the paper include a field report on the employment of the UMLsec method in an industrial telecommunications context as well as indications of its benefits and limitations.
C1  - New York, NY, USA
C3  - Proceedings of the 30th International Conference on Software Engineering
DA  - 2008///
PY  - 2008
DO  - 10.1145/1368088.1368186
SP  - 683
EP  - 692
PB  - Association for Computing Machinery
SN  - 978-1-60558-079-1
UR  - https://doi.org/10.1145/1368088.1368186
KW  - mobile telecommunication systems
KW  - model-based software engineering
KW  - uml
KW  - umlsec
ER  - 

TY  - JOUR
TI  - Supporting Timing Analysis of Vehicular Embedded Systems through the Refinement of Timing Constraints
AU  - Mubeen, Saad
AU  - Nolte, Thomas
AU  - SjÃ¶din, Mikael
AU  - LundbÃ¤ck, John
AU  - LundbÃ¤ck, Kurt-Lennart
T2  - Softw. Syst. Model.
AB  - The collective use of several models and tools at various abstraction levels and phases during the development of vehicular distributed embedded systems poses many challenges. Within this context, this paper targets the challenges that are concerned with the unambiguous refinement of timing requirements, constraints and other timing information among various abstraction levels. Such information is required by the end-to-end timing analysis engines to provide pre-run-time verification about the predictability of these systems. The paper proposes an approach to represent and refine such information among various abstraction levels. As a proof of concept, the approach provides a representation of the timing information at the higher levels using the models that are developed with EAST-ADL and Timing Augmented Description Language. The approach then refines the timing information for the lower abstraction levels. The approach exploits the Rubus Component Model at the lower level to represent the timing information that cannot be clearly specified at the higher levels, such as trigger paths in distributed chains. A vehicular-application case study is conducted to show the applicability of the proposed approach.
DA  - 2019/02//
PY  - 2019
DO  - 10.1007/s10270-017-0579-8
VL  - 18
IS  - 1
SP  - 39
EP  - 69
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-017-0579-8
KW  - Component model
KW  - Component-based development
KW  - Distributed embedded systems
KW  - End-to-end timing analysis
KW  - Timing model
ER  - 

TY  - CONF
TI  - Activity Diagrams between Devs-Based Modeling & Simulation and Fuml-Based Model Execution
AU  - Alshareef, Abdurrahman
AU  - Kim, Doohwan
AU  - Seo, Chungman
AU  - Zeigler, Bernard P.
T3  - SummerSim '20
AB  - Activity Diagrams are prominently used for modeling for both system and software engineering. Their metamodel in the Unified Modeling Language (UML), and the System Modeling Language (SysML), is used to standardize specifying behavioral models in a flow-based manner. However, due to the high-level metamodel, further description is needed to facilitate a precise interpretation of these diagrams in a computational environment. A Discrete Event System Specification (DEVS) was devised to provide an initial simulation of activities and therefore enable more advanced simulations and experiments. Another line of research has been focusing on providing execution for activities according to the Semantics of a Foundational Subset for Executable UML Models. In this work, we examine both approaches highlighting the similarities and differences. We also attempt to examine the capacity of each approach to handle potential complexity that might arise during the model lifespan, especially for modeling System of Systems.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2020 Summer Simulation Conference
DA  - 2020///
PY  - 2020
PB  - Society for Computer Simulation International
SN  - 978-1-71381-429-0
KW  - model-based system engineering
KW  - SysML
KW  - UML
KW  - DEVS
KW  - activity diagrams
ER  - 

TY  - JOUR
TI  - An Ontological Framework for Knowledge Modeling and Decision Support in Cyber-Physical Systems
AU  - Petnga, Leonard
AU  - Austin, Mark
T2  - Adv. Eng. Inform.
AB  - Our work is concerned with the development of knowledge structures to support correct-by-design cyber-physical systems (CPS). This class of systems is defined by a tight integration of software and physical processes, the need to satisfy stringent constraints on performance and safety, and a reliance on automation for the management of system functionality and decision making. To assure correctness of functionality with respect to requirements, there is a strong need for system models to account for semantics of the domains involved. This paper introduces a new ontological-based knowledge and reasoning framework for decision support for CPS. It enables the development of determinate, provable and executable CPS models supported by sound semantics strengthening the model-driven approach to CPS design. An investigation into the structure of basic description logics (DL) has identified the needed semantic extensions to enable the web ontology language (OWL) as the ontological language for our framework. The SROIQ DL has been found to be the most appropriate logic-based knowledge formalism as it maps to OWL 2 and ensures its decidability. Thus, correct, stable, complete and terminating reasoning algorithms are guaranteed with this SROIQ -backed language. The framework takes advantage of the commonality of data and information processing in the different domains involved to overcome the barrier of heterogeneity of domains and physics in CPS. Rules-based reasoning processes are employed. The framework provides interfaces for semantic extensions and computational support, including the ability to handle quantities for which dimensions and units are semantic parameters in the physical world. Together, these capabilities enable the conversion of data to knowledge and their effective use for efficient decision making and the study of system-level properties, especially safety. We exercise these concepts in a traffic light time-based reasoning system.
DA  - 2016/01//
PY  - 2016
DO  - 10.1016/j.aei.2015.12.003
VL  - 30
IS  - 1
SP  - 77
EP  - 94
SN  - 1474-0346
UR  - https://doi.org/10.1016/j.aei.2015.12.003
KW  - Artificial intelligence
KW  - Cyber-physical systems
KW  - Decision making
KW  - Ontologies
KW  - Reasoning
KW  - Semantic Web
ER  - 

TY  - JOUR
TI  - Subject Index
T2  - Procedia Comput. Sci.
DA  - 2017/11//
PY  - 2017
DO  - 10.1016/j.procs.2017.10.002
VL  - 114
IS  - C
SP  - 534
EP  - 538
SN  - 1877-0509
UR  - https://doi.org/10.1016/j.procs.2017.10.002
ER  - 

TY  - JOUR
TI  - A Framework to Support Alignment of Secure Software Engineering with Legal Regulations
AU  - Islam, Shareeful
AU  - Mouratidis, Haralambos
AU  - JÃ¼rjens, Jan
T2  - Softw. Syst. Model.
AB  - Regulation compliance is getting more and more important for software systems that process and manage sensitive information. Therefore, identifying and analysing relevant legal regulations and aligning them with security requirements become necessary for the effective development of secure software systems. Nevertheless, Secure Software Engineering Modelling Languages (SSEML) use different concepts and terminology from those used in the legal domain for the description of legal regulations. This situation, together with the lack of appropriate background and knowledge of laws and regulations, introduces a challenge for software developers. In particular, it makes difficult to perform (i) the elicitation of appropriate security requirements from the relevant laws and regulations; and (ii) the correct tracing of the security requirements throughout the development stages. This paper presents a framework to support the consideration of laws and regulations during the development of secure software systems. In particular, the framework enables software developers (i) to correctly elicit security requirements from the appropriate laws and regulations; and (ii) to trace these requirements throughout the development stages in order to ensure that the design indeed supports the required laws and regulations. Our framework is based on existing work from the area of secure software engineering, and it complements this work with a novel and structured process and a well-defined method. A practical case study is employed to demonstrate the applicability of our work.
DA  - 2011/07//
PY  - 2011
DO  - 10.1007/s10270-010-0154-z
VL  - 10
IS  - 3
SP  - 369
EP  - 394
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-010-0154-z
KW  - Legal constraints
KW  - Modelling regulations
KW  - Non-functional properties
KW  - Secure software engineering
KW  - Secure Tropos
KW  - Security requirements
KW  - UMLsec
ER  - 

TY  - CONF
TI  - Frontmatter
C1  - Berlin, Heidelberg
C3  - System Analysis and Modeling. Languages, Methods, and Tools for Industry 4.0
SP  - i
EP  - xii
PB  - Springer-Verlag
SN  - 978-3-030-30689-2
ER  - 

TY  - CONF
TI  - A Model-Driven Approach for Creating Storyboards of Web Based User Interfaces
AU  - Rasheed, Yawar
AU  - Azam, Farooque
AU  - Anwar, Muhammad Waseem
AU  - Tufail, Hanny
T3  - ICCCM 2019
AB  - The primary essence of storyboarding, reducing complexity in uncertain environments and creating an early visualization of complex system, makes it one of innovative requirement elicitation techniques. Based on the initial sketchy requirements, an abstract level storyboard may be created depicting user interactions with distinct scenes and scenarios for web-based User Interfaces (UI). Multiple rounds of elicitations and storyboards creations will develop initial sketchy storyboard into a refined depiction of user needs. The advent of Model-Driven Software Engineering (MDSE) and Model-Driven Architecture (MDA), as against code centric approaches, presents an abstract view of software products in the shape of models as primary artifacts for automated design development and implementation. In this article, the concepts of Storyboarding and Metamodeling are merged to introduce a Storyboard Metamodel regarding Web-based UI. This leads to automatically develop an evolutionary prototype of a given system from initial requirements. The application of proposed meta-model is demonstrated through a web application case study. The results prove that the proposed meta-model is capable of generating both simple as well as complex storyboards that can be transformed to evolutionary prototype of a given system.
C1  - New York, NY, USA
C3  - Proceedings of the 2019 7th International Conference on Computer and Communications Management
DA  - 2019///
PY  - 2019
DO  - 10.1145/3348445.3348465
SP  - 169
EP  - 173
PB  - Association for Computing Machinery
SN  - 978-1-4503-7195-7
UR  - https://doi.org/10.1145/3348445.3348465
KW  - metamodel for storyboard
KW  - model-driven
KW  - Storyboard
KW  - web-based user interface
ER  - 

TY  - CONF
TI  - Transitioning a Model-Based Software Engineering Architectural Style to Ada 95
AU  - Gargaro, Anthony
AU  - Peterson, A. Spencer
T3  - TRI-Ada '95
C1  - New York, NY, USA
C3  - Proceedings of the Conference on TRI-Ada '95: Ada's Role in Global Markets: Solutions for a Changing Complex World
DA  - 1995///
PY  - 1995
DO  - 10.1145/376503.376553
SP  - 166
EP  - 178
PB  - Association for Computing Machinery
SN  - 0-89791-705-7
UR  - https://doi.org/10.1145/376503.376553
ER  - 

TY  - BOOK
TI  - Onward! 2016: Proceedings of the 2016 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software
CY  - New York, NY, USA
DA  - 2016///
PY  - 2016
PB  - Association for Computing Machinery
SN  - 978-1-4503-4076-2
ER  - 

TY  - CONF
TI  - Computer Experimentation and Scenario Methodologies to Support Integration and Operations Phases of Mission Engineering and Analysis
AU  - Hernandez, Alejandro S.
AU  - Hatch, William D.
AU  - Pollman, Anthony G.
AU  - Upton, Stephen C.
T3  - WSC '18
AB  - Mission engineering is a recently proposed concept that needs practicable means to implement. Integrating a new system into technical and organizational architectures is a critical part of this initiative. Additionally, it requires an in-depth understanding of the system's operational employment. This paper describes the development of the integration and operations support system, an innovative use of scenario methodologies, computer simulation, and experimentation to shape a strategic analysis framework for mission engineering. A scenario from an actual computer aided exercise, Cobra Gold 2018, is the backdrop of the support system. The Joint Theater Level Simulation drives the operational vignettes for the training audience in this multinational exercise. Our approach is to automate the exercise, thereby creating an experimentation environment for a knowledgeable team to form credible, analytically derived insights about a new system. We generalize this approach and provide a use-case via a planned study on future naval capabilities.
C3  - Proceedings of the 2018 Winter Simulation Conference
DA  - 2018///
PY  - 2018
SP  - 3765
EP  - 3776
PB  - IEEE Press
SN  - 978153866570
ER  - 

TY  - JOUR
TI  - An Industrial Case Study on the Use of UML in Software Maintenance and Its Perceived Benefits and Hurdles
AU  - FernÃ¡ndez-SÃ¡ez, Ana M.
AU  - Chaudron, Michel R.
AU  - Genero, Marcela
T2  - Empirical Softw. Engg.
AB  - UML is a commonly-used graphical language for the modelling of software. Works regarding UML's effectiveness have studied projects that develop software systems from scratch. Yet the maintenance of software consumes a large share of the overall time and effort required to develop software systems. This study, therefore, focuses on the use of UML in software maintenance. We wish to elicit the practices of the software modelling used during maintenance in industry and understand what are perceived as hurdles and benefits when using modelling. In order to achieve a high level of realism, we performed a case study in a multinational company's ICT department. The analysis is based on 31 interviews with employees who work on software maintenance projects. The interviewees played different roles and provided complementary views about the use, hurdles and benefits of software modelling and the use of UML. Our study uncovered a broad range of modelling-related practices, which are presented in a theoretical framework that illustrates how these practices are linked to the specific goals and context of software engineering projects. We present a list of recommended practices that contribute to the increased effectiveness of software modelling. The use of software modelling notations (like UML) is considered beneficial for software maintenance, but needs to be tailored to its context. Various practices that contribute to the effective use of modelling are commonly overlooked, suggesting that a more conscious holistic approach with which to integrate modelling practices into the overall software engineering approach is required.
DA  - 2018/12//
PY  - 2018
DO  - 10.1007/s10664-018-9599-4
VL  - 23
IS  - 6
SP  - 3281
EP  - 3345
SN  - 1382-3256
UR  - https://doi.org/10.1007/s10664-018-9599-4
KW  - UML
KW  - Industrial case study
KW  - Modelling languages
KW  - Software maintenance
ER  - 

TY  - CONF
TI  - A Comprehensive Investigation of Model Driven Architecture (MDA) for Reverse Engineering
AU  - Sabir, Umair
AU  - Azam, Farooque
AU  - Anwar, Muhammad Waseem
T3  - ICSEB 2017
AB  - Models and transformations are the primary elements of Model Driven Architecture (MDA). On the other hand, Reverse Engineering (RE) also deals with the intermediate models and different transformation practices to produce the desired output models. Consequently, MDA have been utilized in the field of reverse engineering. This article inspects and summarizes the applications of MDA for RE. Particularly, a Systematic Literature Review (SLR) is performed to analyze 23 studies published during 2006-2017. Consequently, five leading RE techniques are identified. Moreover, 10 tools regarding MDA-based reversed engineering have been presented. Furthermore, modeling and transformation approaches are investigated for reverse engineering. The results of this SLR are highly valuable for academia and industry professionals of the domain.
C1  - New York, NY, USA
C3  - Proceedings of the 2017 International Conference on Software and E-Business
DA  - 2017///
PY  - 2017
DO  - 10.1145/3178212.3178215
SP  - 43
EP  - 48
PB  - Association for Computing Machinery
SN  - 978-1-4503-5488-2
UR  - https://doi.org/10.1145/3178212.3178215
KW  - Model Driven Architecture
KW  - Model driven reverse engineering
KW  - Reverse Engineering
KW  - Systematic Literature Review
ER  - 

TY  - JOUR
TI  - Automated Generation of Multiphysics Simulation Models to Support Multidisciplinary Design Optimization
AU  - Tian, Fengnian
AU  - Voskuijl, Mark
T2  - Adv. Eng. Inform.
AB  - To ensure a consistent design representation for serving multidisciplinary analysis, this research study proposes an intelligent modeling system to automatically generate multiphysics simulation models to support multidisciplinary design optimization processes by using a knowledge based engineering approach. A key element of this system is a multiphysics information model (MIM), which integrates the design and simulation knowledge from multiple engineering domains. The intelligent modeling system defines classes with attributes to represent various aspects of physical entities. Moreover, it uses functions to capture the non-physical information, such as control architecture, simulation test maneuvers and simulation procedures. The challenge of system coupling and the interactions among the disciplines are taken into account during the process of knowledge acquisition. Depending on the domain requirements, the intelligent modeling system extracts the required knowledge from the MIM and uses this first to instantiate submodels and second to construct the multiphysics simulation model by combining all submodels. The objective of this research is to reduce the time and effort for modeling complex systems and to provide a consistent and concurrent design environment to support multidisciplinary design optimization. The development of an unstable and unmanned aerial vehicle, a multirotor UAV, is selected as test case. The intelligent modeling system is demonstrated by modeling thirty-thousand multirotor UAV designs with different topologies and by ensuring the automatic development of a consistent control system dedicated for each individual design. Moreover, the resulting multiphysics simulation model of the multirotor UAV is validated by comparing with the flight data of an actual quadrotor UAV. The results show that the multiphysics simulation model matches test data well and indicate that high fidelity models can be generated with the automatic model generation process.
DA  - 2015/10//
PY  - 2015
DO  - 10.1016/j.aei.2015.07.004
VL  - 29
IS  - 4
SP  - 1110
EP  - 1125
SN  - 1474-0346
UR  - https://doi.org/10.1016/j.aei.2015.07.004
KW  - Knowledge based engineering
KW  - Multidisciplinary design optimization
KW  - Multiphysics simulation model
KW  - Multirotor UAV
ER  - 

TY  - CONF
TI  - First Steps towards a General SysML Model for Discrete Processes in Production Systems
AU  - SchÃ¶nherr, Oliver
AU  - Rose, Oliver
T3  - WSC '09
AB  - In many areas of science, like computer science or electrical engineering, modeling languages have been established, however, this is not the case in the field of discrete processes (Weilkiens 2006).There are two reasons which motivate such a development:1. Modeling languages allow realizing projects by the principles of systems engineering. So one obtains clearness even for large projects and reduces the discrepancy between model and reality.2. Modeling languages are a central part of automatic code generation.In this paper, we present our first steps in developing a simulation-tool-independent description of production systems and first ideas on how to convert such a general model into simulation-tool-specific models.
C3  - Winter Simulation Conference
DA  - 2009///
PY  - 2009
SP  - 1711
EP  - 1718
PB  - Winter Simulation Conference
SN  - 978-1-4244-5771-7
ER  - 

TY  - JOUR
TI  - Modeling Languages in Industry 4.0: An Extended Systematic Mapping Study
AU  - Wortmann, Andreas
AU  - Barais, Olivier
AU  - Combemale, Benoit
AU  - Wimmer, Manuel
T2  - Softw. Syst. Model.
AB  - Industry 4.0 integrates cyber-physical systems with the Internet of Things to optimize the complete value-added chain. Successfully applying Industry 4.0 requires the cooperation of various stakeholders from different domains. Domain-specific modeling languages promise to facilitate their involvement through leveraging (domain-specific) models to primary development artifacts. We aim to assess the use of modeling in Industry 4.0 through the lens of modeling languages in a broad sense. Based on an extensive literature review, we updated our systematic mapping study on modeling languages and modeling techniques used in Industry 4.0 &nbsp;(Wortmann et al., Conference on model-driven engineering languages and systems (MODELSâ17), IEEE, pp 281â291, 2017) to include publications until February 2018. Overall, the updated study considers 3344 candidate publications that were systematically investigated until 408 relevant publications were identified. Based on these, we developed an updated map of the research landscape on modeling languages and techniques for Industry 4.0. Research on modeling languages in Industry 4.0 focuses on contributing methods to solve the challenges of digital representation and integration. To this end, languages from systems engineering and knowledge representation are applied most often but rarely combined. There also is a gap between the communities researching and applying modeling languages for Industry 4.0 that originates from different perspectives on modeling and related standards. From the vantage point of modeling, Industry 4.0 is the combination of systems engineering, with cyber-physical systems, and knowledge engineering. Research currently is splintered along topics and communities and accelerating progress demands for multi-disciplinary, integrated research efforts.
DA  - 2020/01//
PY  - 2020
DO  - 10.1007/s10270-019-00757-6
VL  - 19
IS  - 1
SP  - 67
EP  - 94
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00757-6
KW  - Industry 4.0
KW  - Modeling languages
KW  - Smart manufacturing
ER  - 

TY  - JOUR
TI  - Design Notations for Secure Software: A Systematic Literature Review
AU  - Van Den Berghe, Alexander
AU  - Scandariato, Riccardo
AU  - Yskout, Koen
AU  - Joosen, Wouter
T2  - Softw. Syst. Model.
AB  - In the past 10 years, the research community has produced a significant number of design notations to represent security properties and concepts in a design artifact. These notations are aimed at documenting and analyzing security in a software design model. The fragmentation of the research space, however, has resulted in a complex tangle of different techniques. Hence, practitioners are confronted with the challenging task of scouting the right approach from a multitude of proposals. Similarly, it is hard for researchers to keep track of the synergies among the existing notations, in order to identify the existing opportunities for original contributions. This paper presents a systematic literature review that inventorizes the existing notations and provides an in-depth, comparative analysis for each.
DA  - 2017/07//
PY  - 2017
DO  - 10.1007/s10270-015-0486-9
VL  - 16
IS  - 3
SP  - 809
EP  - 831
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-015-0486-9
KW  - Empirical study
KW  - Notation
KW  - Security
KW  - Software design
ER  - 

TY  - CONF
TI  - Modeling Aerospace Systems Product Lines in SysML
AU  - Gaeta, JesÃºs Padilla
AU  - Czarnecki, Krzysztof
T3  - SPLC '15
AB  - As the complexity of avionic systems increases, the aerospace industry is turning to product-line engineering and model-based development to better manage complexity and reduce cost. This paper describes a method and a pattern catalog for modeling avionics product lines in SysML, a standard systems modeling language. The method is designed to satisfy aerospace systems and software development standards, and the patterns provide guidance for expressing variability in SysML. The paper also reports on the experience in applying the method and the patterns to model families of propeller controllers and fuel controllers for turbo engines.
C1  - New York, NY, USA
C3  - Proceedings of the 19th International Conference on Software Product Line
DA  - 2015///
PY  - 2015
DO  - 10.1145/2791060.2791104
SP  - 293
EP  - 302
PB  - Association for Computing Machinery
SN  - 978-1-4503-3613-0
UR  - https://doi.org/10.1145/2791060.2791104
KW  - SysML
KW  - UML
KW  - systems engineering
KW  - variability modeling
KW  - model-based engineering
KW  - embedded software
KW  - product-line engineering
ER  - 

TY  - JOUR
TI  - Incorporating Measurement Uncertainty into OCL/UML Primitive Datatypes
AU  - Bertoa, Manuel F.
AU  - BurgueÃ±o, Loli
AU  - Moreno, Nathalie
AU  - Vallecillo, Antonio
T2  - Softw. Syst. Model.
AB  - The correct representation of the relevant properties of a system is an essential requirement for the effective use and wide adoption of model-based practices in industry. Uncertainty is one of the inherent properties of any measurement or estimation that is obtained in any physical setting; as such, it must be considered when modeling software systems deal with real data. Although a few modeling languages enable the representation of measurement uncertainty, these aspects are not normally incorporated into their type systems. Therefore, operating with uncertain values and propagating their uncertainty become cumbersome processes, which hinder their realization in real environments. This paper proposes an extension of OCL/UML primitive datatypes that enables the representation of the uncertainty that comes from physical measurements or user estimates into the models, together with an algebra of operations that are defined for the values of these types.
DA  - 2020/09//
PY  - 2020
DO  - 10.1007/s10270-019-00741-0
VL  - 19
IS  - 5
SP  - 1163
EP  - 1189
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00741-0
KW  - UML
KW  - Measurement uncertainty
KW  - OCL
KW  - Primitive datatypes
ER  - 

TY  - JOUR
TI  - Cost-Effective Evolution of Research Prototypes into End-User Tools
AU  - StÃ¶rrle, Harald
T2  - Sci. Comput. Program.
AB  - Much of Software Engineering research needs to provide an implementation as proof-of-concept. Often such implementations are created as exploratory prototypes without polished user interfaces, making it difficult to (1) run user studies to validate the tool's contribution, (2) validate the author's claim by fellow scientists, and (3) demonstrate the utility and value of the research contribution to any interested parties. However, turning an exploratory prototype into a "proper" tool for end-users often entails great effort. Heavyweight mainstream frameworks such as Eclipse do not address this issue; their steep learning curves constitute substantial entry barriers to such ecosystems.In this paper, we present the Model Analyzer/Checker (MACH), a stand-alone tool with a command-line interpreter. MACH integrates a set of research prototypes for analyzing UML models. By choosing a simple command line interpreter rather than (costly) graphical user interface, we achieved the core goal of quickly deploying research results to a broader audience while keeping the required effort to an absolute minimum. We analyze MACH as a case study of how requirements and constraints in an academic environment influence design decisions in software tool development. We argue that our approach while perhaps unconventional, serves its purpose with a remarkable cost-benefit ratio.
DA  - 2017/02//
PY  - 2017
DO  - 10.1016/j.scico.2015.07.010
VL  - 134
IS  - C
SP  - 47
EP  - 60
SN  - 0167-6423
UR  - https://doi.org/10.1016/j.scico.2015.07.010
KW  - Architectural choice points
KW  - Architectural design process
KW  - Design decisions
KW  - Software tool research prototype
KW  - UML model analysis and checking
ER  - 

TY  - JOUR
TI  - Data Association and Geolocation for Electronic Support Systems
AU  - Kennedy, Hugh L.
AU  - Scott, William
AU  - Cook, Stephen C.
T2  - Comput. Electr. Eng.
AB  - Data association (DA) in highly sensitive electronic support (ES) systems is nontrivial when closely-spaced, low probability-of-intercept (LPI) emitters, in cluttered radio-frequency (RF) environments, are sought. A practical processing framework for these situations is presented in this paper. Joint probabilistic data association (JPDA) is used to handle the multitarget tracking (MTT) problem in frequency-augmented direction-of-arrival versus time coordinates (i.e. 'signal' space). It is shown that the JPDA update has a pleasantly simple form when processing a serial stream of time-stamped measurements. A Bayesian M-out-of-N track confidence model is derived using the beta distribution and used to 'integrate' automatic track management functions (i.e. JIPDA). A maximum-likelihood expectation-maximisation (ML-EM) algorithm is also derived and applied to perform bearing-only target-motion-analysis (TMA) in geographic coordinates for confirmed JIPDA tracks. The application of EM compensates for previous measurement-to-signal-track assignment errors and decreases the deleterious influence of spurious measurements, due to clutter or other emitters, without combinatorial complexity.
DA  - 2012/11//
PY  - 2012
DO  - 10.1016/j.compeleceng.2012.08.001
VL  - 38
IS  - 6
SP  - 1745
EP  - 1759
SN  - 0045-7906
UR  - https://doi.org/10.1016/j.compeleceng.2012.08.001
ER  - 

TY  - CONF
TI  - Mind the Gap: Lessons Learned from Translating Grammars between MontiCore and Xtext
AU  - Dalibor, Manuela
AU  - Jansen, Nico
AU  - KÃ¤stle, Johannes
AU  - Rumpe, Bernhard
AU  - Schmalzing, David
AU  - Wachtmeister, Louis
AU  - Wortmann, Andreas
T3  - DSM 2019
AB  - Model-driven systems engineering relies on software languages that support different stakeholders. These languages often operate in different technological spaces. Checking consistency, tracing, and change propagation of models developed by different stakeholders, thus demands methods to bridge the gaps between these spaces. Research on the integration of heterogeneous software languages often considers heterogeneity within specific technological spaces only. We outline a systematic method to translate grammars between the technological spaces of the MontiCore and Xtext language workbench (LWB) and report observations on general grammar translation challenges. We have realized this translation in an automated toolchain and present lessons learned along the way. This can significantly facilitate bridging different technological spaces and, thus, improve model-driven systems engineering
C1  - New York, NY, USA
C3  - Proceedings of the 17th ACM SIGPLAN International Workshop on Domain-Specific Modeling
DA  - 2019///
PY  - 2019
DO  - 10.1145/3358501.3361236
SP  - 40
EP  - 49
PB  - Association for Computing Machinery
SN  - 978-1-4503-6984-8
UR  - https://doi.org/10.1145/3358501.3361236
KW  - Domain-specific languages
KW  - Grammar Translation
KW  - Grammarware
KW  - MontiCore
KW  - Xtext
ER  - 

TY  - JOUR
TI  - Ontology for Big Systems: The Ontology Summit 2012 CommuniquÃ©
AU  - Schneider, Todd
AU  - Hashemi, Ali
AU  - Bennett, Mike
AU  - Brady, Mary
AU  - Casanave, Cory
AU  - Graves, Henson
AU  - Gruninger, Michael
AU  - Guarino, Nicola
AU  - Levenchuk, Anatoly
AU  - Lucier, Ernie
AU  - Obrst, Leo
AU  - Ray, Steve
AU  - Sriram, Ram D.
AU  - Vizedom, Amanda
AU  - West, Matthew
AU  - Whetzel, Trish
AU  - Yim, Peter
T2  - Appl. Ontol.
AB  - The Ontology Summit 2012 explored the current and potential uses of ontology, its methods and paradigms, in big systems and big data: How ontology can be used to design, develop, and operate such systems. The systems addressed were not just software systems, although software systems are typically core and necessary components, but more complex systems that include multiple kinds and levels of human and community interaction with physical-software systems, systems of systems, and the socio-technical environments for those systems which can include cultural, legal, and economic components. The focus themes used for this exploration were Big Systems Engineering, Big Data Challenge, Large Scale Domain Applications, and cross-cutting aspects Ontology Quality, and Federation and Integration of Systems.The Ontology Summit 2012 consisted of over three months of intensive virtual collaborative elaboration of these issues in presentations, panels, and group email. The culmination of these activities was a face-to-face Symposium at the US National Institute of Standards and Technology NIST, Gaithersburg, MD, USA, 12â13 April 2012. The primary product of this Ontology Summit is the communiquÃ© reported here. But there are other products, some continuing as collaborative, more specifically focused analysis and modeling efforts aligned with various open standards activities.Behind all of these particular products, of course, is the real overriding purpose of the Ontology Summit 2012, which was: the joint collaboration of three distinct communities, the ontology, systems engineering and big systems stakeholder communities, who came together to address common problems, create common understanding and propose common solutions.
DA  - 2012/07//
PY  - 2012
VL  - 7
IS  - 3
SP  - 357
EP  - 371
SN  - 1570-5838
KW  - Model
KW  - Big Data
KW  - Engineering
KW  - Ontological Analysis
KW  - Ontology
KW  - Quality
KW  - Systems
ER  - 

TY  - JOUR
TI  - Comparing Development Approaches and Reuse Strategies
AU  - Varnell-Sarjeant, Julia
AU  - Amschler Andrews, Anneliese
AU  - Lucente, Joe
AU  - Stefik, Andreas
T2  - Inf. Softw. Technol.
AB  - ContextThere is a debate in the aerospace industry whether lessons from reuse successes and failures in nonembedded software can be applied to embedded software. Reuse supposedly reduces development time and errors. The aerospace industry was an early advocate of reuse, but in Aerospace, not all reuse experiences have been as successful as expected. Some major projects experienced large overruns in time, budget, as well as inferior performance, at least in part, due to the gap between reuse expectations and reuse outcomes. This seemed to be especially the case for embedded systems. ObjectiveOur goal is to discover software reuse practices in the aerospace industry. In particular, we wish to learn whether practitioners who develop embedded systems use the same development approaches and artifacts as software practitioners who develop nonembedded systems. We wish to learn whether reuse influences selection of development approaches and artifacts and whether outcomes are impacted. MethodWe developed a survey given to software practitioners in a major Aerospace Corporation developing either embedded or nonembedded systems. The survey probed to identify development methods used, artifacts reused and outcomes resulting from the reuse. We used qualitative and quantitative methods such as descriptive statistics, MANOVA, Principle Component Analysis and an analysis of freeform comments to compare reuse practices between embedded systems and nonembedded systems development. ResultsWe found that embedded systems were more likely to include component based development, product line development and model based development in their development approach, whereas nonembedded systems were more likely to include Ad Hoc and COTS/GOTS in their development approach. Embedded systems developers tended to reuse more and different reuse artifacts. ConclusionWe found that, while outcomes were nearly identical, the development approaches and artifacts used did, in fact, differ. In particular, the tight coupling between code and the platform in embedded systems often dictated the development approach and reuse artifacts and identified some of the reasons.
DA  - 2015/05//
PY  - 2015
DO  - 10.1016/j.infsof.2015.01.002
VL  - 61
IS  - C
SP  - 71
EP  - 92
SN  - 0950-5849
UR  - https://doi.org/10.1016/j.infsof.2015.01.002
KW  - Embedded systems
KW  - Empirical study
KW  - Nonembedded systems
KW  - Software reuse
ER  - 

TY  - CONF
TI  - Encapsulating Application Subsystems Using the DECOS Core OS
AU  - Schlager, Martin
AU  - Herzner, Wolfgang
AU  - Wolf, Andreas
AU  - GrÃ¼ndonner, Oliver
AU  - Rosenblattl, Maximilian
AU  - Erkinger, Erwin
T3  - SAFECOMP'06
AB  - This paper presents an approach to structured integration of different application subsystems on the same embedded hardware, as currently developed in DECOS (Dependable Embedded Components and Systems), an integrated project within the Sixth Framework Programme of the European Commission. Those application subsystems can have different criticality levels and vendors. Furthermore, reliable communication among application subsystems is a major concern.Focusing on the Encapsulated Execution Environment (EEE), which separates application subsystems in the space AND the time domain, this approach outlines the concepts and principles of an exokernel operating system, of partitioning, and of virtualization. The Core Operating System (COS) is described as a case study, including the hardware used, the current feature set, and benchmark values of central COS operations.This paper also presents a model for a platform-independent application interface layer. Parts of this interface layer are generated from task specification to provide tasks with tailored communication services.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 25th International Conference on Computer Safety, Reliability, and Security
DA  - 2006///
PY  - 2006
DO  - 10.1007/11875567_29
SP  - 386
EP  - 397
PB  - Springer-Verlag
SN  - 3-540-45762-3
UR  - https://doi.org/10.1007/11875567_29
KW  - embedded systems
KW  - dependability
KW  - virtualization
ER  - 

TY  - CONF
TI  - Industrial Perspective on Reuse of Safety Artifacts in Software Product Lines
AU  - Wolschke, Christian
AU  - Becker, Martin
AU  - Schneickert, SÃ¶ren
AU  - Adler, Rasmus
AU  - MacGregor, John
T3  - SPLC '19
AB  - In the future, safety-critical industrial products will have to be maintained and variants will have to be produced. In order to do this economically, the safety artifacts of the components should also be reused. At present, however, it is still unclear how this reuse could take place. Moreover this reuse is complicated, by the different situations in the various industries involved and by the corresponding standards applied.Current industrial practice for certification processes relies on a component-based view of reuse. We investigate the possibilities of product lines with managed processes for reuse also across multiple domains.In order to identify the challenges and possible solutions, we conducted interviews with industry partners from the domains of ICT, Rail, Automotive, and Industrial Automation, and from small- and medium-sized enterprises to large organizations. The semi-structured interviews identified the characteristics of current safety engineering processes, the handling of general variety and reuse, the approach followed for safety artifacts, and the need for improvement.In addition, a detailed literature survey summarizes existing approaches. We investigate which modularity concepts exist for dealing with safety, how variability concepts integrate safety, by which means process models can consider safety, and how safety cases are evolved while maintenance takes place. An overview of similar research projects complements the analysis.The identified challenges and potential solution proposals show how safety is related to Software Product Lines.
C1  - New York, NY, USA
C3  - Proceedings of the 23rd International Systems and Software Product Line Conference - Volume A
DA  - 2019///
PY  - 2019
DO  - 10.1145/3336294.3336315
SP  - 143
EP  - 154
PB  - Association for Computing Machinery
SN  - 978-1-4503-7138-4
UR  - https://doi.org/10.1145/3336294.3336315
KW  - modular safety
KW  - open source certification
KW  - product line certification
KW  - safety reuse
KW  - safety standards
ER  - 

TY  - CONF
TI  - Expressing Confidence in Models and in Model Transformation Elements
AU  - BurgueÃ±o, Loli
AU  - Bertoa, Manuel F.
AU  - Moreno, Nathalie
AU  - Vallecillo, Antonio
T3  - MODELS '18
AB  - The expression and management of uncertainty, both in the information and in the operations that manipulate it, is a critical issue in those systems that work with physical environments. Measurement uncertainty can be due to several factors, such as unreliable data sources, tolerance in the measurements, or the inability to determine if a certain event has actually happened or not. In particular, this contribution focuses on the expression of one kind of uncertainty, namely the confidence on the model elements, i.e., the degree of belief that we have on their occurrence, and on how such an uncertainty can be managed and propagated through model transformations, whose rules can also be subject to uncertainty.
C1  - New York, NY, USA
C3  - Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems
DA  - 2018///
PY  - 2018
DO  - 10.1145/3239372.3239394
SP  - 57
EP  - 66
PB  - Association for Computing Machinery
SN  - 978-1-4503-4949-9
UR  - https://doi.org/10.1145/3239372.3239394
KW  - confidence
KW  - model transformations
KW  - models
KW  - Uncertainty
ER  - 

TY  - JOUR
TI  - Digital Factory System for Dynamic Manufacturing Network Supporting Networked Collaborative Product Development
AU  - Tchoffa, D.
AU  - Figay, N.
AU  - Ghodous, P.
AU  - Exposito, E.
AU  - Kermad, Lyes
AU  - Vosgien, Thomas
AU  - El Mhamedi, A.
T2  - Data Knowl. Eng.
AB  - During the last years, important research investments have been made by Airbus Group Innovations for the establishment of sustainable Product and Process data interoperability based on open standards. Driven successively by concurrent engineering, collaborative product design in the virtual enterprise or digital behavorial aircraft, it was capitalize through the establishment of a federative interoperability framework. Driven by factory of the future-related research, the dynamic manufacturing network (DMN) concept enriched the framework, which aims at providing agile infrastructure for networked collaborative product development. For such networks, protocols based on open eBusiness product lifecycle management (PLM) standards for exchange and sharing of product and process data between the implied organizations, their processes and the technical enteprise applications supporting these processes are needed This paper presents a new way of combining model-based enterprise platform engineering, model-driven architecture, and system engineering in order to adress the establishment of a sustainable interoperability within DMN. Based on relevant litterature interoperability issues, this paper describes the new approach, which relies on the association of effective existing technologies coupled with research results on the fields of model-driven engineering (MDE), enterprise interoperability, system engineering and PLM. The new approach relies on the concept of digital factory system (DFS) coupled with DMN in order to produce sustainable and agile collaborative infrastructure for manufacturing digital ebusiness ecosystem. The approach is then illustrated through use case coming from the IMAGINE project and an outline is provided on how it will be used and developed further for the assessment of PLM standards and their implementation in the Standard Interoperability PLM project at IRT-Systemx.
DA  - 2016/09//
PY  - 2016
DO  - 10.1016/j.datak.2016.02.004
VL  - 105
IS  - C
SP  - 130
EP  - 154
SN  - 0169-023X
UR  - https://doi.org/10.1016/j.datak.2016.02.004
KW  - Dynamic manufacturing network
KW  - Interoperability
KW  - Model-based enterprise platform engineering
KW  - Open standards
KW  - Product lifecycle management
ER  - 

TY  - BOOK
TI  - The Complete Business Process Handbook: Body of Knowledge from Process Modeling to BPM, Volume I
AU  - Rosing, Mark von
AU  - Scheel, Henrik von
AU  - Scheer, August-Wilhelm
AB  - This is the most comprehensive body of knowledge on business processes. Written as a practical guide for Executives, Practitioners, Managers and Students by the authorities that have shaped the way we think and work with process today. This book is one of tree volumes, representing the most comprehensive body of knowledge publised on business process. Second volume uniquely bridging theory with how BPM is applied today with the most extensive information on extended BPM. The third volume explores award winning real-life examples of leading business process practices and how it can be replaced to your advantage. Covering what Practitioners, Managers, Executives and Students need to know about Key Features Learn what Business Process is and how to get started Comprehensive historical process evolution In-depth look at the Process Anatomy, Semantics and Ontology Find out how to link Strategy to Operation with value driven BPM Uncover how to establish a way of Thinking, Working, Modelling and Implementation Explore comprehensive Frameworks, Methods and Approaches How to build BPM competencies and establish a Center of Excellence Discover how to apply Social BPM, Sustainable and Evidence based BPM Learn how Value &amp; Performance Measurement and Management Learn how to roll-out and deploy process Explore how to enable Process Owners, Roles and Knowledge Workers Discover how to Process and Application Modelling Uncover Process Lifecycle, Maturity, Alignment and Continuous Improvement Practical continuous improvement with the way of Governance Future BPM trends that will affect business Explore the BPM Body of Knowledge
CY  - San Francisco, CA, USA
DA  - 2014///
PY  - 2014
ET  - 1st
PB  - Morgan Kaufmann Publishers Inc.
SN  - 0-12-799959-0
ER  - 

TY  - JOUR
TI  - Multicast/Broadcast Network Convergence in next Generation Mobile Networks
AU  - Santos, Justino
AU  - Gomes, Diogo
AU  - Sargento, Susana
AU  - Aguiar, Rui L.
AU  - Baker, Nigel
AU  - Zafar, Madiha
AU  - Ikram, Ahsan
T2  - Comput. Netw.
AB  - The 3GPP Multimedia Broadcast Multicast Service (MBMS) aims to introduce group communications into the 3G networks. One of the current key challenges is how to evolve these incipient features towards the âbeyond 3G visionâ of a converged global network where multimedia content can be delivered over one or more selected broadcast transport bearers. This paper presents potential multicast/broadcast technologies convergence and discusses the issues and challenges in moving towards this next generation network vision from the viewpoint of evolving MBMS.
DA  - 2008/01//
PY  - 2008
DO  - 10.1016/j.comnet.2007.09.002
VL  - 52
IS  - 1
SP  - 228
EP  - 247
SN  - 1389-1286
UR  - https://doi.org/10.1016/j.comnet.2007.09.002
KW  - IMS
KW  - MBMS
KW  - Multimedia and broadcast
KW  - Service enablers
ER  - 

TY  - JOUR
TI  - Literature Review of Industry 4.0 and Related Technologies
AU  - Oztemel, Ercan
AU  - Gursev, Samet
T2  - J. Intell. Manuf.
AB  - Manufacturing industry profoundly impact economic and societal progress. As being a commonly accepted term for research centers and universities, the Industry 4.0 initiative has received a splendid attention of the business and research community. Although the idea is not new and was on the agenda of academic research in many years with different perceptions, the term âIndustry 4.0â is just launched and well accepted to some extend not only in academic life but also in the industrial society as well. While academic research focuses on understanding and defining the concept and trying to develop related systems, business models and respective methodologies, industry, on the other hand, focuses its attention on the change of industrial machine suits and intelligent products as well as potential customers on this progress. It is therefore important for the companies to primarily understand the features and content of the Industry 4.0 for potential transformation from machine dominant manufacturing to digital manufacturing. In order to achieve a successful transformation, they should clearly review their positions and respective potentials against basic requirements set forward for Industry 4.0 standard. This will allow them to generate a well-defined road map. There has been several approaches and discussions going on along this line, a several road maps are already proposed. Some of those are reviewed in this paper. However, the literature clearly indicates the lack of respective assessment methodologies. Since the implementation and applications of related theorems and definitions outlined for the 4th industrial revolution is not mature enough for most of the reel life implementations, a systematic approach for making respective assessments and evaluations seems to be urgently required for those who are intending to speed this transformation up. It is now main responsibility of the research community to developed technological infrastructure with physical systems, management models, business models as well as some well-defined Industry 4.0 scenarios in order to make the life for the practitioners easy. It is estimated by the experts that the Industry 4.0 and related progress along this line will have an enormous effect on social life. As outlined in the introduction, some social transformation is also expected. It is assumed that the robots will be more dominant in manufacturing, implanted technologies, cooperating and coordinating machines, self-decision-making systems, autonom problem solvers, learning machines, 3D printing etc. will dominate the production process. Wearable internet, big data analysis, sensor based life, smart city implementations or similar applications will be the main concern of the community. This social transformation will naturally trigger the manufacturing society to improve their manufacturing suits to cope with the customer requirements and sustain competitive advantage. A summary of the potential progress along this line is reviewed in introduction of the paper. It is so obvious that the future manufacturing systems will have a different vision composed of products, intelligence, communications and information network. This will bring about new business models to be dominant in industrial life. Another important issue to take into account is that the time span of this so-called revolution will be so short triggering a continues transformation process to yield some new industrial areas to emerge. This clearly puts a big pressure on manufacturers to learn, understand, design and implement the transformation process. Since the main motivation for finding the best way to follow this transformation, a comprehensive literature review will generate a remarkable support. This paper presents such a review for highlighting the progress and aims to help improve the awareness on the best experiences. It is intended to provide a clear idea for those wishing to generate a road map for digitizing the respective manufacturing suits. By presenting this review it is also intended to provide a hands-on library of Industry 4.0 to both academics as well as industrial practitioners. The top 100 headings, abstracts and key words (i.e. a total of 619 publications of any kind) for each search term were independently analyzed in order to ensure the reliability of the review process. Note that, this exhaustive literature review provides a concrete definition of Industry 4.0 and defines its six design principles such as interoperability, virtualization, local, real-time talent, service orientation and modularity. It seems that these principles have taken the attention of the scientists to carry out more variety of research on the subject and to develop implementable and appropriate scenarios. A comprehensive taxonomy of Industry 4.0 can also be developed through analyzing the results of this review.
DA  - 2020/01//
PY  - 2020
DO  - 10.1007/s10845-018-1433-8
VL  - 31
IS  - 1
SP  - 127
EP  - 182
SN  - 0956-5515
UR  - https://doi.org/10.1007/s10845-018-1433-8
KW  - Cyber-physical systems
KW  - Industry 4.0
KW  - Big data
KW  - Cloud systems
KW  - Internet of things (IoT)
KW  - Smart factory
ER  - 

TY  - JOUR
TI  - Opportunities in Intelligent Modeling Assistance
AU  - Mussbacher, Gunter
AU  - Combemale, Benoit
AU  - Kienzle, JÃ¶rg
AU  - AbrahÃ£o, Silvia
AU  - Ali, Hyacinth
AU  - Bencomo, Nelly
AU  - BÃºr, MÃ¡rton
AU  - BurgueÃ±o, Loli
AU  - Engels, Gregor
AU  - Jeanjean, Pierre
AU  - JÃ©zÃ©quel, Jean-Marc
AU  - KÃ¼hn, Thomas
AU  - Mosser, SÃ©bastien
AU  - Sahraoui, Houari
AU  - Syriani, Eugene
AU  - VarrÃ³, DÃ¡niel
AU  - Weyssow, Martin
T2  - Softw. Syst. Model.
AB  - Modeling is requiring increasingly larger efforts while becoming indispensable given the complexity of the problems we are solving. Modelers face high cognitive load to understand a multitude of complex abstractions and their relationships. There is an urgent need to better support tool builders to ultimately provide modelers with intelligent modeling assistance that learns from previous modeling experiences, automatically derives modeling knowledge, and provides context-aware assistance. However, current intelligent modeling assistants (IMAs) lack adaptability and flexibility for tool builders, and do not facilitate understanding the differences and commonalities of IMAs for modelers. Such a patchwork of limited IMAs is a lost opportunity to provide modelers with better support for the creative and rigorous aspects of software engineering. In this expert voice, we present a conceptual reference framework (RF-IMA) and its properties to identify the foundations for intelligent modeling assistance. For tool builders, RF-IMA aims to help build IMAs more systematically. For modelers, RF-IMA aims to facilitate comprehension, comparison, and integration of IMAs, and ultimately to provide more intelligent support. We envision a momentum in the modeling community that leads to the implementation of RF-IMA and consequently future IMAs. We identify open challenges that need to be addressed to realize the opportunities provided by intelligent modeling assistance.
DA  - 2020/09//
PY  - 2020
DO  - 10.1007/s10270-020-00814-5
VL  - 19
IS  - 5
SP  - 1045
EP  - 1053
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-020-00814-5
KW  - Model-based software engineering
KW  - Artificial intelligence
KW  - Development data
KW  - Feedback
KW  - Integrated development environment
KW  - Intelligent modeling assistance
ER  - 

TY  - JOUR
TI  - Experience from Model and Software Reuse in Aircraft Simulator Product Line Engineering
AU  - Andersson, Henric
AU  - Herzog, Erik
AU  - ÃLvander, Johan
T2  - Inf. Softw. Technol.
AB  - Context: âReuseâ and âModel Based Developmentâ are two prominent trends for improving industrial development efficiency. Product lines are used to reduce the time to create product variants by reusing components. The model based approach provides the opportunity to enhance knowledge capture for a system in the early stages in order to be reused throughout its lifecycle. This paper describes how these two trends are combined to support development and support of a simulator product line for the SAAB 39 Gripen fighter aircraft. Objective: The work aims at improving the support (in terms of efficiency and quality) when creating simulation model configurations. Software based simulators are flexible so variants and versions of included models may easily be exchanged. The objective is to increase the reuse when combining models for usage in a range of development and training simulators. Method: The research has been conducted with an interactive approach using prototyping and demonstrations, and the evaluation is based on an iterative and a retrospective method. Results: A product line of simulator models for the SAAB 39 Gripen aircraft has been analyzed and defined in a Product Variant Master. A configurator system has been implemented for creation, integration, and customization of stringent simulator model configurations. The system is currently under incorporation in the standard development process at SAAB Aeronautics. Conclusion: The explicit and visual description of products and their variability through a configurator system enables better insights and a common understanding so that collaboration on possible product configurations improves and the potential of software reuse increases. The combination of application fields imposes constraints on how traditional tools and methods may be utilized. Solutions for Design Automation and Knowledge Based Engineering are available, but their application has limitations for Software Product Line engineering and the reuse of simulation models.
DA  - 2013/03//
PY  - 2013
DO  - 10.1016/j.infsof.2012.06.014
VL  - 55
IS  - 3
SP  - 595
EP  - 606
SN  - 0950-5849
UR  - https://doi.org/10.1016/j.infsof.2012.06.014
KW  - Configurator
KW  - Knowledge Based Engineering
KW  - Model Based Development
KW  - PDM
KW  - Software Product Line
KW  - SPL
ER  - 

TY  - JOUR
TI  - Integrating Model-in-the-Loop Simulations to Model-Driven Development in Industrial Control
AU  - VepsÃ¤lÃ¤inen, Timo
AU  - Kuikka, Seppo
T2  - Simulation
AB  - Software applications are becoming increasingly important in automation and control systems. This has forced control system vendors and integrators to pursue new, more effective software development practices. One of the promising research paths has been the utilization of Unified Modeling Language and model-driven development. However, integration of simulations to the existing model-driven development approaches still has not been sufficiently described in the literature. This is surprising as advanced mathematical simulation tools are already in use in the domain to facilitate control algorithm development. In this paper, this issue is addressed by extending a tool-supported model-driven development process with object-oriented, component-based simulation capabilities. To demonstrate the proposed technique, a control system model for a crane system is developed and the technique then used to create a Modelica simulation of the controlled crane.
DA  - 2014/12//
PY  - 2014
DO  - 10.1177/0037549714553229
VL  - 90
IS  - 12
SP  - 1295
EP  - 1311
SN  - 0037-5497
UR  - https://doi.org/10.1177/0037549714553229
KW  - automation and control
KW  - Model-driven development
KW  - model-in-the-loop
KW  - simulations
ER  - 

TY  - CONF
TI  - On Digital Economy Issues Looking From the Information Systems Viewpoint
AU  - Sneps-Sneppe, Manfred
AU  - Namiot, Dmitry
AU  - Alberts, Maris
T3  - FRUCT'22
AB  - This paper is devoted to the digital transformations and digital economy programs. In particular, we are considering programs for the transition to a digital economy in the Russian Federation. It is obvious that telecommunications represent the basis for digital transformations. The paper discusses the software development and mathematical modeling issues relating to the program of Digital Economy, in particular, "Digital Economy of the Russian Federation" The main focus of our review is an information infrastructure. As examples of digital transformation, we are considering the largest information systems in the US. It seems to us that the lessons of their implementation are applicable to Russian problems. We discuss the movement from circuit switching to packet switching and some challenges of transformation. We consider information network interfaces (control points) and discuss Federal Enterprise Architecture, namely, e-Government. Particular attention is paid to issues of cybersecurity and to the issues of system modeling, which, in our opinion, are greatly underestimated.
C1  - Helsinki, Uusimaa, FIN
C3  - Proceedings of the 22st Conference of Open Innovations Association FRUCT
DA  - 2018///
PY  - 2018
PB  - FRUCT Oy
KW  - Digital economy
KW  - e-Government
KW  - System modeling
ER  - 

TY  - JOUR
TI  - System Theoretic Foundations of Modeling and Simulation: A Historic Perspective and the Legacy of A Wayne Wymore
AU  - Ãren, Tuncer I
AU  - Zeigler, Bernard P
T2  - Simulation
AB  - AW Wymore, the founder of the world's first systems engineering department at the University of Arizona, has been at the origin of the system theoretic foundations of modeling and simulation. Wymore's intellectual family tree, which goes back to Gauss and Weierstrass, is given. How the authors met, cooperated, and advocated system theory for the advancement of modeling and simulation are explained. The concept of model-based simulation was also one of the outcomes of this cooperation. This article reviews the emergence of systems-theory-based modeling and simulation languages and environments, such as the General System Theory implementor and Discrete Event System Specification, and their relation to Wymore's concepts. We also discuss the application of powerful software development frameworks to support user-friendly access to systems concepts and to increase the power to support systems design and engineering.
DA  - 2012/09//
PY  - 2012
DO  - 10.1177/0037549712450360
VL  - 88
IS  - 9
SP  - 1033
EP  - 1046
SN  - 0037-5497
UR  - https://doi.org/10.1177/0037549712450360
KW  - Discrete Event System Specification
KW  - General System Theory implementor
KW  - history of modeling and simulation
KW  - model-based simulation
KW  - system theoretic foundations of modeling and simulation
KW  - Wymore
ER  - 

TY  - JOUR
TI  - Hardware Architecture Exploration: Automatic Exploration of Distributed Automotive Hardware Architectures
AU  - Eder, Johannes
AU  - Voss, Sebastian
AU  - Bayha, Andreas
AU  - Ipatiov, Alexandru
AU  - Khalil, Maged
T2  - Softw. Syst. Model.
AB  - As the engineering of distributed embedded systems is getting more and more complex, due to increasingly sophisticated functionalities demanding more and more powerful hardware, model-based development of software-intensive embedded systems has become a de facto standard in recent years. Among other advantages, it enables design space exploration methods allowing for frontloading techniques which support a system architect already at early stages of development. In this paper, we want to present an approach which is capable of automatically generating automotive E/E architectures (electric/electronic architecture; in-car network of processing units and buses). Based on the concept of viewpoints, we will introduce dedicated technical meta-models, a language to formally describe a hardware architecture exploration problem and an automatic exploration approach using satisfiability modulo theories. We will furthermore introduce a dedicated methodology and show how an exploration integrates into a system development process. In the end, we will evaluate our approach by applying it to an industrial use case provided by Continental.
DA  - 2020/07//
PY  - 2020
DO  - 10.1007/s10270-020-00786-6
VL  - 19
IS  - 4
SP  - 911
EP  - 934
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-020-00786-6
KW  - E/E architecture
KW  - Automotive
KW  - Design space exploration
ER  - 

TY  - CONF
TI  - Predicting the Effects of Automation Reliability Rates on Human-Automation Team Performance
AU  - Hillesheim, Anthony J.
AU  - Rusnock, Christina F.
T3  - WSC '16
AB  - This study investigates the effects of reduced automation reliability rates on human-automation team performance. Specifically, System Modeling Language (SysML) activity diagrams and Improved Performance Research Integrated Tool (IMPRINT) models are developed for a tablet-based game which includes an automated teammate. The baseline model uses previously collected data from human-in-the-loop experiments where the automated teammate performs with 100% reliability. It is expected that team performance and user trust in automation will be affected if the automation is less reliable. The baseline model is modified to create alternate models that incorporate degraded automation reliability rates from 50% to 90%. This study finds that when automation reliability was 100% the automation was an effective teammate and enabled the human-automation team to achieve statistically improved performance over human-only scenarios. However, at reliability rates of 90% and less, the presence of the automated agent degraded system performance to levels less than achieved in human-only scenarios.
C3  - Proceedings of the 2016 Winter Simulation Conference
DA  - 2016///
PY  - 2016
SP  - 1802
EP  - 1813
PB  - IEEE Press
SN  - 978-1-5090-4484-9
ER  - 

TY  - CONF
TI  - Experiences and Reflections on Three Years of CPS Summer Schools within EIT Digital
AU  - Cancila, Daniela
AU  - Nuzzo, Valeria
AU  - Stoycheva, Milena
AU  - Birk, Wolfgang
AU  - Asplund, Fredrik
AU  - Torngren, Martin
T3  - WESE '16
AB  - This article provides an overview of current European Commission effort in term of educational innovation to reduce the gap between research and industry which still is a barrier to the economic development. Entrepreneurial innovation &amp; education driving Europe's digital transformation (EIT Digital for short) is an European-based initiative fostering I&amp;E (innovation and entrepreneurship) by integrating education, research and business at different educational levels. For instance in EIT master programmes, students work together with industries and academics to have a faster go-to-market of research results. Summer schools are part of the master programs; three of them have been organised related to CPS (cyber-physical systems), critical infrastructure and, more recently, Industry 4.0. Past and present events are discussed and the experience from these events is reported. It is further analysed how the general setup of the summer school program is affecting the educational aspects and achievement of the intended learning outcomes.
C1  - New York, NY, USA
C3  - Proceedings of the 2016 Workshop on Embedded and Cyber-Physical Systems Education
DA  - 2016///
PY  - 2016
DO  - 10.1145/3005329.3005336
PB  - Association for Computing Machinery
SN  - 978-1-4503-4657-3
UR  - https://doi.org/10.1145/3005329.3005336
KW  - cyber-physical system European summer school
KW  - innovation and entrepreneurship and cps interrelationship
ER  - 

TY  - JOUR
TI  - Exploring System Architectures in AADL via Polychrony and SynDEx
AU  - Yu, Huafeng
AU  - Ma, Yue
AU  - Gautier, Thierry
AU  - Besnard, LoÃ¯c
AU  - Talpin, Jean-Pierre
AU  - Guernic, Paul
AU  - Sorel, Yves
T2  - Front. Comput. Sci.
AB  - Architecture analysis &amp; design language (AADL) has been increasingly adopted in the design of embedded systems, and corresponding scheduling and formal verification have been well studied. However, little work takes code distribution and architecture exploration into account, particularly considering clock constraints, for distributed multi-processor systems. In this paper, we present an overview of our approach to handle these concerns, together with the associated toolchain, AADL-Polychrony-SynDEx. First, in order to avoid semantic ambiguities of AADL, the polychronous/multiclock semantics of AADL, based on a polychronous model of computation, is considered. Clock synthesis is then carried out in Polychrony, which bridges the gap between the polychronous semantics and the synchronous semantics of SynDEx. The same timing semantics is always preserved in order to ensure the correctness of the transformations between different formalisms. Code distribution and corresponding scheduling is carried out on the obtained SynDEx model in the last step, which enables the exploration of architectures originally specified in AADL. Our contribution provides a fast yet efficient architecture exploration approach for the design of distributed real-time and embedded systems. An avionic case study is used here to illustrate our approach.
DA  - 2013/10//
PY  - 2013
DO  - 10.1007/s11704-013-2307-z
VL  - 7
IS  - 5
SP  - 627
EP  - 649
SN  - 2095-2228
UR  - https://doi.org/10.1007/s11704-013-2307-z
KW  - AADL
KW  - architecture exploration
KW  - distribution
KW  - modeling
KW  - Polychrony
KW  - scheduling
KW  - Signal
KW  - SynDEx
KW  - timing analysis
ER  - 

TY  - CONF
TI  - Socio-Cyberphysical System Resource Semantic Interoperability: General Scenarios and Ontology
AU  - Kalyazina, Darya
AU  - Kashevnik, Alexey
T3  - FRUCT'22
AB  - The paper addresses to socio-cyberphysical system resources interoperability support based on the core ontology utilization. Socio-cyberphysical systems consist of three levels: physical, informational and social. Such systems are used for solving a wide range of tasks involving robots and humans. The paper considers three basic scenarios that have been identified to cover the main aspects of human-robot interaction in socio- cyberphysical systems. Based on these scenarios the socio- cyberphysical system ontology has been developed that provides interoperability between robots and humans. For the ontology development the most Ontology has been developed in Protege ontology editor.
C1  - Helsinki, Uusimaa, FIN
C3  - Proceedings of the 22st Conference of Open Innovations Association FRUCT
DA  - 2018///
PY  - 2018
PB  - FRUCT Oy
KW  - interoperability
KW  - ontology
KW  - ontology editor
KW  - socio-cyberphisical system
ER  - 

TY  - CONF
TI  - Leveraging Ada 2012 and SPARK 2014 for Assessing Generated Code from AADL Models
AU  - Hugues, JÃ©rÃ´me
AU  - Garion, Christophe
T3  - HILT '14
AB  - Modeling of Distributed Real-time Embedded systems using Architecture Description Language provides the foundations for various levels of analysis: scheduling, reliability, consistency, etc.; but also allows for automatic code generation. A challenge is to demonstrate that generated code matches quality required for safety-critical systems. In the scope of the AADL, the Ocarina toolchain proposes code generation towards the Ada Ravenscar profile with restrictions for High-Integrity. It has been extensively used in the space domain as part of the TASTE project within the European Space Agency.In this paper, we illustrate how the combined use of Ada 2012 and SPARK 2014 significantly increases code quality and exhibits absence of run-time errors at both run-time and generated code levels.
C1  - New York, NY, USA
C3  - Proceedings of the 2014 ACM SIGAda Annual Conference on High Integrity Language Technology
DA  - 2014///
PY  - 2014
DO  - 10.1145/2663171.2663180
SP  - 39
EP  - 46
PB  - Association for Computing Machinery
SN  - 978-1-4503-3217-0
UR  - https://doi.org/10.1145/2663171.2663180
KW  - aadl
KW  - ada 2012
KW  - ocarina
KW  - spark 2014
ER  - 

TY  - JOUR
TI  - Leveraging Ada 2012 and SPARK 2014 for Assessing Generated Code from AADL Models
AU  - Hugues, JÃ©rÃ´me
AU  - Garion, Christophe
T2  - Ada Lett.
AB  - Modeling of Distributed Real-time Embedded systems using Architecture Description Language provides the foundations for various levels of analysis: scheduling, reliability, consistency, etc.; but also allows for automatic code generation. A challenge is to demonstrate that generated code matches quality required for safety-critical systems. In the scope of the AADL, the Ocarina toolchain proposes code generation towards the Ada Ravenscar profile with restrictions for High-Integrity. It has been extensively used in the space domain as part of the TASTE project within the European Space Agency.In this paper, we illustrate how the combined use of Ada 2012 and SPARK 2014 significantly increases code quality and exhibits absence of run-time errors at both run-time and generated code levels.
DA  - 2014/10//
PY  - 2014
DO  - 10.1145/2692956.2663180
VL  - 34
IS  - 3
SP  - 39
EP  - 46
SN  - 1094-3641
UR  - https://doi.org/10.1145/2692956.2663180
KW  - aadl
KW  - ada 2012
KW  - ocarina
KW  - spark 2014
ER  - 

TY  - JOUR
TI  - Synergies of Simulation, Agents, and Systems Engineering
AU  - Ãren, Tuncer
AU  - Yilmaz, Levent
T2  - Expert Syst. Appl.
AB  - Simulation, software agents, and systems engineering are three important disciplines; each of which support many application areas. In this article it is pointed out that their usefulness and efficacy can be significantly improved by first and higher order synergies.
DA  - 2012/01//
PY  - 2012
DO  - 10.1016/j.eswa.2011.06.038
VL  - 39
IS  - 1
SP  - 81
EP  - 88
SN  - 0957-4174
UR  - https://doi.org/10.1016/j.eswa.2011.06.038
KW  - Simulation
KW  - Agents
KW  - Synergy
KW  - Systems engineering
ER  - 

TY  - CONF
TI  - Multi-Domain Flight Simulation with the DLR Robotic Motion Simulator
AU  - Seefried, Andreas
AU  - Pollok, Alexander
AU  - Kuchar, Richard
AU  - Hellerer, Matthias
AU  - Leitner, Martin
AU  - Milz, Daniel
AU  - Schallert, Christian
AU  - Kier, Thiemo
AU  - Looye, Gertjan
AU  - Bellmann, Tobias
T3  - ANSS '19
AB  - Aircraft are highly optimized, integrated systems that operate under vastly varying conditions and provide many functionalities. The systems providing these functionalities are highly interconnected, making the design of aircraft a very complex and risky undertaking. The ever increasing complexity is a strong motivation to not only address individual disciplines, but also their integration and interactions from the earliest design stages.Multi-disciplinary modeling and simulation have been of strong interest for many years. In this paper, a highly modular framework for aircraft models and model components is presented that is able to integrate and interchange all relevant physical aspects, systems and environmental aspects.The resulting simulation enables to 'fly' an aircraft with all relevant functionalities under realistic circumstances and enables integrated design analyses, covering operational aspects and failure cases. The integrated simulation can run in batch mode as well as real-time application driving the DLR Robotic Motion Simulator.
C1  - San Diego, CA, USA
C3  - Proceedings of the Annual Simulation Symposium
DA  - 2019///
PY  - 2019
PB  - Society for Computer Simulation International
KW  - Modelica
KW  - HIL
KW  - motion simulation
KW  - Simulink
ER  - 

TY  - CONF
TI  - Efficient Analysis for Emergency Management Using Simulation Metamodeling: A Case Study for a Medical Trauma Center
AU  - Rosen, Scott L.
AU  - Ramsey, Jim
AU  - Harvey, Christine E.
AU  - Guharay, Samar K.
T3  - SummerSim '15
AB  - This paper presents a rapid, quantitative simulation-based approach for Systems Engineering applicable to the emergency management domain. The motivation behind this approach is to provide improved decision-support for emergencies. A case study is performed on a problem in the healthcare domain concerning the effect of worker capacities in a trauma center. The application of simulation to healthcare systems analysis is a growing area, but analysis with large-scale simulations can be inefficient due to their long run times. This problem can be overcome by simulation metamodeling that provides the ability to expedite system evaluations and enable complex systems analysis. This paper demonstrates the effectiveness of simulation metamodeling for healthcare systems analysis. The methodology developed for this case study has the potential to be transferred or applied to other scenarios for emergency management.
C1  - San Diego, CA, USA
C3  - Proceedings of the Conference on Summer Computer Simulation
DA  - 2015///
PY  - 2015
SP  - 1
EP  - 8
PB  - Society for Computer Simulation International
SN  - 978-1-5108-1059-4
KW  - pareto analysis
KW  - simulation metamodeling
KW  - healthcare
ER  - 

TY  - JOUR
TI  - Management of Correctness Problems in UML Class Diagrams Towards a Pattern-Based Approach
AU  - Sturm, Arnon
AU  - Balaban, Mira
AU  - Maraee, Azzam
T2  - Int. J. Inf. Syst. Model. Des.
AB  - UML is now widely accepted as the standard modeling language for software construction. The Class Diagram is its core view, having well formed semantics and providing the backbone for any modeling effort. Class diagrams are widely used for purposes such as software specification, database and ontology engineering, meta-modeling, and model transformation. The central role played by class diagrams emphasizes the need for strengthening UML modeling tools with features such as recognition of erroneous models and the detection of errors' sources. Correctness of UML class diagrams refers to the capability of a diagram to denote a finite but not empty reality. This is a natural, unquestionable requirement. Nevertheless, incorrect diagrams are often designed, due to the interaction of contradicting constraints and the limitations of current tools. In this paper, the authors clarify the notion of class diagram correctness, discuss various approaches for detecting correctness problems, and propose a pattern-based approach for identifying situations in which correctness problems occur, and for providing explanations and repair advices.
DA  - 2010/10//
PY  - 2010
DO  - 10.4018/jismd.2010100102
VL  - 1
IS  - 4
SP  - 24
EP  - 47
SN  - 1947-8186
UR  - https://doi.org/10.4018/jismd.2010100102
KW  - Consistency
KW  - Finite Satisfiability
KW  - Incorrectness Patterns
KW  - Model Driven Engineering
KW  - Modeling Languages
KW  - Redundancy
KW  - UML Class Diagrams
ER  - 

TY  - CONF
TI  - Towards Automating the Development of Federated Distributed Simulations for Modeling Sustainable Urban Infrastructures
AU  - Jain, Ajitesh
AU  - Fujimoto, Richard
AU  - Kim, Jongchan
AU  - Liu, Mengmeng
AU  - Crittenden, John
AU  - Lu, Zhongming
T3  - WSC '15
AB  - The study of sustainable urban systems requires analysis of interdependencies and relationships among infrastructures and social processes. Federated simulations using the High Level Architecture is a natural approach to modeling such systems-of-systems. Simulations interoperability requires a common structure and meaning of shared data represented in a Federation Object Model (FOM). Developing the FOM and modifying simulations to comply with the FOM requires a significant amount of time and effort. We describe a system to automate portions of this task. Specifically we present a workflow by which existing simulations can be integrated in a semi-automated process to reduce the manual labor required. We use SysML to describe entities of the federated distributed simulation. These descriptions are used for automatic generation of the FOM and code required for HLA integration. Finally we present a case study applying this methodology to create a federated distributed simulation to study sustainable urban growth.
C3  - Proceedings of the 2015 Winter Simulation Conference
DA  - 2015///
PY  - 2015
SP  - 2668
EP  - 2679
PB  - IEEE Press
SN  - 978-1-4673-9741-4
ER  - 

TY  - CONF
TI  - Towards Smart Manufacturing with Virtual Factory and Data Analytics
AU  - Jain, Sanjay
AU  - Lechevalier, David
AU  - Narayanan, Anantha
T3  - WSC '17
AB  - Virtual factory models can help improve manufacturing decision making when augmented with data analytics applications. Virtual factory models provide the capability of simulating real factories and generating realistic data streams at the desired level of resolution. Deeper insights can be gained and underlying relationships quantified by channeling the simulation output data to an external analytics tool. This paper describes integration of a virtual factory prototype with a neural network analytics application. The combined capability is used to create a neural network capable of predicting the expected cycle times for a small job shop. The capability can adapt by retraining the neural network whenever the production circumstances change significantly. The trained neural network can be used for functions such as order promising and can support factory management. The analytical and adaptive combination represented by the virtual factory integrated with the neural network thus supports the move towards smart manufacturing.
C3  - Proceedings of the 2017 Winter Simulation Conference
DA  - 2017///
PY  - 2017
PB  - IEEE Press
SN  - 978-1-5386-3427-1
ER  - 

TY  - CONF
TI  - A Design of Digital Twins for Supporting Decision-Making in Production Logistics
AU  - Jeong, Yongkuk
AU  - Flores-GarcÃ­a, Erik
AU  - Wiktorsson, Magnus
T3  - WSC '20
AB  - Recent studies suggest that data-driven decision-making facilitated by Digital Twins (DTs) may be essential for optimizing resources and diversifying value creation in production logistics. However, there exists limited understanding about the design of DTs in production logistics. Addressing this issue, this study proposes a process for the design of DTs in production logistics. This study extends related works describing the dimensions of DTs in manufacturing, and adopts a process perspective based on production development literature. The results present a process for the design of DTs including activities in pre-study, conceptual, and detailed design phases corresponding to five DT dimensions. The proposed process is validated during the development of a DT in a production logistics lab at an academic environment. The findings of this study may be essential for avoiding misplaced resources and lost opportunities in the design of DTs in production logistics, and facilitating the planning and resource allocation.
C3  - Proceedings of the Winter Simulation Conference
DA  - 2020///
PY  - 2020
SP  - 2683
EP  - 2694
PB  - IEEE Press
SN  - 978-1-72819-499-8
ER  - 

TY  - JOUR
TI  - A State-of-the-Art Survey of Digital Twin: Techniques, Engineering Product Lifecycle Management and Business Innovation Perspectives
AU  - Lim, Kendrik Yan Hong
AU  - Zheng, Pai
AU  - Chen, Chun-Hsien
T2  - J. Intell. Manuf.
AB  - With the rapid advancement of cyber-physical systems, Digital Twin (DT) is gaining ever-increasing attention owing to its great capabilities to realize Industry 4.0. Enterprises from different fields are taking advantage of its ability to simulate real-time working conditions and perform intelligent decision-making, where a cost-effective solution can be readily delivered to meet individual stakeholder demands. As a hot topic, many approaches have been designed and implemented to date. However, most approaches today lack a comprehensive review to examine DT benefits by considering both engineering product lifecycle management and business innovation as a whole. To fill this gap, this work conducts a state-of-the art survey of DT by selecting 123 representative items together with 22 supplementary works to address those two perspectives, while considering technical aspects as a fundamental. The systematic review further identifies eight future perspectives for DT, including modular DT, modeling consistency and accuracy, incorporation of Big Data analytics in DT models, DT simulation improvements, VR integration into DT, expansion of DT domains, efficient mapping of cyber-physical data and cloud/edge computing integration. This work sets out to be a guide to the status of DT development and application in todayâs academic and industrial environment.
DA  - 2020/08//
PY  - 2020
DO  - 10.1007/s10845-019-01512-w
VL  - 31
IS  - 6
SP  - 1313
EP  - 1337
SN  - 0956-5515
UR  - https://doi.org/10.1007/s10845-019-01512-w
KW  - Product lifecycle management
KW  - Business model
KW  - Cyber-physical system
KW  - Digital Twin
KW  - Review
ER  - 

TY  - JOUR
TI  - Automated Fault Tolerance Augmentation in Model-Driven Engineering for CPS
AU  - Hu, Tingting
AU  - Cibrario Bertolotti, Ivan
AU  - Navet, Nicolas
AU  - Havet, Lionel
T2  - Comput. Stand. Interfaces
DA  - 2020/06//
PY  - 2020
DO  - 10.1016/j.csi.2020.103424
VL  - 70
IS  - C
SN  - 0920-5489
UR  - https://doi.org/10.1016/j.csi.2020.103424
KW  - Model-driven engineering
KW  - Domain-specific languages
KW  - Cognification
KW  - Fault-tolerance
KW  - Industrial cyber physical systems
ER  - 

TY  - CONF
TI  - Formal Foundations for Analyzing and Refactoring Delta-Oriented Model-Based Software Product Lines
AU  - Pietsch, Christopher
AU  - Kelter, Udo
AU  - Kehrer, Timo
AU  - Seidl, Christoph
T3  - SPLC '19
AB  - Model-Based Software Product Line (MBSPL) Engineering combines Model-Based Software Engineering (MBSE) and Software Product Line (SPL) Engineering by specifying variability in models and generating model variants as products of an MBSPL. Delta Modeling (DM) is a transformational approach for implementing MBSPLs by adding, removing or modifying model elements through delta modules to activate individual features. To date, the applicability of DM to real-world MBSPLs is severely hindered due to the resulting complex network of interrelated delta modules in which errors are hard to identify and fix without unintentionally harming overall consistency. To address this challenge, we present a set of analyses to identify problems in a network of delta modules as well as a construction kit to assemble refactorings to remedy these problems and simplify the network. We give a modeling-language independent formalization of delta modules based on graph transformation concepts. This is the basis for our analyses which, in turn, build the basis for our refactorings to prevent unintended side-effects.
C1  - New York, NY, USA
C3  - Proceedings of the 23rd International Systems and Software Product Line Conference - Volume A
DA  - 2019///
PY  - 2019
DO  - 10.1145/3336294.3336299
SP  - 207
EP  - 217
PB  - Association for Computing Machinery
SN  - 978-1-4503-7138-4
UR  - https://doi.org/10.1145/3336294.3336299
KW  - analysis
KW  - delta modeling
KW  - graph transformation
KW  - model-based software product line engineering
KW  - refactoring
ER  - 

TY  - JOUR
TI  - Artefacts in Software Engineering: A Fundamental Positioning
AU  - MÃ©ndez FernÃ¡ndez, Daniel
AU  - BÃ¶hm, Wolfgang
AU  - Vogelsang, Andreas
AU  - Mund, Jakob
AU  - Broy, Manfred
AU  - Kuhrmann, Marco
AU  - Weyer, Thorsten
T2  - Softw. Syst. Model.
AB  - Artefacts play a vital role in software and systems development processes. Other terms like documents, deliverables, or work products are widely used in software development communities instead of the term artefact. In the following, we use the term `artefact' including all these other terms. Despite its relevance, the exact denotation of the term `artefact' is still not clear due to a variety of different understandings of the term and to a careless negligent usage. This often leads to approaches being grounded in a fuzzy, unclear understanding of the essential concepts involved. In fact, there does not exist a common terminology. Therefore, it is our goal that the term artefact be standardised so that researchers and practitioners have a common understanding for discussions and contributions. In this position paper, we provide a positioning and critical reflection upon the notion of artefacts in software engineering at different levels of perception and how these relate to each other. We further contribute a metamodel that provides a description of an artefact that is independent from any underlying process model. This metamodel defines artefacts at three levels. Abstraction and refinement relations between these levels allow correlating artefacts to each other and defining the notion of related, refined, and equivalent artefacts. Our contribution shall foster the long overdue and too often underestimated terminological discussion on what artefacts are to provide a common ground with clearer concepts and principles for future software engineering contributions, such as the design of artefact-oriented development processes and tools.
DA  - 2019/10//
PY  - 2019
DO  - 10.1007/s10270-019-00714-3
VL  - 18
IS  - 5
SP  - 2777
EP  - 2786
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00714-3
KW  - Equivalence of artefacts
KW  - Metamodelling
KW  - Propaedeutics
KW  - Semantics of artefacts
KW  - Software engineering artefacts
KW  - Syntax of artefacts
ER  - 

TY  - JOUR
TI  - XCPS: A Tool to Explore Cyber Physical Systems
AU  - Adyanthaya, Shreya
AU  - Ara, Hadi Alizadeh
AU  - Bastos, JoÃ£o
AU  - Behrouzian, Amir
AU  - SÃ¡nchez, RÃ³binson Medina
AU  - van Pinxten, Joost
AU  - van der Sanden, Bram
AU  - Waqas, Umar
AU  - Basten, Twan
AU  - Corporaal, Henk
AU  - Frijns, Raymond
AU  - Geilen, Marc
AU  - Goswami, Dip
AU  - Hendriks, Martijn
AU  - Stuijk, Sander
AU  - Reniers, Michel
AU  - Voeten, Jeroen
T2  - SIGBED Rev.
AB  - Cyber-Physical Systems (CPS) play an important role in the modern high-tech industry. Designing such systems is an especially challenging task due to the multi-disciplinary nature of these systems, and the range of abstraction levels involved. To facilitate hands-on experience with such systems, we develop a cyber-physical platform that aids in both research and education on CPS. This paper describes this platform, which contains all typical CPS components. The platform is used in various research and education projects for bachelor, master, and PhD students. We discuss the platform and illustrate its use with a number of projects and the educational opportunities they provide.
DA  - 2017/01//
PY  - 2017
DO  - 10.1145/3036686.3036696
VL  - 14
IS  - 1
SP  - 81
EP  - 95
UR  - https://doi.org/10.1145/3036686.3036696
KW  - embedded systems
KW  - cyber-physical systems
KW  - education
ER  - 

TY  - CONF
TI  - A Hierarchical Digital Twin Model Framework for Dynamic Cyber-Physical System Design
AU  - Shangguan, Duansen
AU  - Chen, Liping
AU  - Ding, Jianwan
T3  - ICMRE'19
AB  - Cyber-physical system (CPS) is a new trend in the complex system related research works, where network connectivity enhances computing power and systemic behavior emerges through the competition, interaction, collaboration and integration among individual interweaving, which consists of real-time monitoring, data management, physical feedback control. From this perspective, CPS is a dynamic entity with rich functions. However, designers may encounter a difficult situation, in which subsequent dynamic changes of the system are discussed and appropriate functionalities are added in the early design phase. Since the digital twin is the digital duplicate of the physical entity, it can dynamically evolve following the product life cycle. In this paper, we propose a hierarchical digital twin model framework for CPS design. In the light of digital twin concept, the hierarchical high-level models facilitate storage of information from the entire product life cycle. Finally, an industrial robot application is presented to demonstrate the efficacy of the model framework.
C1  - New York, NY, USA
C3  - Proceedings of the 5th International Conference on Mechatronics and Robotics Engineering
DA  - 2019///
PY  - 2019
DO  - 10.1145/3314493.3314504
SP  - 123
EP  - 129
PB  - Association for Computing Machinery
SN  - 978-1-4503-6095-1
UR  - https://doi.org/10.1145/3314493.3314504
KW  - CPS
KW  - Simulation
KW  - Digital Twin
KW  - Complex System
KW  - Industrial Robot
KW  - Modeling&
ER  - 

TY  - CONF
TI  - Integrating a Neutral Action Language in a DEVS Modelling Environment
AU  - Barroca, Bruno
AU  - Mustafiz, Sadaf
AU  - Van Mierlo, Simon
AU  - Vangheluwe, Hans
T3  - SIMUTools '15
AB  - Visual environments for the modelling and simulation of complex, software-intensive systems are increasingly popular. While visual languages have many advantages, they may not be appropriate to render all details of a Discrete EVent system Specification (DEVS) model. Textual may be more appropriate, both to completely describe all details of a DEVS model (i.e., the content of transition and output functions), and to make the specification independent of the implementation platform (i.e., simulation implementation language).In this paper, we propose two textual notations that are used as part of an integrated modelling and simulation environment for the Parallel DEVS formalism. Both notations allow the specification of DEVS functions by means of neutral action code. DEVSPro uses Python-like textual syntax and supports the full power of Parallel DEVS. From this neutral specification, simulator-specific code is synthesized. DEVSLang supports blended textual/visual modelling. It is more restricted in expressiveness to match the limited expressiveness of visual notations. For example, the sequential states in an Atomic model must be explicitly enumerated.Visual DEVSLang models are transformed to their textual form in order to carry out syntactic and semantic checks. Possible detected errors are fed back to the visual modelling environment allowing the modeller to make changes directly in the source model. DEVSLang models are further translated automatically to DEVSPro models to allow for possible combination with DEVSPro models and subsequent analysis and simulation.
C1  - Brussels, BEL
C3  - Proceedings of the 8th International Conference on Simulation Tools and Techniques
DA  - 2015///
PY  - 2015
DO  - 10.4108/eai.24-8-2015.2260967
SP  - 19
EP  - 28
PB  - ICST (Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering)
SN  - 978-1-63190-079-2
UR  - https://doi.org/10.4108/eai.24-8-2015.2260967
KW  - neutral action code
KW  - parallel DEVS
KW  - textual syntax
ER  - 

TY  - JOUR
TI  - Transportation Risk Analysis Using Probabilistic Model Checking
AU  - Soeanu, Andrei
AU  - Debbabi, Mourad
AU  - Alhadidi, Dima
AU  - Makkawi, Makram
AU  - Allouche, Mohamad
AU  - BÃ©langer, Micheline
AU  - LÃ©chevin, Nicholas
T2  - Expert Syst. Appl.
AB  - Elaboration of an approach for transportation risk assessment and contingency evaluation.Modeling risk prone transportation tasks as composed Markov Decision Process (MDP).Assessment of transportation tasks expressed as MDP via probabilistic model checking.Provision of decision making support via decision trees built from the model checking output.Evaluation of risk related properties expressed in probabilistic temporal logic. Transportation and supply chain activities represent essential components in many endeavors covering both public and private domains. However, the underlying transport networks are complex and potentially fragile due to weather, natural disasters or other risk factors. Thus, assessing transportation related risk represents a key decision support capability along with the ability to evaluate contingency options for risk mitigation. In this paper, we address these issues by adopting probabilistic model checking to evaluate the risk and contingency options related to transportation tasks. In this pursuit, risk related properties are assessed for behavioral models capturing the transport system. Moreover, we show the usefulness of constructing decision trees that can provide insightful means of risk appraisal. The proposed approach can help decision makers evaluate contingency options and determine lower and upper cost bounds for risky transportation tasks such as those involved in humanitarian aid provision. The proposed approach is also illustrated with a case study.
DA  - 2015/06//
PY  - 2015
DO  - 10.1016/j.eswa.2014.12.052
VL  - 42
IS  - 9
SP  - 4410
EP  - 4421
SN  - 0957-4174
UR  - https://doi.org/10.1016/j.eswa.2014.12.052
KW  - Decision making
KW  - Model checking
KW  - Risk management
KW  - Transport
ER  - 

TY  - JOUR
TI  - Grand Challenges in Model-Driven Engineering: An Analysis of the State of the Research
AU  - Bucchiarone, Antonio
AU  - Cabot, Jordi
AU  - Paige, Richard F.
AU  - Pierantonio, Alfonso
T2  - Softw. Syst. Model.
AB  - In 2017 and 2018, two events were heldâin Marburg, Germany, and San Vigilio di Marebbe, Italy, respectivelyâfocusing on an analysis of the state of research, state of practice, and state of the art in model-driven engineering (MDE). The events brought together experts from industry, academia, and the open-source community to assess what has changed in research in MDE over the last 10&nbsp;years, what challenges remain, and what new challenges have arisen. This article reports on the results of those meetings, and presents a set of grand challenges that emerged from discussions and synthesis. These challenges could lead to research initiatives for the community going forward.
DA  - 2020/01//
PY  - 2020
DO  - 10.1007/s10270-019-00773-6
VL  - 19
IS  - 1
SP  - 5
EP  - 13
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00773-6
KW  - Model-driven engineering
KW  - Grand challenge
KW  - Research roadmap
ER  - 

TY  - JOUR
TI  - ARMORY: An Automatic Security Testing Tool for Buffer Overflow Defect Detection
AU  - Chen, Li-Han
AU  - Hsu, Fu-Hau
AU  - Hwang, Yanling
AU  - Su, Mu-Chun
AU  - Ku, Wei-Shinn
AU  - Chang, Chi-Hsuan
T2  - Comput. Electr. Eng.
AB  - Program Buffer Overflow Defects (PBODs) are the stepping stones of Buffer Overflow Attacks (BOAs), which are one of the most dangerous security threats to the Internet. In this paper, we propose a kernel-based security testing tool, named ARMORY, for software engineers to detect PBODs automatically when they apply all kinds of testing, especially functional testing and unit testing, without increasing the testing workload. Besides, ARMORY does not need any attack instance, any training phase, or source code to finish its security testing. ARMORY can detect unknown PBODs. ARMORY not only can improve software quality, but also can reduce the amount of system resources used to protect a system. We implemented ARMORY in Linux kernel by modifying sys_read() system call and entry. S which deals all system call. Experimental results show that ARMORY can automatically detect PBODs when programmers test the functionality of their programs.
DA  - 2013/10//
PY  - 2013
DO  - 10.1016/j.compeleceng.2012.07.005
VL  - 39
IS  - 7
SP  - 2233
EP  - 2242
SN  - 0045-7906
UR  - https://doi.org/10.1016/j.compeleceng.2012.07.005
ER  - 

TY  - JOUR
TI  - Automotive Software Engineering
AU  - Haghighatkhah, Alireza
AU  - Banijamali, Ahmad
AU  - Pakanen, Olli-Pekka
AU  - Oivo, Markku
AU  - Kuvaja, Pasi
T2  - J. Syst. Softw.
AB  - A comprehensive survey of literature on Automotive Software Engineering (ASE).679 primary studies were identified, classified and analyzed with respect to five dimensions.Three most investigated areas include software architecture &amp; design, testing and reuse.ASE seems to have high industrial relevance but is relatively lower in its scientific rigor.Validation &amp; comparative studies are less represented and literature lacks practitioner-oriented guidelines. The automotive industry is going through a fundamental change by moving from a mechanical to a software-intensive industry in which most innovation and competition rely on software engineering competence. Over the last few decades, the importance of software engineering in the automotive industry has increased significantly and has attracted much attention from both scholars and practitioners. A large body-of-knowledge on automotive software engineering has accumulated in several scientific publications, yet there is no systematic analysis of that knowledge. This systematic mapping study aims to classify and analyze the literature related to automotive software engineering in order to provide a structured body-of-knowledge, identify well-established topics and potential research gaps. The review includes 679 articles from multiple research sub-area, published between 1990 and 2015. The primary studies were analyzed and classified with respect to five different dimensions. Furthermore, potential research gaps and recommendations for future research are presented. Three areas, namely system/software architecture and design, qualification testing, and reuse were the most frequently addressed topics in the literature. There were fewer comparative and validation studies, and the literature lacks practitioner-oriented guidelines. Overall, research activity on automotive software engineering seems to have high industrial relevance but is relatively lower in its scientific rigor.
DA  - 2017/06//
PY  - 2017
DO  - 10.1016/j.jss.2017.03.005
VL  - 128
IS  - C
SP  - 25
EP  - 55
SN  - 0164-1212
UR  - https://doi.org/10.1016/j.jss.2017.03.005
KW  - Embedded systems
KW  - Automotive software engineering
KW  - Automotive systems
KW  - Literature survey
KW  - Software-intensive systems
KW  - Systematic mapping study
ER  - 

TY  - JOUR
TI  - Usability Driven DSL Development with USE-ME
AU  - Barii, Ankica
AU  - Amaral, Vasco
AU  - Goulo, Miguel
T2  - Comput. Lang. Syst. Struct.
AB  - A conceptual framework, called USE-ME, which supports usability evaluations during the DSL development is proposed.The paper presents the models of the information that must be traced during the different steps of the DSL engineering process.A prototype of the framework is presented.The framework is illustrated by an industrial case study. The adoption of Domain-Specific Languages (DSLs) is regarded as an approach to reduce the accidental complexity of software systems development. The availability of sophisticated language workbenches facilitates the development of DSLs making them increasingly more popular. The adoption of DSLs at large comes at the risk that a poorly designed DSL can be too hard to adopt by its domain users. As such, Usability is one of the essential characteristics to mitigate this risk as it has an important impact on the productivity achieved by DSL users.The current state of practice in Software Language Engineering (SLE) neglects the Usability of DSLs. A pertinent research question in SLE is how to engineer Usability into DSLs systematically. We argue that a timely systematic approach based on User Interface experimental evaluation techniques should be used to assess the impact of DSLs during their development process, while the cost of fixing the usability problems is relatively small, when compared to fixing them at the end of the development process.For that purpose, we introduce a conceptual framework, called USE-ME, which supports the iterative incremental development process of DSLs concerning the issue of their Usability evaluation. We illustrate the feasibility of the approach on a case study of the development of a DSL meant for children to program robots.
DA  - 2018/01//
PY  - 2018
DO  - 10.1016/j.cl.2017.06.005
VL  - 51
IS  - C
SP  - 118
EP  - 157
SN  - 1477-8424
UR  - https://doi.org/10.1016/j.cl.2017.06.005
KW  - Domain-specific languages
KW  - Experimental software engineering
KW  - Quality in use
KW  - Quality of DSLs
KW  - Software language engineering
KW  - Usability engineering
ER  - 

TY  - CONF
TI  - Model-Driven System-Performance Engineering for Cyber-Physical Systems
AU  - van der Sanden, Bram
AU  - Li, Yonghui
AU  - van den Aker, Joris
AU  - Akesson, Benny
AU  - Bijlsma, Tjerk
AU  - Hendriks, Martijn
AU  - Triantafyllidis, Kostas
AU  - Verriet, Jacques
AU  - Voeten, Jeroen
AU  - Basten, Twan
T3  - EMSOFT '21
AB  - System-Performance Engineering (SysPE) encompasses modeling formalisms, methods, techniques, and industrial practices to design systems for performance, where performance is taken integrally into account during the whole system life cycle. Industrial SysPE state of practice is generally model-based. Due to the rapidly increasing complexity of systems, there is a need to develop and establish model-driven methods and techniques. To structure the field of SysPE, we identify (1) industrial challenges motivating the importance of SysPE, (2) scientific challenges that need to be addressed to establish model-driven SysPE, (3) important focus areas for SysPE and (4) best practices. We conducted a survey to collect feedback on our views. The responses were used to update and validate the identified challenges, focus areas, and best practices. The final result is presented in this paper. Interesting observations are that industry sees a need for better design-space exploration support, more than for additional performance modeling and analysis techniques. Also tools and integral methods for SysPE need attention. From the identified focus areas, scheduling and supervisory control is seen as lacking established best practices.
C1  - New York, NY, USA
C3  - Proceedings of the 2021 International Conference on Embedded Software
DA  - 2021///
PY  - 2021
DO  - 10.1145/3477244.3477985
SP  - 11
EP  - 22
PB  - Association for Computing Machinery
SN  - 978-1-4503-8712-5
UR  - https://doi.org/10.1145/3477244.3477985
KW  - CPS
KW  - model-driven design
KW  - system-performance engineering
ER  - 

TY  - CONF
TI  - Design Patterns to the Rescue: Guided Model-Based Reuse for Automotive Solutions
AU  - Khalil, Maged
T3  - PLoP '18
AB  - The reuse of proven solutions (e.g., Safety Mechanisms or architecture designs) for safety-critical applications is considered a good practice for increasing confidence in the system and cutting development cost and time, and is widely-spread in practice. However, reuse in safety-critical applications is mostly ad-hoc, with lack of process maturity or adequate tool support. Moreover, it is difficult to assess the quality or completeness of a reuse process, if there is no "definition of done". In previously published works, we defined a structured "Pattern Library" approach for the reuse of Safety Mechanisms (fault avoidance / error detection and handling) in the automotive domain, elaborating a prototypical tool implementation for both Pattern Developer and User role. This paper consolidates the previously provided definitions and provides evidence of the effectiveness of the approach via the evaluation of instantiations into a generic research CASE tool (AutoFOCUS3), as well as a domain-adequate automotive safety modeling framework (SAFE Framework). We demonstrate the improvements in the maturity, adequacy and completeness of the reuse, as well as how the approach can be used to guide tool selection, development and/or extension. Finally, we showcase how the approach can generally be applied to other system design reuse problems, via an instantiation into a large scale automotive functional &amp; technical component library at a leading automotive supplier. Given the rise in automotive application complexity and ever shorter development cycles, solution reuse is of paramount importance.
C1  - USA
C3  - Proceedings of the 25th Conference on Pattern Languages of Programs
DA  - 2018///
PY  - 2018
PB  - The Hillside Group
KW  - reuse
KW  - safety
KW  - safety argumentation
ER  - 

TY  - JOUR
TI  - New Perspectives for the Future Interoperable Enterprise Systems
AU  - Panetto, HervÃ©
AU  - Zdravkovic, Milan
AU  - Jardim-Goncalves, Ricardo
AU  - Romero, David
AU  - Cecil, J.
AU  - MezgÃ¡r, IstvÃ¡n
T2  - Comput. Ind.
AB  - The paper describes the information system and interoperability related challenges, trends and issues that must be addressed to support a new generation of scientific-based and technological solutions for facilitating the collaboration of existing enterprise systems.This paper presents general research priorities and directions of related to context-aware systems, semantic interoperability, cyber-physical systems, cloud-based systems and interoperability assessment.The listed properties are used to propose the generic abstract architecture of the Next Generation Enterprise Information Systems. The rapid changes in today's socio-economic and technological environment in which the enterprises operate necessitate the identification of new requirements that address both theoretical and practical aspects of the Enterprise Information Systems (EIS). Such an evolving environment contributes to both the process and the system complexity which cannot be handled by the traditional architectures. The constant pressure of requirements for more data, more collaboration and more flexibility motivates us to discuss about the concept of Next Generation EIS (NG EIS) which is federated, omnipresent, model-driven, open, reconfigurable and aware. All these properties imply that the future enterprise system is inherently interoperable. This position paper presents the discussion that spans several research challenges of future interoperable enterprise systems, specialized from the existing general research priorities and directions of IFAC Technical Committee 5.3,11IFAC Technical Committee 5.3 Enterprise Integration and Networking , http://www.ifac-tc53.org namely: context-aware systems, semantic interoperability, cyber-physical systems, cloud-based systems and interoperability assessment.
DA  - 2016/06//
PY  - 2016
DO  - 10.1016/j.compind.2015.08.001
VL  - 79
IS  - C
SP  - 47
EP  - 63
SN  - 0166-3615
UR  - https://doi.org/10.1016/j.compind.2015.08.001
KW  - Cloud-based systems
KW  - Context-aware systems
KW  - Enterprise information systems
KW  - Enterprise integration
KW  - Enterprises as cyber-physical systems
KW  - Interoperability assessment
KW  - Networked collaborative enterprise
KW  - Semantic interoperability
ER  - 

TY  - JOUR
TI  - A Unified System Identification Approach for a Class of Pneumatically-Driven Soft Actuators
AU  - Wang, Xiaochen
AU  - Geng, Tao
AU  - Elsayed, Yahya
AU  - Saaj, Chakravarthini
AU  - Lekakou, Constantina
T2  - Robot. Auton. Syst.
AB  - The class of Pneumatically-driven Low-pressure Soft Actuators (PLSA) is a popular choice potentially used in the surgical robotic applications. One fundamental problem lying in the PLSA research is the lack of a generally validated model for the complex nonlinear dynamic behaviours. In this paper, a unified identification approach for the general PLSAs is proposed. It is a parameter-independent way directly used to identify the dynamical relation between the actuating pressures and the principal degrees of freedom of a PLSA, the bending and the steering. The approach is based on a modified auxiliary kinematic setting and a newly developed identification model structure, named DIO-PWL-OBF. Following the concluded identification procedure, the implementations for the single chamber bending and the double chamber bending and steering are demonstrated separately. The results show that the proposed approach can accurately capture the nonlinear pressure-shape dynamical relation. The approach is also efficient in real-time applications. It can be further used to improve the current control design for the PLSAs in robotic applications. A unified system identification approach is proposed.The approach is used to identify the nonlinear pressure-shape dynamic relation.The used auxiliary kinematic setting can be implemented by gyroscopic sensors.
DA  - 2015/01//
PY  - 2015
DO  - 10.1016/j.robot.2014.08.017
VL  - 63
IS  - P1
SP  - 136
EP  - 149
SN  - 0921-8890
UR  - https://doi.org/10.1016/j.robot.2014.08.017
KW  - Continuum robot
KW  - Orthonormal basis function
KW  - Soft actuator
KW  - System identification
ER  - 

TY  - CONF
TI  - A General Model Description for Discrete Processes
AU  - SchÃ¶nherr, Oliver
AU  - Rose, Oliver
T3  - WSC '11
AB  - In this paper, we present an approach for developing a simulation-tool-independent description for discrete processes and for converting such a general model into simulation-tool-specific models. Our aim is to develop models by means of SysML and to build converters from SysML models to models of a large variety of simulation tools. We developed Translator-Plugins for Anylogic, Simcron, Factory Explorer and Flexsim. Based on this architecture, we develop a general model description for discrete processes which permits to create comprehensive scenarios. Modeling can be divided into a structural, a behavioral and a control part. Our main domain is production systems but we show which elements are not domain specific and can be generalized to an approach for a standard to model discrete production planning and control problems. We also test domains like hospitals, logistics and civil engineering.
C3  - Proceedings of the Winter Simulation Conference
DA  - 2011///
PY  - 2011
SP  - 2206
EP  - 2218
PB  - Winter Simulation Conference
ER  - 

TY  - CONF
TI  - The Distributed Co-Simulation Protocol for the Integration of Real-Time Systems and Simulation Environments
AU  - Krammer, Martin
AU  - Benedikt, Martin
AU  - Blochwitz, Torsten
AU  - Alekeish, Khaled
AU  - Amringer, Nicolas
AU  - Kater, Christian
AU  - Materne, Stefan
AU  - Ruvalcaba, Roberto
AU  - Schuch, Klaus
AU  - Zehetner, Josef
AU  - Damm-Norwig, Micha
AU  - Schreiber, Viktor
AU  - Nagarajan, Natarajan
AU  - Corral, Isidro
AU  - Sparber, Tommy
AU  - Klein, Serge
AU  - Andert, Jakob
T3  - SummerSim '18
AB  - Virtual system development gets more and more important in many industrial domains. It is considered to reduce development times, lower computing costs, and shorten time-to-market. Co-simulation is a particularly promising approach for modular and interoperable development. In practice the integration and coupling of heterogeneous systems still require enormous efforts. The configuration and operation of distributed hardware-in-the-loop systems and simulations contribute to efficiency of testing. Currently no standardized interface or protocol specification is available, which allows the interaction of real-time and non-real-time systems of different vendors. This paper for the first time presents the Distributed Co-simulation Protocol (DCP) which is subject to proposal as a standard for real-time and non-real-time system integration and simulation. The DCP consists of a data model, a finite state machine, and a communication protocol including a set of protocol data units. It is designed as a tool independent standard. It was developed in context of the ACOSAR project and is subject to standardization as a Modelica Association Project (MAP). It enables the definition, configuration and execution of a wide range of different simulations and test scenarios. It supports a master-slave architecture for simulation setup and control. The specification defines the design of a slave only, the design of a master is not in scope of the specification. To highlight the industrial applicability of the DCP, three examples from the automotive domain are shown.
C1  - San Diego, CA, USA
C3  - Proceedings of the 50th Computer Simulation Conference
DA  - 2018///
PY  - 2018
PB  - Society for Computer Simulation International
KW  - co-simulation
KW  - DCP
KW  - integration
KW  - real-time
KW  - standard
ER  - 

TY  - JOUR
TI  - A SysML-Based Methodology for Mechatronic Systems Architectural Design
AU  - Mhenni, FaÃ¯da
AU  - Choley, Jean-Yves
AU  - Penas, Olivia
AU  - Plateaux, RÃ©gis
AU  - Hammadi, Moncef
T2  - Adv. Eng. Inform.
AB  - Mechatronic systems are characterized by the synergic interaction between their components from different technological domains. These interactions enable the system to achieve more functionalities than the sum of the functionalities of its components considered independently. Traditional design approaches are no longer adequate and there is a need for new synergic and multidisciplinary design approaches with close cooperation between specialists from different disciplines. SysML is a general purpose multi-view language for systems modeling and is identified as a support to this work. In this paper, a SysML-based methodology is proposed. This methodology consists of two phases: a black box analysis with an external point of view that provides a comprehensive and consistent set requirements, and a white box analysis that progressively leads to the internal architecture and behavior of the system.
DA  - 2014/08//
PY  - 2014
DO  - 10.1016/j.aei.2014.03.006
VL  - 28
IS  - 3
SP  - 218
EP  - 231
SN  - 1474-0346
UR  - https://doi.org/10.1016/j.aei.2014.03.006
KW  - SysML
KW  - Mechatronic system
KW  - Design methodology
ER  - 

TY  - JOUR
TI  - Exploiting Augmented Intelligence in the Modeling of Safety-Critical Autonomous Systems
AU  - Yang, Zhibin
AU  - Bao, Yang
AU  - Yang, Yongqiang
AU  - Huang, Zhiqiu
AU  - Bodeveix, Jean-Paul
AU  - Filali, Mamoun
AU  - Gu, Zonghua
T2  - Form. Asp. Comput.
AB  - Machine learning (ML) is used increasingly in safety-critical systems to provide more complex autonomy to make the system to do decisions by itself in uncertain environments. Using ML to learn system features is fundamentally different from manually implementing them in conventional components written in source code. In this paper, we make a first step towards exploring the architecture modeling of safety-critical autonomous systems which are composed of conventional components and ML components, based on natural language requirements. Firstly, augmented intelligence for restricted natural language requirement modeling is proposed. In that, several AI technologies such as natural language processing and clustering are used to recommend candidate terms to the glossary, as well as machine learning is used to predict the category of requirements. The glossary including data dictionary and domain glossary and the category of requirements will be used in the restricted natural language requirement specification method RNLReq, which is equipped with a set of restriction rules and templates to structure and restrict the way how users document requirements. Secondly, automatic generation of SysML architecture models from the RNLReq requirement specifications is presented. Thirdly, the prototype tool is implemented based on Papyrus. Finally, it presents the evaluation of the proposed approach using an industrial autonomous guidance, navigation and control case study.
DA  - 2021/06//
PY  - 2021
DO  - 10.1007/s00165-021-00543-6
VL  - 33
IS  - 3
SP  - 343
EP  - 384
SN  - 0934-5043
UR  - https://doi.org/10.1007/s00165-021-00543-6
KW  - SysML
KW  - Machine learning
KW  - Augmented intelligence
KW  - Natural language processing
KW  - Restricted natural language requirements
KW  - Safety-critical autonomous system
ER  - 

TY  - JOUR
TI  - Challenges of Information Reuse in Customer-Oriented Engineering Networks
AU  - Silventoinen, Anneli
AU  - Denger, Andrea
AU  - Lampela, Hannele
AU  - Papinniemi, Jorma
T2  - Int. J. Inf. Manag.
AB  - An exploratory research approach to reviewing existing literature.The challenges of information reuse identified from multiple complementary viewpoints.Proposal of a typology of information reuse challenges.The majority of challenges addressed knowledge processes and reuse situations.Implications for organizational development needs in engineer-to-order companies and networks. Project-based engineering companies are striving for innovation acceleration, and lean supply and product processes throughout the product lifecycle. The business orientation of engineer-to-order companies is customer-centric due to the nature of engineer-to-order products, which are tailored and customized according to the specific requirements of each customer. However, this customer orientation may lead to inefficient performance, due to a lack of mechanisms to reuse proven concepts, designs and production facilities, as well as an absence of feedback mechanisms from products in use and service. These challenges have been recognized in earlier empirical research projects conducted in companies providing engineer-to-order products. Based on an exploratory study of the existing literature, this paper aims to identify factors hindering product-related information reuse in an engineering business environment that comprises several networks of actors during the lifecycle of engineer-to-order products. The main challenges of information reuse in an engineer-to-order context are related to reuse situations, which require combining existing information with experience-based knowledge. A typology of factors and challenges of information reuse is built, and organizational development needs at different organizational levels as well as further research needs are identified.
DA  - 2014/12//
PY  - 2014
DO  - 10.1016/j.ijinfomgt.2014.07.001
VL  - 34
IS  - 6
SP  - 720
EP  - 732
SN  - 0268-4012
UR  - https://doi.org/10.1016/j.ijinfomgt.2014.07.001
KW  - Product lifecycle management
KW  - Challenge
KW  - Engineer-to-order product
KW  - Information reuse
KW  - Project-based engineering
ER  - 

TY  - JOUR
TI  - CoreASM: An Extensible ASM Execution Engine
AU  - Farahbod, Roozbeh
AU  - Gervasi, Vincenzo
AU  - GlÃ¤sser, Uwe
T2  - Fundam. Inf.
AB  - In this paper we introduce a new research effort in making abstract state machines (ASMs) executable. The aim is to specify and implement an execution engine for a language that is as close as possible to the mathematical definition of pure ASMs. The paper presents the general architecture of the engine, together with a high-level description of the extensibility mechanisms that are used by the engine to accommodate arbitrary backgrounds, scheduling policies, and new rule forms.
DA  - 2007/01//
PY  - 2007
VL  - 77
IS  - 1â2
SP  - 71
EP  - 103
SN  - 0169-2968
KW  - Abstract state machines
KW  - CoreASM
KW  - Executable specification
KW  - Specification languages
ER  - 

TY  - JOUR
TI  - CoreASM: An Extensible ASM Execution Engine
AU  - Farahbod, Roozbeh
AU  - Gervasi, Vincenzo
AU  - GlÃ¤sser, Uwe
T2  - Fundam. Inf.
AB  - In this paper we introduce a new research effort in making abstract state machines (ASMs) executable. The aim is to specify and implement an execution engine for a language that is as close as possible to the mathematical definition of pure ASMs. The paper presents the general architecture of the engine, together with a high-level description of the extensibility mechanisms that are used by the engine to accommodate arbitrary backgrounds, scheduling policies, and new rule forms.
DA  - 2007/01//
PY  - 2007
VL  - 77
IS  - 1â2
SP  - 71
EP  - 103
SN  - 0169-2968
KW  - Abstract state machines
KW  - CoreASM
KW  - Executable specification
KW  - Specification languages
ER  - 

TY  - JOUR
TI  - AADL+: A Simulation-Based Methodology for Cyber-Physical Systems
AU  - Liu, Jing
AU  - Li, Tengfei
AU  - Ding, Zuohua
AU  - Qian, Yuqing
AU  - Sun, Haiying
AU  - He, Jifeng
T2  - Front. Comput. Sci.
AB  - AADL (architecture analysis and design language) concentrates on the modeling and analysis of application system architectures. It is quite popular for its simple syntax, powerful functionality and extensibility and has been widely applied in embedded systems for its advantage. However, it is not enough for AADL to model cyber-physical systems (CPS) mainly because it cannot be used to model the continuous dynamic behaviors. This paper proposes an approach to construct a new sublanguage of AADL called AADL+, to facilitate the modeling of not only the discrete and continuous behavior of CPS, but also interaction between cyber components and physical components. The syntax and semantics of the sublanguage are provided to describe the behaviors of the systems. What's more, we develop a plug-in to OSATE (open-source AADL tool environment) for the modeling of CPS. And the plug-in supports syntax checking and simulation of the system model through linking with modelica. Finally, the AADL+ annex is successfully applied to model a lunar rover control system.
DA  - 2019/06//
PY  - 2019
DO  - 10.1007/s11704-018-7039-7
VL  - 13
IS  - 3
SP  - 516
EP  - 538
SN  - 2095-2228
UR  - https://doi.org/10.1007/s11704-018-7039-7
KW  - simulation
KW  - cyber-physical systems (CPS)
KW  - AADL
KW  - lunar rover control system
KW  - OSATE
ER  - 

TY  - JOUR
TI  - A Computational Framework for Authoring and Searching Product Design Specifications
AU  - Weissman, Alexander
AU  - Petrov, Martin
AU  - Gupta, Satyandra K.
T2  - Adv. Eng. Inform.
AB  - The development of product design specifications (PDS) is an important part of the product development process. Incompleteness, ambiguity, or inconsistency in the PDS can lead to problems during the design process and may require unnecessary design iterations. This generally results in increased design time and cost. Currently, in many organizations, PDS are written using word processors. Since documents written by different authors can be inconsistent in style and word choice, it is difficult to automatically search for specific requirements. Moreover, this approach does not allow the possibility of automated design verification and validation against the design requirements and specifications. In this paper, we present a computational framework and a software tool based on this framework for writing, annotating, and searching computer-interpretable PDS. Our approach allows authors to write requirement statements in natural language to be consistent with the existing authoring practice. However, using mathematical expressions, keywords from predefined taxonomies, and other metadata the author of PDS can then annotate different parts of the requirement statements. This approach provides unambiguous meaning to the information contained in PDS, and helps to eliminate mistakes later in the process when designers must interpret requirements. Our approach also enables users to construct a new PDS document from the results of the search for requirements of similar devices and in similar contexts. This capability speeds up the process of creating PDS and helps authors write more detailed documents by utilizing previous, well written PDS documents. Our approach also enables checking for internal inconsistencies in the requirement statements.
DA  - 2011/08//
PY  - 2011
VL  - 25
IS  - 3
SP  - 516
EP  - 534
SN  - 1474-0346
KW  - Engineering design
KW  - Product design specifications
KW  - Requirements engineering
ER  - 

TY  - CONF
TI  - On the Pragmatics of Model-Based Design
AU  - Fuhrmann, Hauke
AU  - von Hanxleden, Reinhard
T3  - Monterey'08
AB  - The pragmatics of model-based design refers to the practical aspects of handling graphical system models. This encompasses a range of activities, such as editing, browsing or simulating models. We believe that the pragmatics of modeling deserves more attention than is has received so far. We also believe that there is the potential for significant productivity enhancements, using technology that is largely already available. A key enabler here is the capability to automatically and quickly compute the layout of a graphical model, which frees the designer from the burden of manual drawing. This capability also allows to compute customized view of a model on the fly, which offers new possibilities for interactive browsing and for simulation.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 15th Monterey Conference on Foundations of Computer Software: Future Trends and Techniques for Development
DA  - 2008///
PY  - 2008
DO  - 10.1007/978-3-642-12566-9_7
SP  - 116
EP  - 140
PB  - Springer-Verlag
SN  - 3-642-12565-4
UR  - https://doi.org/10.1007/978-3-642-12566-9_7
ER  - 

TY  - CONF
TI  - Bloqqi: Modular Feature-Based Block Diagram Programming
AU  - Fors, Niklas
AU  - Hedin, GÃ¶rel
T3  - Onward! 2016
AB  - Automation programming is typically done using blocks and dataflow connections, in diagram languages that support user-defined block types. Often, these types are intended to be instantiated and connected to other blocks in common patterns, corresponding to anticipated variability. We present the new language mechanisms of wirings and recommendations that allow these intentions to be encoded as features in libraries. A wiring describes how a given block is typically connected to other blocks, and a recommendation describes where such a wiring is typically applied as a feature. This allows feature-based wizards to be generated for user-defined libraries, making it easy to construct applications that make use of the encoded patterns.
C1  - New York, NY, USA
C3  - Proceedings of the 2016 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software
DA  - 2016///
PY  - 2016
DO  - 10.1145/2986012.2986026
SP  - 57
EP  - 73
PB  - Association for Computing Machinery
SN  - 978-1-4503-4076-2
UR  - https://doi.org/10.1145/2986012.2986026
KW  - control systems
KW  - dataflow
KW  - inheritance
KW  - intercept
KW  - process automation
KW  - recommendations
KW  - redeclare
KW  - variability
KW  - visual
KW  - wiring
ER  - 

TY  - JOUR
TI  - Maximizing the U.S. Army's Future Contribution to Global Security Using the Capability Portfolio Analysis Tool CPAT
AU  - Davis, Scott J.
AU  - Edwards, Shatiel B.
AU  - Teper, Gerald E.
AU  - Bassett, David G.
AU  - McCarthy, Michael J.
AU  - Johnson, Scott C.
AU  - Lawton, Craig R.
AU  - Hoffman, Matthew J.
AU  - Shelton, Liliana
AU  - Henry, Stephen M.
AU  - Melander, Darryl J.
AU  - Muldoon, Frank M.
AU  - Alford, Brian D.
AU  - Rice, Roy E.
T2  - Interfaces
AB  - Recent budget reductions have posed tremendous challenges to the U.S. Army in managing its portfolio of ground combat systems tanks and other fighting vehicles, thus placing many important programs at risk. To address these challenges, the Army and a supporting team developed and applied the Capability Portfolio Analysis Tool CPAT to optimally invest in ground combat modernization over the next 25-35 years. CPAT provides the Army with the analytical rigor needed to help senior Army decision makers allocate scarce modernization dollars to protect soldiers and maintain capability overmatch. CPAT delivers unparalleled insight into multiple-decade modernization planning using a novel multiphase mixed-integer linear programming technique and illustrates a cultural shift toward analytics in the Army's acquisition thinking and processes. CPAT analysis helped shape decisions to continue modernization of the $10 billion Stryker family of vehicles originally slated for cancellation and to strategically reallocate over $20 billion to existing modernization programs by not pursuing the Ground Combat Vehicle program as originally envisioned. More than 40 studies have been completed using CPAT, applying operations research methods to optimally prioritize billions of taxpayer dollars and allowing Army acquisition executives to base investment decisions on analytically rigorous evaluations of portfolio trade-offs.
DA  - 2016/02//
PY  - 2016
DO  - 10.1287/inte.2015.0824
VL  - 46
IS  - 1
SP  - 91
EP  - 108
SN  - 0092-2102
UR  - https://doi.org/10.1287/inte.2015.0824
KW  - decision support
KW  - fleet scheduling
KW  - ground combat systems
KW  - mixed-integer linear programming
KW  - portfolio optimization
KW  - U.S. Army
ER  - 

TY  - JOUR
TI  - Blockchain-Based Digital Twins: Research Trends, Issues, and Future Challenges
AU  - Suhail, Sabah
AU  - Hussain, Rasheed
AU  - Jurdak, Raja
AU  - Oracevic, Alma
AU  - Salah, Khaled
AU  - Hong, Choong Seon
AU  - MatuleviÄius, Raimundas
T2  - ACM Comput. Surv.
AB  - Industrial processes rely on sensory data for decision-making processes, risk assessment, and performance evaluation. Extracting actionable insights from the collected data calls for an infrastructure that can ensure the dissemination of trustworthy data. For the physical data to be trustworthy, it needs to be cross-validated through multiple sensor sources with overlapping fields of view. Cross-validated data can then be stored on the blockchain, to maintain its integrity and trustworthiness. Once trustworthy data is recorded on the blockchain, product lifecycle events can be fed into data-driven systems for process monitoring, diagnostics, and optimized control. In this regard, Digital Twins (DTs) can be leveraged to draw intelligent conclusions from data by identifying the faults and recommending precautionary measures ahead of critical events. Empowering DTs with blockchain in industrial use-cases targets key challenges of disparate data repositories, untrustworthy data dissemination, and the need for predictive maintenance. In this survey, while highlighting the key benefits of using blockchain-based DTs, we present a comprehensive review of the state-of-the-art research results for blockchain-based DTs. Based on the current research trends, we discuss a trustworthy blockchain-based DTs framework. We also highlight the role of Artificial Intelligence (AI) in blockchain-based DTs. Furthermore, we discuss the current and future research and deployment challenges of blockchain-supported DTs that require further investigation.
DA  - 2022/02//
PY  - 2022
DO  - 10.1145/3517189
SN  - 0360-0300
UR  - https://doi.org/10.1145/3517189
KW  - Industry 4.0
KW  - Artificial Intelligence (AI)
KW  - Blockchain
KW  - Cyber-Physical Systems (CPSs)
KW  - Digital Twins (DTs)
KW  - Industrial Control Systems (ICSs)
KW  - Internet of Things (IoT)
ER  - 

TY  - CHAP
TI  - Modeling Adaptive Learning Agents for Domain Knowledge Transfer
AU  - HÃ¶ser, Moritz
T2  - Proceedings of the 22nd International Conference on Model Driven Engineering Languages and Systems
AB  - The implementation of intelligent agents in industrial applications is often prevented by the high cost of adopting such a system to a particular problem domain. This paper states the thesis that when learning agents are applied to work environments that require domain-specific experience, the agent benefits if it can be further adapted by a supervising domain expert. Closely interacting with the agent, a domain expert should be able to understand its decisions and update the underlying knowledge base as needed.The result would be an agent with individualized knowledge that comes in part from the domain experts. The model of such an adaptive learning agent must take into account the problem domain, the design of the learning agent and the perception of the domain user. Therefore, already in the modeling phase, more attention must be paid to make the learning element of the agent adaptable by an operator. Domain modeling and meta-modeling methods could help to make inner processes of the agent more accessible. In addition, the knowledge gained should be made reusable for future agents in similar environments.To begin with, the existing methods for modeling agent systems and the underlying concepts will be evaluated, based on the requirements for different industrial scenarios. The methods are then compiled into a framework that allows for the description and modeling of such systems in terms of adaptability to a problem domain. Where necessary, new methods or tools will be introduced to close the gap between inconsistent modeling artifacts.The framework shall then be used to build learning agents for real-life scenarios and observe their application in a case study. The results will be used to assess the quality of the adapted knowledge base and compare it to a manual knowledge modeling process.
DA  - 2019///
PY  - 2019
SP  - 660
EP  - 665
PB  - IEEE Press
SN  - 978-1-72815-125-0
UR  - https://doi.org/10.1109/MODELS-C.2019.00101
ER  - 

TY  - JOUR
TI  - Service-Dominant Logic and Performance-Based Contracting: A Systems Thinking Perspective
AU  - Nowicki, David
AU  - Sauser, Brian
AU  - Randall, Wesley
AU  - Lusch, Robert
T2  - Serv. Sci.
AB  - This paper extends recent theoretical advances by merging service-dominant logic S-D logic and performance-based contracting PBC. S-D logic is a conceptual frame of reference that defines supply chain knowledge and skill as its fundamental building blocks of strategic benefit. Cocreation of value between actors and beneficiaries is central to S-D logic and is measured through performance outcomes. PBC is a transformational departure from traditional supply chain strategies that focuses on delivering performance instead of goods and services. PBC has found increasing use in large-scale complex systems where the postproduction costs exceed the production cost, such as defense, transportation, and healthcare. These systems are commonly called sustainment-dominated systems SDSs. We use systems theory and the Boardman Soft Systems Methodology to develop a systemigram that corresponds to the 11 foundational premises of S-D logic in the context of PBC. We also verify the use of the systemigram as an instrument to instantiate systems thinking and move S-D logic from an abstract framework to a more actionable framework. This paper provides managers and researchers a systematic insight into how investment into knowledge, skills, and the cocreation of value can drive improved SDS life-cycle affordability in the context of PBC.
DA  - 2018/03//
PY  - 2018
VL  - 10
IS  - 1
SP  - 12
EP  - 24
SN  - 2164-3962
KW  - language and modeling
KW  - logic
KW  - service systems and dynamics
KW  - theory and principles
ER  - 

TY  - JOUR
TI  - Automated Transformation of Design Text ROM Diagram into SysML Models
AU  - Wan, Wei
AU  - Cheong, Hyunmin
AU  - Li, Wei
AU  - Zeng, Yong
AU  - Iorio, Francesco
T2  - Adv. Eng. Inform.
AB  - This paper proposes an approach to generating System Modeling Language (SysML) diagrams from a Recursive Object Model (ROM) diagram. The ROM diagram represents entities (or concepts) and three kinds of relations between these entities found in a description text. The generated SysML models include block definition diagram, use case diagram, and activity diagram. Since the SysML is becoming a standard modeling language for specifying, analyzing, designing and verifying complex design in many industry sectors, this transformation process supports knowledge representations of design documents for next generation CAD systems. The proposed approach first analyzes the features of ROM and SysML diagrams and then defines transition rules that transform a ROM diagram into SysML models. A software prototype ROM2SysML is developed based on the proposed approach and two examples are used to demonstrate how the prototype works.
DA  - 2016/08//
PY  - 2016
DO  - 10.1016/j.aei.2016.07.003
VL  - 30
IS  - 3
SP  - 585
EP  - 603
SN  - 1474-0346
UR  - https://doi.org/10.1016/j.aei.2016.07.003
KW  - SysML
KW  - Design text
KW  - Knowledge extraction
KW  - Model transformation
KW  - Recursive Object Model (ROM)
ER  - 

TY  - JOUR
TI  - Simulation Testing of Maritime Cyber-Physical Systems: Application of Model-View-ViewModel
AU  - Lee, Dong-Chul
AU  - Seo, Kyung-Min
AU  - Park, Hee-Mun
AU  - Kim, Byeong Soo
AU  - Xiao, Bo
T2  - Complex.
AB  - From the perspective of the system of systems development, system-level functional testing is required for designing subsystems. This study utilizes modeling and simulation techniques to analyze the operational behaviors of the subsystems and confirm data communication between them. The targeted system in the study is a naval combat system (NCS), which is a typical type of defense cyber-physical system (CPS). Three types of models were designed for the simulation testing of the NCS: a combat-management model for simulating the overall computational activities, physical models to confirm the intrasubsystem behaviors, and data integration models to test the intersubsystem communications. These models are realized with the Model-View-ViewModel design pattern, which strongly facilitates graphical user interfaces being decoupled from model logic and data. We consider underwater combat scenarios as an application. Six significant physical subsystems within the NCS are simulated and tested: a ship-steering system, an inertial navigation system, a global navigation satellite system, a periscope, sonar systems, and a plotting board. We expect that the proposed work will play a principal role when analyzing the behaviors and communications of defense CPSs and providing an environment for functional testing as a digital twin.
DA  - 2022/01//
PY  - 2022
DO  - 10.1155/2022/1742772
VL  - 2022
SN  - 1076-2787
UR  - https://doi.org/10.1155/2022/1742772
ER  - 

TY  - JOUR
TI  - Escaping the Software Tar Pit: Model Clashes and How to Avoid Them
AU  - Boehm, Barry
T2  - SIGSOFT Softw. Eng. Notes
AB  - "No scene from prehistory is quite so vivid as that of the mortal struggles of great beasts in the tar pitsâ¦ Large system programming has over the past decade been such a tar pit, and many great and powerful beasts have thrashed violently in itâ¦"Everyone seems to have been surprised by the stickiness of the problem, and it is hard to discern the nature of it. But we must try to understand it if we are to solve it."Fred Brooks, 1975Several recent books and reports have confirmed that the software tar pit is at least as hazardous today as it was in 1975. Our research into several classes of models used to guide software development (product models, process models, property models, success models), has convinced us that the concept of model clashes among these classes of models helps explain much of the stickiness of the software tar-pit problem.We have been developing and experimentally evolving an approach called MBASE â Model-Based (System) Architecting and Software Engineering â which helps identify and avoid software model clashes. Section 2 of this paper introduces the concept of model clashes, and provides examples of common clashes for each combination of product, process, property, and success model. Sections 3 and 4 introduce the MBASE approach for endowing a software project with a mutually supportive set of models, and illustrate the application of MBASE to an example corporate resource scheduling system. Section 5 summarizes the results of applying the MBASE approach to a family of small digital library projects. Section 6 presents conclusions to date.
DA  - 1999/01//
PY  - 1999
DO  - 10.1145/308769.308775
VL  - 24
IS  - 1
SP  - 36
EP  - 48
SN  - 0163-5948
UR  - https://doi.org/10.1145/308769.308775
ER  - 

TY  - CONF
TI  - Security Impacts of Sub-Optimal DevSecOps Implementations in a Highly Regulated Environment
AU  - Morales, Jose Andre
AU  - Scanlon, Thomas P.
AU  - Volkmann, Aaron
AU  - Yankel, Joseph
AU  - Yasar, Hasan
T3  - ARES '20
AB  - This work presents lessons learned from a multi-year support effort of a large and well-funded software development project. The focus is on the security impacts to the DevSecOps culture, process, and pipeline. These impacts stem from faulty implementations of requirements in order to achieve a full DevSecOps environment. The faulty implementations resulted in a lax security posture facilitating potential compromise in many areas of the software development environment. We discuss each of the faulty implementations in detail and provide recommendations to avoid in future engagements. The main lesson learned was the organization's inability to strictly adhere to DevSecOps principles resulted in a dysfunctional software development environment and a reduced security posture.
C1  - New York, NY, USA
C3  - Proceedings of the 15th International Conference on Availability, Reliability and Security
DA  - 2020///
PY  - 2020
DO  - 10.1145/3407023.3409186
PB  - Association for Computing Machinery
SN  - 978-1-4503-8833-7
UR  - https://doi.org/10.1145/3407023.3409186
KW  - DevSecOps
KW  - software factory
KW  - software security
KW  - system security
ER  - 

TY  - CONF
TI  - Achieving DoDAF-Driven Simulations through Executable Architectures
AU  - Robbins, Wayne
T3  - SpringSim '09
AB  - Architecture frameworks such as the Department of Defense Architecture Framework (DoDAF) are increasingly being used to design and document a range of capabilities for military organizations. As a more formal and standardized means of documentation and communication, architectures assist in the structuring and linking of the various design and implementation aspects required in addressing a capability. Through their ability to parallel operational and systems aspects, architecture frameworks offer increased traceability; however, as in the software engineering domain, the application of traditional architectures do not remedy the need to translate between the multiple levels of specification, and therefore fail to address the top-down alignment between intent and implementation. Rather, the reduction of ambiguity within the software development process was facilitated by the use of executable architectures and computer-assisted software engineering tools. Similarly, in the domain of modelling and simulation, executable architectures offer a parallel opportunity to streamline the alignment between model specification and simulation. When a capability needs to be investigated, it can be expressed using an architectural framework, which is linked via its execution directly to the application of simulation technologies. Such direct linkage reduces potential ambiguity and error in translating from requirements specification to model to implementation. Consequently, the simulation matches the capability as modelled, while enabling evaluation through facilitating direct feedback.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2009 Spring Simulation Multiconference
DA  - 2009///
PY  - 2009
PB  - Society for Computer Simulation International
KW  - DoDAF
KW  - architecture framework
KW  - executable architecture (EA)
KW  - model-based system engineering (MBSE)
KW  - model-driven architecture (MDA)
ER  - 

TY  - CONF
TI  - Resolute Assurance Arguments for Cyber Assured Systems Engineering
AU  - Amundson, Isaac
AU  - Cofer, Darren
T3  - Destion '21
AB  - Resolute is a tool and language for embedding an assurance argument in a system architecture model and evaluating the validity of the associated evidence. In this paper we report on a number of extensions to Resolute that support systems engineers in developing safe and cyber-resilient systems. System requirements are imported as assurance goals to be satisfied. Architectural transforms are applied to the system model to address these requirements, while corresponding assurance strategies and evidence are automatically added to document how the requirements have been satisfied. Subsequent changes to the model that invalidate any of the assurance claims can be detected and corrected. We also use Resolute to check that the model satisfies rules for code generation and other modeling guidelines. We conclude with an application of the Resolute assurance process to the design of a mission planning system for an unmanned air vehicle.
C1  - New York, NY, USA
C3  - Proceedings of the Workshop on Design Automation for CPS and IoT
DA  - 2021///
PY  - 2021
DO  - 10.1145/3445034.3460507
SP  - 7
EP  - 12
PB  - Association for Computing Machinery
SN  - 978-1-4503-8316-5
UR  - https://doi.org/10.1145/3445034.3460507
KW  - assurance case
KW  - cyber-security
KW  - formal methods
ER  - 

TY  - CONF
TI  - Modeling & Simulation of Software Architectures of Systems-of-Systems: An Industrial Report on the Brazilian Space System
AU  - Neto, Valdemar Vicente Graciano
AU  - Paes, Carlos Eduardo
AU  - Rohling, Adair JosÃ©
AU  - Manzano, Wallace
AU  - Nakagawa, Elisa Yumi
T3  - TMS '19
AB  - Systems-of-Systems (SoS) have demanded for novel solutions to deal with their large-scale, dynamic, and critical nature. Then, software engineering and simulation communities have been motivated to develop solutions to engineering such systems. In this direction, this paper presents an industrial experience report of a modeling and simulation (M&amp;S) of a Space SoS, which was conceived in the Brazilian National Institute for Space Research (INPE) and is composed of multiple satellites, data collection platforms, and information systems. We used MS4ME platform and enriched it with a model transformation approach (from a formal architectural descrition to DEVS models). We hope this paper can foster discussions towards unification of efforts from both communities.
C1  - San Diego, CA, USA
C3  - Proceedings of the Theory of Modeling and Simulation Symposium
DA  - 2019///
PY  - 2019
PB  - Society for Computer Simulation International
KW  - simulation
KW  - system-of-systems
KW  - model-based
KW  - model-driven
KW  - industry
ER  - 

TY  - JOUR
TI  - Systems of Systems Engineering: Basic Concepts, Model-Based Techniques, and Research Directions
AU  - Nielsen, Claus Ballegaard
AU  - Larsen, Peter Gorm
AU  - Fitzgerald, John
AU  - Woodcock, Jim
AU  - Peleska, Jan
T2  - ACM Comput. Surv.
AB  - The term âSystem of Systemsâ (SoS) has been used since the 1950s to describe systems that are composed of independent constituent systems, which act jointly towards a common goal through the synergism between them. Examples of SoS arise in areas such as power grid technology, transport, production, and military enterprises. SoS engineering is challenged by the independence, heterogeneity, evolution, and emergence properties found in SoS. This article focuses on the role of model-based techniques within the SoS engineering field. A review of existing attempts to define and classify SoS is used to identify several dimensions that characterise SoS applications. The SoS field is exemplified by a series of representative systems selected from the literature on SoS applications. Within the area of model-based techniques the survey specifically reviews the state of the art for SoS modelling, architectural description, simulation, verification, and testing. Finally, the identified dimensions of SoS characteristics are used to identify research challenges and future research areas of model-based SoS engineering.
DA  - 2015/09//
PY  - 2015
DO  - 10.1145/2794381
VL  - 48
IS  - 2
SN  - 0360-0300
UR  - https://doi.org/10.1145/2794381
KW  - systems engineering
KW  - model-based engineering
KW  - System of systems
ER  - 

TY  - JOUR
TI  - Profiling the Publish/Subscribe Paradigm for Automated Analysis Using Colored Petri Nets
AU  - GÃ³mez, Abel
AU  - RodrÃ­guez, Ricardo J.
AU  - Cambronero, MarÃ­a-Emilia
AU  - Valero, ValentÃ­n
T2  - Softw. Syst. Model.
AB  - UML sequence diagrams are used to graphically describe the message interactions between the objects participating in a certain scenario. Combined fragments extend the basic functionality of UML sequence diagrams with control structures, such as sequences, alternatives, iterations, or parallels. In this paper, we present a UML profile to annotate sequence diagrams with combined fragments to model timed Web services with distributed resources under the publish/subscribe paradigm. This profile is exploited to automatically obtain a representation of the system based on Colored Petri nets using a novel model-to-model (M2M) transformation. This M2M transformation has been specified using QVT and has been integrated in a new add-on extending a state-of-the-art UML modeling tool. Generated Petri nets can be immediately used in well-known Petri net software, such as CPN Tools, to analyze the system behavior. Hence, our model-to-model transformation tool allows for simulating the system and finding design errors in early stages of system development, which enables us to fix them at these early phases and thus potentially saving development costs.
DA  - 2019/10//
PY  - 2019
DO  - 10.1007/s10270-019-00716-1
VL  - 18
IS  - 5
SP  - 2973
EP  - 3003
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00716-1
KW  - Automated analysis
KW  - Colored Petri nets
KW  - CPN tools
KW  - Distributed resources
KW  - Publish/Subscribe
KW  - UML 2.5
KW  - WSN
KW  - WSRF
ER  - 

TY  - CONF
TI  - Model-Driven Development of Condition Monitoring Software
AU  - Pasic, Faruk
T3  - MODELS '18
AB  - High availability of automation systems is one of the main goals for the companies from all industrial branches. To achieve and maintain this high availability, the condition monitoring of the automation systems is an essential building block. However, as automation systems become increasingly equipped with numerous mechanical, electrical, and software components, creating a condition monitoring solution is becoming more and more challenging and requires knowledge from multiple engineering disciplines. Today, creating a condition monitoring solution is mostly based on the experience and preferences of the developers without a systematic and interdisciplinary method.Today, methods and tools supporting an interdisciplinary development exist. However, they do not fully consider condition monitoring relevant information. In addition, tools that increase software productivity and ease the adjustment of condition monitoring software are lacking. The main goal of this paper is to narrow the condition monitoring expertise gap by proposing convenient, systematic, and automated techniques to support the development of condition monitoring solutions from their design to their implementation.To achieve this goal, we propose an extension of the CONSENS systems engineering method to face issues caused in the design phase. By adopting a Model-Driven Development (MDD) approach, we propose a Domain-Specific Language (DSL) for condition monitoring that promotes increased understandability, and automation during the software implementation phase.
C1  - New York, NY, USA
C3  - Proceedings of the 21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
DA  - 2018///
PY  - 2018
DO  - 10.1145/3270112.3275338
SP  - 162
EP  - 167
PB  - Association for Computing Machinery
SN  - 978-1-4503-5965-8
UR  - https://doi.org/10.1145/3270112.3275338
KW  - systems engineering
KW  - automation systems
KW  - condition monitoring
KW  - model-driven software development
ER  - 

TY  - CONF
TI  - Safety-Critical Simulation Engineering
AU  - Durak, Umut
AU  - D'Ambrogio, Andrea
AU  - Bocciarelli, Paolo
T3  - SummerSim '20
AB  - Modeling and Simulation Based Systems Engineering is emerging as an integrative approach from the long lasting close interaction between modeling and simulation, and systems engineering. It is emphasizing the extensive employment of modeling and simulation through the life cycle of systems engineering. When the system of interest is safety-critical, possible missing qualities of simulation become a safety issue. That eventually makes simulation a subject of a qualification question. Tool qualification requirements have already been established for various safety-critical domains. However, the methods and guidelines for applying these requirements in the simulation engineering life cycle are still missing. This paper proposes a simulation qualification approach for safety-critical systems engineering.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2020 Summer Simulation Conference
DA  - 2020///
PY  - 2020
PB  - Society for Computer Simulation International
SN  - 978-1-71381-429-0
KW  - certification
KW  - DSEEP
KW  - safety-critical systems
KW  - simulation engineering
KW  - tool qualification
ER  - 

TY  - CONF
TI  - Models, Abstractions, and Architectures: The Missing Links in Cyber-Physical Systems
AU  - Balaji, Bharathan
AU  - Al Faruque, Mohammad Abdullah
AU  - Dutt, Nikil
AU  - Gupta, Rajesh
AU  - Agarwal, Yuvraj
T3  - DAC '15
AB  - Bridging disparate realms of physical and cyber system components requires models and methods that enable rapid evaluation of design alternatives in cyber-physical systems (CPS). The diverse intellectual traditions of physical and mathematical sciences makes this task exceptionally hard. This paper seeks to explore potential solutions by examining specific examples of CPS applications in automobiles and smart buildings. Both smart buildings and automobiles are complex systems with embedded knowledge across several domains. We present our experiences with development of CPS applications to illustrate the challenges that arise when expertise across domains is integrated into the system, and show that creation of models, abstractions, and architectures that address these challenges are key to next generation CPS applications.
C1  - New York, NY, USA
C3  - Proceedings of the 52nd Annual Design Automation Conference
DA  - 2015///
PY  - 2015
DO  - 10.1145/2744769.2747936
PB  - Association for Computing Machinery
SN  - 978-1-4503-3520-1
UR  - https://doi.org/10.1145/2744769.2747936
KW  - models
KW  - cyber-physical systems
KW  - abstractions
KW  - architectures
KW  - automobiles
KW  - smart buildings
ER  - 

TY  - JOUR
TI  - Preface
AU  - Bujorianu, Manuela
AU  - Fisher, Michael
AU  - Pasareanu, Corina
T2  - Annals of Mathematics and Artificial Intelligence
DA  - 2011/09//
PY  - 2011
DO  - 10.1007/s10472-011-9273-7
VL  - 63
IS  - 1
SP  - 1
EP  - 3
SN  - 1012-2443
UR  - https://doi.org/10.1007/s10472-011-9273-7
ER  - 

TY  - CONF
TI  - A Model Based Approach for Safety Analysis
AU  - Belmonte, Fabien
AU  - Soubiran, Elie
T3  - SAFECOMP'12
AB  - This paper deals with model based safety engineering in Railway signaling systems development. Recently, model based system engineering (MBSE) has brought new specification means for large industrial system. Alstom Transport develops its own MBSE methodology supported by the SysML notation. In this context, a domain specific modeling language (DSML) has been developed for the safety studies enabling tight coupling with the MBSE environment. The paper describes a model to model translation. The translation developed takes the functional part of the system model and the dysfunctional viewpoint modeled within the safety DSML to generate an Altarica model of the system. The generated Altarica model is formal and allows, one from another, the dysfunctional simulation of the system and the generation of sequences of events leading to accidents.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 2012 International Conference on Computer Safety, Reliability, and Security
DA  - 2012///
PY  - 2012
DO  - 10.1007/978-3-642-33675-1_5
SP  - 50
EP  - 63
PB  - Springer-Verlag
SN  - 978-3-642-33674-4
UR  - https://doi.org/10.1007/978-3-642-33675-1_5
ER  - 

TY  - CONF
TI  - Automatic Test Concretization to Supply End-to-End MBT for Automotive Mechatronic Systems
AU  - Lasalle, Jonathan
AU  - Peureux, Fabien
AU  - Guillet, JÃ©rÃ´me
T3  - ETSE '11
AB  - This paper presents an effective end-to-end Model-Based Testing approach to validate automotive mechatronic systems. This solution takes as input a UML/OCL model describing the stimuli of the environment that can excite the mechatronic System Under Test. It applies model coverage criteria to automatically generate test cases, and finally takes an offline approach to translate the generated test cases into executable test scripts that can be executed both on simulation model and physical test bench. The mechatronic System Under Test is then tested against a Matlab/Simulink simulation model, which defines the test oracle. This tooled and automated approach has been successfully experimented on a concrete case study about the validation of a vehicle front axle unit. This experimentation enabled us to validate our approach, and showed its effectiveness in the validation process of mechatronic systems.
C1  - New York, NY, USA
C3  - Proceedings of the First International Workshop on End-to-End Test Script Engineering
DA  - 2011///
PY  - 2011
DO  - 10.1145/2002931.2002934
SP  - 16
EP  - 23
PB  - Association for Computing Machinery
SN  - 978-1-4503-0808-3
UR  - https://doi.org/10.1145/2002931.2002934
KW  - model-based testing
KW  - automated testing process
KW  - Matlab/Simulink simulation
KW  - mechatronic systems
KW  - UML/OCL notations
ER  - 

TY  - JOUR
TI  - Contents for a Model-Based Software Engineering Body of Knowledge
AU  - BurgueÃ±o, Loli
AU  - Ciccozzi, Federico
AU  - Famelis, Michalis
AU  - Kappel, Gerti
AU  - Lambers, Leen
AU  - Mosser, Sebastien
AU  - Paige, Richard F.
AU  - Pierantonio, Alfonso
AU  - Rensink, Arend
AU  - Salay, Rick
AU  - Taentzer, Gabriele
AU  - Vallecillo, Antonio
AU  - Wimmer, Manuel
T2  - Softw. Syst. Model.
AB  - Although Model-Based Software Engineering (MBE) is a widely accepted Software Engineering (SE) discipline, no agreed-upon core set of concepts and practices (i.e., a Body of Knowledge) has been defined for it yet. With the goals of characterizing the contents of the MBE discipline, promoting a global consistent view of it, clarifying its scope with regard to other SE disciplines, and defining a foundation for the development of educational curricula on MBE, this paper proposes the contents for a Body of Knowledge for MBE. We also describe the methodology that we have used to come up with the proposed list of contents, as well as the results of a survey study that we conducted to sound out the opinion of the community on the importance of the proposed topics and their level of coverage in the existing SE curricula.
DA  - 2019/12//
PY  - 2019
DO  - 10.1007/s10270-019-00746-9
VL  - 18
IS  - 6
SP  - 3193
EP  - 3205
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00746-9
KW  - Body of Knowledge
KW  - Core concepts
KW  - Education
KW  - Model-Based Software Engineering
ER  - 

TY  - CONF
TI  - Comparative Study of Model-Based and Multi-Domain System Engineering Approaches for Industrial Settings
AU  - Votintseva, Anjelika
AU  - Witschel, Petra
AU  - Regnat, Nikolaus
AU  - Stelzig, Philipp Emanuel
T3  - ECMFA'12
AB  - A typical approach for the development of multi-domain systems often carries the risk of high non-conformance costs and time-consuming re-engineering due to the lack of interoperability between different domains. In its research project "Mechatronic Design", the Siemens AG develops an integrated, model-based and simulation-focused process to perform a frontloading engineering approach for multi-domain systems.The paper presents two use cases from this project as two implementation approaches to system modeling and simulation being synchronized at early design phases. Both use cases utilize the standardized system modeling language SysML and the multi-domain simulation language Modelica. One use case evaluates the standardized OMG SysML4Modelica profile for transformation between SysML and Modelica. The other use case uses a Modelica independent and proprietary profile aiming at more flexible usage. For both approaches, advantages and disadvantages are identified and compared. Depending on the project objectives, the general suitability of the approaches is also judged.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 8th European Conference on Modelling Foundations and Applications
DA  - 2012///
PY  - 2012
DO  - 10.1007/978-3-642-31491-9_4
SP  - 20
EP  - 31
PB  - Springer-Verlag
SN  - 978-3-642-31490-2
UR  - https://doi.org/10.1007/978-3-642-31491-9_4
KW  - model-based system engineering
KW  - SysML
KW  - modelica
KW  - simulation
KW  - comparative study
KW  - industrial use cases
KW  - multi-domain systems
ER  - 

TY  - JOUR
TI  - Editorial to the Theme Section on Model-Based Engineering of Smart Systems
AU  - Fitzgerald, John
AU  - Ishikawa, Fuyuki
AU  - Larsen, Peter Gorm
T2  - Softw. Syst. Model.
DA  - 2020/05//
PY  - 2020
DO  - 10.1007/s10270-019-00758-5
VL  - 19
IS  - 3
SP  - 579
EP  - 580
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00758-5
ER  - 

TY  - JOUR
TI  - Software Frameworks for Model Composition
AU  - Petty, Mikel D.
AU  - Kim, Jungyoon
AU  - Barbosa, Salvador E.
AU  - Pyun, Jai-Jeong
T2  - Model. Simul. Eng.
AB  - A software framework is an architecture or infrastructure intended to enable the integration and interoperation of software components. Specialized types of software frameworks are those specifically intended to support the composition of models or other components within a simulation system. Such frameworks are intended to simplify the process of assembling a complex model or simulation system from simpler component models as well as to promote the reuse of the component models. Several different types of software frameworks for model composition have been designed and implemented; those types include common library, product line architecture, interoperability protocol, object model, formal, and integrative environment. The various framework types have different components, processes for composing models, and intended applications. In this survey the fundamental terms and concepts of software frameworks for model composition are presented, the different types of such frameworks are explained and compared, and important examples of each type are described.
DA  - 2014/01//
PY  - 2014
DO  - 10.1155/2014/492737
VL  - 2014
SN  - 1687-5591
UR  - https://doi.org/10.1155/2014/492737
ER  - 

TY  - CONF
TI  - HybridSim: A Modeling and Co-Simulation Toolchain for Cyber-Physical Systems
AU  - Wang, Baobing
AU  - Baras, John S.
T3  - DS-RT '13
AB  - Cyber-physical systems (CPS) involve communication networks, computation algorithms, control systems and physical systems. Many CPS, such as Smart Buildings, are subject to very expensive deployment costs and complex network interactions. Thus comprehensive modeling and simulation of such systems are crucial to ensure that they function as intended before deployment. Given the multi-domain nature of CPS, it is more appropriate to use a heterogeneous simulation environment to study system dynamics. In this paper, we design and implement an integrated modeling and co-simulation tool chain, called HybridSim, for the design and simulation of CPS. Firstly, HybridSim can transform and import existing system components from multi-domains into SysML, which enables systems engineers to design CPS with only these imported SysML blocks. Secondly, HybridSim can generate Functional Mock-up Units (FMUs) and configuration scripts directly from SysML designs. Finally, HybridSim can co-simulate these FMUs according to the Functional Mock-up Interface standard to synchronize their corresponding simulators and exchange information between them. We demonstrate the convenience and efficiency of HybridSim using a comprehensive hydronic heating system model for Smart Buildings as the case study to investigate the impact of packet loss and sampling rate introduced by the communication network.
C1  - USA
C3  - Proceedings of the 2013 IEEE/ACM 17th International Symposium on Distributed Simulation and Real Time Applications
DA  - 2013///
PY  - 2013
DO  - 10.1109/DS-RT.2013.12
SP  - 33
EP  - 40
PB  - IEEE Computer Society
SN  - 978-0-7695-5138-8
UR  - https://doi.org/10.1109/DS-RT.2013.12
KW  - Cyber-Physical Systems
KW  - Modelica
KW  - Co-simulation
KW  - Functional Mock-up Interface
KW  - TinyOS
ER  - 

TY  - JOUR
TI  - Application of Supervisory Control Theory to Theme Park Vehicles
AU  - Forschelen, Stefan T.
AU  - Mortel-Fronczak, Joanna M.
AU  - Su, Rong
AU  - Rooda, Jacobus E.
T2  - Discrete Event Dynamic Systems
AB  - Due to increasing system complexity, time-to-market and development costs reduction, new engineering processes are required. Model-based engineering processes are suitable candidates because they support system development by enabling the use of various model-based analysis techniques and tools. As a result, they are able to cope with complexity and have the potential to reduce time-to-market and development costs. Moreover, supervisory control synthesis can be integrated in this setting, which can further contribute to the development of control systems. To evaluate the applicability of recently developed supervisor synthesis techniques and to show how they can be integrated in an engineering process, a theme park vehicle is chosen as a case study. The supervisor synthesized for the theme park vehicle has successfully been implemented and integrated in the existing resource-control platform.
DA  - 2012/12//
PY  - 2012
DO  - 10.1007/s10626-012-0130-6
VL  - 22
IS  - 4
SP  - 511
EP  - 540
SN  - 0924-6703
UR  - https://doi.org/10.1007/s10626-012-0130-6
KW  - Control applications
KW  - Control engineering
KW  - Distributed control
KW  - Implementation
KW  - Supervisory control
ER  - 

TY  - JOUR
TI  - Survey of Scientific Programming Techniques for the Management of Data-Intensive Engineering Environments
AU  - Ãlvarez-RodrÃ­guez, Jose MarÃ­a
AU  - Alor-HernÃ¡ndez, Giner
AU  - MejÃ­a-Miranda, Jezreel
AU  - Scanniello, Giuseppe
T2  - Sci. Program.
AB  - The present paper introduces and reviews existing technology and research works in the field of scientific programming methods and techniques in data-intensive engineering environments. More specifically, this survey aims to collect those relevant approaches that have faced the challenge of delivering more advanced and intelligent methods taking advantage of the existing large datasets. Although existing tools and techniques have demonstrated their ability to manage complex engineering processes for the development and operation of safety-critical systems, there is an emerging need to know how existing computational science methods will behave to manage large amounts of data. That is why, authors review both existing open issues in the context of engineering with special focus on scientific programming techniques and hybrid approaches. 1193 journal papers have been found as the representative in these areas screening 935 to finally make a full review of 122. Afterwards, a comprehensive mapping between techniques and engineering and nonengineering domains has been conducted to classify and perform a meta-analysis of the current state of the art. As the main result of this work, a set of 10 challenges for future data-intensive engineering environments have been outlined.
DA  - 2018/01//
PY  - 2018
DO  - 10.1155/2018/8467413
VL  - 2018
SN  - 1058-9244
UR  - https://doi.org/10.1155/2018/8467413
ER  - 

TY  - CONF
TI  - Formalization of Software Models for Cyber-Physical Systems
AU  - Neema, Sandeep
AU  - Simko, Gabor
AU  - Levendovszky, Tihamer
AU  - Porter, Joseph
AU  - Agrawal, Akshay
AU  - Sztipanovits, Janos
T3  - FormaliSE 2014
AB  - The involvement of formal methods is indispensable for modern software engineering. This especially holds for Cyber-Physical Systems (CPS). In order to deal with the complexity and heterogeneity of the design, model-based engineering is widely used. The complexity of detailed verification in the final source code makes it imperative to introduce formal methods earlier in the design process. Because of the widespread use of customized modeling languages (domain-specific modeling languages, DSMLs), it is crucial to formally specify the DSML, and verify if the model meets fundamental correctness criteria. This is achieved by specifying behavioral and structural semantics of the modeling language. Significant model-driven tools have emerged incorporating advanced model checking methods that can provide some assurance regarding the quality and correctness of the models. However, the code generated from these models, using auto code generators remains circumspect, since the correctness of the code generators cannot be assumed as a given, and remains intractable to prove. Therefore, we propose a pragmatic approach, instead of verifying explicit implementation of code generator, verifies the correctness of the generated code with respect to a specific set of user-defined properties to establish that the code-generators are property-preserving. In order to make the verification workflow conducive to domain engineers, who are not often trained in formal methods, we include a mechanism for high-level specification of temporal properties using pattern-based verification templates. The presented toolchain leverages state-of-the-art verification tools, and a small case-study illustrates the approach.
C1  - New York, NY, USA
C3  - Proceedings of the 2nd FME Workshop on Formal Methods in Software Engineering
DA  - 2014///
PY  - 2014
DO  - 10.1145/2593489.2593495
SP  - 45
EP  - 51
PB  - Association for Computing Machinery
SN  - 978-1-4503-2853-1
UR  - https://doi.org/10.1145/2593489.2593495
KW  - Cyber-Physical Systems
KW  - Model-Integrated Computing
KW  - Semantic Specification
ER  - 

TY  - CONF
TI  - Model-Based Security Engineering for Real
AU  - JÃ¼rjens, Jan
T3  - FM'06
AB  - We give an overview over a soundly based secure software engineering methodology and associated tool-support developed over the last few years under the name of Model-based Security Engineering (MBSE). We focus in particular on applications in industry.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 14th International Conference on Formal Methods
DA  - 2006///
PY  - 2006
DO  - 10.1007/11813040_42
SP  - 600
EP  - 606
PB  - Springer-Verlag
SN  - 3-540-37215-6
UR  - https://doi.org/10.1007/11813040_42
ER  - 

TY  - JOUR
TI  - Diversity of Graph Models and Graph Generators in Mutation Testing
AU  - SemerÃ¡th, OszkÃ¡r
AU  - Farkas, Rebeka
AU  - Bergmann, GÃ¡bor
AU  - VarrÃ³, DÃ¡niel
T2  - Int. J. Softw. Tools Technol. Transf.
AB  - When custom modeling tools are used for designing complex safety-critical systems (e.g., critical cyber-physical systems), the tools themselves need to be validated by systematic testing to prevent tool-specific bugs reaching the system. Testing of such modeling tools relies upon an automatically generated set of models as a test suite. While many software testing practices recommend that this test suite should be diverse, model diversity has not been studied systematically for graph models. In the paper, we propose different diversity metrics for models by generalizing and exploiting neighborhood and predicate shapes as abstraction. We evaluate such shape-based diversity metrics using various distance functions in the context of mutation testing of graph constraints and access policies for two separate industrial DSLs. Furthermore, we evaluate the quality (i.e., bug detection capability) of different (random and consistent) model generation techniques for mutation testing purposes.
DA  - 2020/02//
PY  - 2020
DO  - 10.1007/s10009-019-00530-6
VL  - 22
IS  - 1
SP  - 57
EP  - 78
SN  - 1433-2779
UR  - https://doi.org/10.1007/s10009-019-00530-6
KW  - Graph diversity metrics
KW  - Model diversity
KW  - Model generators
KW  - Mutation testing
KW  - Shape analysis
ER  - 

TY  - CONF
TI  - Modeling & Simulation in Systems Engineering: A Survey Course
AU  - Loper, Margaret L.
AU  - Bronston, Marshall
AU  - Berenbach, Brian
T3  - WSC '19
AB  - Systems engineering is a bit different from other engineering disciplines in that students from many disciplines are enrolled in the program. Therefore, the objective is not to teach a simulation subject in depth, but rather to introduce the students to different techniques so that they can work with and manage simulation staff on a project. However, they need some "hands on" experience so that they know how challenging simulations can be, avoiding the trap of underestimating the effort involved. This paper describes the approach used at Georgia Tech to teach a compressed 7 week simulation survey course called ASE 6003 Modeling &amp; Simulation in Systems Engineering. We describe the techniques used, our approach and the results achieved over recent years of teaching simulation in this format. Finally we discuss lessons learned and offer suggestions for others interested in offering a similar course.
C3  - Proceedings of the Winter Simulation Conference
DA  - 2019///
PY  - 2019
SP  - 3295
EP  - 3306
PB  - IEEE Press
SN  - 978-1-72813-283-9
ER  - 

TY  - JOUR
TI  - Design, Modelling, Simulation and Integration of Cyber Physical Systems
AU  - Hehenberger, P.
AU  - Vogel-Heuser, B.
AU  - Bradley, D.
AU  - Eynard, B.
AU  - Tomiyama, T.
AU  - Achiche, S.
T2  - Comput. Ind.
AB  - Presentation of a systematic classification of systems and new CPS paradigms.Analyses of literature conducted across a range of different perspectives.A systematic review of CPS-design literature was carried out, with an emphasis on the design, modelling, simulation and integration of CPS.An architectural and behavioural paradigm for CPS.Compilation of different viewpoints referring to applications at different levels of granularity. The main drivers for the development and evolution of Cyber Physical Systems (CPS) are the reduction of development costs and time along with the enhancement of the designed products. The aim of this survey paper is to provide an overview of different types of system and the associated transition process from mechatronics to CPS and cloud-based (IoT) systems. It will further consider the requirement that methodologies for CPS-design should be part of a multi-disciplinary development process within which designers should focus not only on the separate physical and computational components, but also on their integration and interaction. Challenges related to CPS-design are therefore considered in the paper from the perspectives of the physical processes, computation and integration respectively. Illustrative case studies are selected from different system levels starting with the description of the overlaying concept of Cyber Physical Production Systems (CPPSs). The analysis and evaluation of the specific properties of a sub-system using a condition monitoring system, important for the maintenance purposes, is then given for a wind turbine.
DA  - 2016/10//
PY  - 2016
DO  - 10.1016/j.compind.2016.05.006
VL  - 82
IS  - C
SP  - 273
EP  - 289
SN  - 0166-3615
UR  - https://doi.org/10.1016/j.compind.2016.05.006
KW  - Modelling
KW  - CPS-paradigm
KW  - Cyber physical systems
KW  - Design
KW  - Mechatronics
KW  - System classification
ER  - 

TY  - CONF
TI  - Towards Ensuring Security by Design in Cyber-Physical Systems Engineering Processes
AU  - Geismann, Johannes
AU  - Gerking, Christopher
AU  - Bodden, Eric
T3  - ICSSP '18
AB  - Engineering cyber-physical systems secure by design requires engineers to consider security from the ground up. However, current systems engineering processes are not tailored to cyber-physical systems, or lack an integration with security engineering. In this paper, we integrate secure software engineering practices into an engineering process for cyber-physical systems. Thereby, we enable engineers to specify security requirements at the level of systems engineering, and to take effective countermeasures during both platform-independent and platform-specific software engineering. Our key contribution is the integration of threat models for tracing security requirements to countermeasures. We illustrate our approach by an autonomous car with high security requirements.
C1  - New York, NY, USA
C3  - Proceedings of the 2018 International Conference on Software and System Process
DA  - 2018///
PY  - 2018
DO  - 10.1145/3202710.3203159
SP  - 123
EP  - 127
PB  - Association for Computing Machinery
SN  - 978-1-4503-6459-1
UR  - https://doi.org/10.1145/3202710.3203159
KW  - systems engineering
KW  - cyber-physical systems
KW  - security by design
ER  - 

TY  - CONF
TI  - A Requirement Driven Testing Method for Multi-Disciplinary System Design
AU  - Chabot, Martial
AU  - Pierre, Laurence
AU  - Nabais-Moreno, Alexandre
T3  - MODELS '16
AB  - In cyber-physical systems, the operations of various physical entities are controlled by computing cores. Therefore the design of these systems involves multi-disciplinary teams, for the development of the electronic devices and embedded firmware, but also for the design of the physical components (with mechanical, electrical, thermal, electromagnetic features). This intimate coupling of disparate elements makes correctness analysis very complex. Composite requirements have to be verified. In many application domains some of these requirements come from standardization documents, e.g., for systems that have to conform to IEC standards. One of the main challenges is to make the variety of experts coordinate towards the satisfaction of these requirements, in spite of the fact that they are accustomed to focusing on their domain-specific issues, with their specialized tools. The aim of the method proposed here is to provide a unified testing framework to enable the validation of cross-disciplinary requirements. Since we target a general-purpose solution, usable by all disciplines, the method is specified using an abstract modeling language, namely SysML.
C1  - New York, NY, USA
C3  - Proceedings of the ACM/IEEE 19th International Conference on Model Driven Engineering Languages and Systems
DA  - 2016///
PY  - 2016
DO  - 10.1145/2976767.2976795
SP  - 396
EP  - 405
PB  - Association for Computing Machinery
SN  - 978-1-4503-4321-3
UR  - https://doi.org/10.1145/2976767.2976795
ER  - 

TY  - CONF
TI  - Front Matter
C1  - Berlin, Heidelberg
C3  - HCI in Business, Government and Organizations: 7th International Conference, HCIBGO 2020, Held as Part of the 22nd HCI International Conference, HCII 2020, Copenhagen, Denmark, July 19â24, 2020, Proceedings
DA  - 2020///
PY  - 2020
SP  - i
EP  - xx
PB  - Springer-Verlag
SN  - 978-3-030-50340-6
ER  - 

TY  - CONF
TI  - Design and Simulation of a Wide Area Search Mission: An Implementation of an Autonomous Systems Reference Architecture
AU  - King, David
AU  - Jacques, David
AU  - Gray, Jeremy
AU  - Cheney, Katherine
T3  - WSC '20
AB  - The implementation and testing of autonomous and cooperative unmanned systems is challenging due to the inherent design complexity, infinite test spaces, and lack of autonomy specific measures. Simulation provides a low cost alternative to flight tests, allowing researchers to rapidly iterate on the design before fielding. To expedite this process, an Autonomous System Reference Architecture allows researchers to utilize existing software modules to rapidly develop algorithms for autonomous systems and test them in included simulation environments. In this paper, we implement ASRA on a cooperative wide area search scenario as a test bed to study ASRA's utility for rapid prototyping and evaluation of autonomous and cooperative systems. Through a face centered cubic design of experiments, selected autonomy metrics are studied to provide a response surface model to characterize the system and provide a tool to optimize mission control parameters and maximize mission performance.
C3  - Proceedings of the Winter Simulation Conference
DA  - 2020///
PY  - 2020
SP  - 540
EP  - 551
PB  - IEEE Press
SN  - 978-1-72819-499-8
ER  - 

TY  - JOUR
TI  - Supporting Customizable Business Process Models Using Graph Transformation Rules
AU  - Geist, Verena
AU  - Illibauer, Christa
AU  - NatschlÃ¤ger, Christine
AU  - Hutter, Robert
T2  - Int. J. Inf. Syst. Model. Des.
AB  - Business Process customization is an active research area in the process management field, dealing with variations/commonalities among processes of a given process family and runtime adaptations of single process instances. Many theoretical approaches have been suggested in the last years; however, practical implementations are rare and limited in their functionality. In this article, a new approach is proposed for capturing customizable process models based on well-known graph transformation techniques and with focus on practical aspects like definition of variation points, linking and propagation of changes, visual highlighting of differences in process variants, and dynamically selecting a specific variant at runtime. The suggested concepts are discussed within case studies, comprising different graph transformation systems for generating process variants supporting a variability by restriction, b variability by restriction and by extension, and c runtime adaptations due to the executing actor. The overall approach is being implemented in the FireStart BPM suite.
DA  - 2016/07//
PY  - 2016
DO  - 10.4018/IJISMD.2016070103
VL  - 7
IS  - 3
SP  - 51
EP  - 71
SN  - 1947-8186
UR  - https://doi.org/10.4018/IJISMD.2016070103
KW  - Actor-Based Adaptations
KW  - Business Process Management
KW  - Flexibility by Underspecification
KW  - Graph Transformation
KW  - Process Customization
KW  - Runtime Adaptations
KW  - Variability Modelling
KW  - Variant Management
ER  - 

TY  - CONF
TI  - Simulation Optimization in Discrete Event Logistics Systems: The Challenge of Operational Control
AU  - Sprock, Timothy
AU  - McGinnis, Leon F.
T3  - WSC '16
AB  - Simulation optimization tools have the potential to provide an unprecedented level of support for the design and execution of operational control in Discrete Event Logistics Systems (DELS). While much of the simulation optimization literature has focused on developing and exploiting integration and syntactical interoperability between simulation and optimization tools, maximizing the effectiveness of these tools to support the design and execution of control behavior requires an even greater degree of interoperability than the current state of the art. In this paper, we propose a modeling methodology for operational control decision-making that can improve the interoperability between these two analysis methods and their associated tools in the context of DELS control. This methodology establishes a standard definition of operational control for both simulation and optimization methods and defines a mapping between decision variables (optimization) and execution mechanisms (simulation/ base system). The goal is a standard for creating conforming simulation and optimization tools that are capable of meeting the functional needs of operational control decision making in DELS.
C3  - Proceedings of the 2016 Winter Simulation Conference
DA  - 2016///
PY  - 2016
SP  - 1170
EP  - 1181
PB  - IEEE Press
SN  - 978-1-5090-4484-9
ER  - 

TY  - JOUR
TI  - Monotone Precision and Recall Measures for Comparing Executions and Specifications of Dynamic Systems
AU  - Polyvyanyy, Artem
AU  - Solti, Andreas
AU  - Weidlich, Matthias
AU  - Ciccio, Claudio Di
AU  - Mendling, Jan
T2  - ACM Trans. Softw. Eng. Methodol.
AB  - The behavioural comparison of systems is an important concern of software engineering research. For example, the areas of specification discovery and specification mining are concerned with measuring the consistency between a collection of execution traces and a program specification. This problem is also tackled in process mining with the help of measures that describe the quality of a process specification automatically discovered from execution logs. Though various measures have been proposed, it was recently demonstrated that they neither fulfil essential properties, such as monotonicity, nor can they handle infinite behaviour. In this article, we address this research problem by introducing a new framework for the definition of behavioural quotients. We prove that corresponding quotients guarantee desired properties that existing measures have failed to support. We demonstrate the application of the quotients for capturing precision and recall measures between a collection of recorded executions and a system specification. We use a prototypical implementation of these measures to contrast their monotonic assessment with measures that have been defined in prior research.
DA  - 2020/06//
PY  - 2020
DO  - 10.1145/3387909
VL  - 29
IS  - 3
SN  - 1049-331X
UR  - https://doi.org/10.1145/3387909
KW  - behavioural analysis
KW  - behavioural comparison
KW  - conformance checking
KW  - coverage
KW  - entropy
KW  - fitness
KW  - precision
KW  - process mining
KW  - recall
KW  - System comparison
ER  - 

TY  - CONF
TI  - Enabling Design-Space Exploration for Domain-Specific Modelling
AU  - Meyers, Bart
AU  - Denil, Joachim
AU  - Vanherpen, Ken
AU  - Vangheluwe, Hans
T3  - Mod4Sim '18
AB  - Design-Space Exploration (DSE) looks for a suitable candidate solution to a problem, with respect to a set of criteria, by searching through a space of possible solution designs. Domain-Specific Modelling (DSM) allows language engineers to create Domain-Specific Languages (DSLs) for a particular domain, allowing non-technical domain experts to use the DSL to model a system, analyse, optimise or transform the model, generate code or documentation, etc. This paper presents a framework to enable DSE for DSM, so that non-technical domain experts can define DSE input using DSL syntax, and obtain DSL instances as a result of execution the DSE. The contribution of our framework is twofold: (1) automatic generation of a family of related DSLs (to describe structural constraints as well as constraints on simulation results) for modelling a DSE problem at the DSL level from a given DSL definition, and (2) generic support for executing a DSE algorithm, which searches the design space and generates suitable DSL instances. The framework can be applied to any explicitly defined DSL with an explicitly defined semantic domain. We evaluate this claim by applying our framework to a user-defined Simulink library. The approach is explained using a DSL for modelling electronic filters.
C1  - San Diego, CA, USA
C3  - Proceedings of the Model-Driven Approaches for Simulation Engineering Symposium
DA  - 2018///
PY  - 2018
PB  - Society for Computer Simulation International
SN  - 978-1-5108-6018-6
KW  - design-space exploration
KW  - domain-specific modelling
ER  - 

TY  - JOUR
TI  - The Documentation of Product Configuration Systems
AU  - Shafiee, Sara
AU  - Hvam, Lars
AU  - Haug, Anders
AU  - Dam, Michael
AU  - Kristjansdottir, Katrin
T2  - Adv. Eng. Inform.
AB  - The process of generating documentation from the PCS based on the available knowledge inside PCS.Display Omitted Lack of documentation degrades the quality of product configuration systems.To improve the documentation process, a framework is developed.An IT documentation system based on the configuration system knowledge is developed.The results indicate improved quality and performance of the configuration systems. When designing and maintaining a product configuration system (PCS), complete and up-to-date documentation of the system is needed in the form of a product model that outlines the structures, attributes, and constraints of the PCS. Furthermore, up-to-date documentation for the PCS is crucial for maintenance, further development, system quality and communication with domain experts. Product models are the main communication and documentation tools used in PCS projects. Recent studies have shown that up-to-date documentation for the PCS is often lacking due to the significant amount of work required to maintain product models. To address these challenges, this paper proposes an approach for documenting the PCS that is based on the structure, attributes, and constraints modelled within the PCS, in which the product model is generated directly from the PCS. The suggested approach avoids knowledge duplication, as knowledge needs to be maintained within the PCS only. It involves two steps: the first is the building of the initial product model, which is used for the programming of the PCS. In the second step, the product model is generated directly from the PCS and is based on the structure, attributes, and constraints inside the PCS. The product model does not need to be maintained, therefore, outside the PCS. This approach meets the demand for agile documentation and efficient communication with domain experts, and uses the fewest resources possible. Furthermore, to support the framework, an IT documentation system is proposed that is capable of retrieving knowledge from the PCS and thus generating the product model. Our framework and IT documentation system were developed and tested at a case company on five different projects. The results confirm that benefits can be achieved by using the proposed IT documentation system, as time and resources are saved, while the quality of the PCS is improved.
DA  - 2017/04//
PY  - 2017
DO  - 10.1016/j.aei.2017.02.004
VL  - 32
IS  - C
SP  - 163
EP  - 175
SN  - 1474-0346
UR  - https://doi.org/10.1016/j.aei.2017.02.004
KW  - Agile framework
KW  - IT documentation system
KW  - Product configuration system (PCS)
KW  - Product modelling
ER  - 

TY  - JOUR
TI  - Novel Approach to Establish Model-Based Development and Virtual Commissioning in Practice
AU  - Ahrens, Martin
AU  - Richter, Christoph
AU  - Hehenberger, Peter
AU  - Reinhart, Gunther
T2  - Eng. with Comput.
AB  - Due to several challenges such as faster development cycles or growing customer demands, the engineering of machines and plants is becoming increasingly complex. Methods such as model-based development and virtual commissioning (i.e. an early commissioning of plant control by means of virtual machine models) are known in theory, academia and industry. These methods can significantly contribute to face time, quality and cost challenges within the development of machines and plants. However, the application and implementation of these methods and related tools are a major task. One challenge is the integration of several models in various description languages. In addition, the usage often fails because of a lack of willingness and knowledge. In addition, innovative methods also require new work- and data flows in the respective enterprises. Therefore, the challenge is to cope with historically grown structures. For this reason, this paper proposes an approach to address the challenge of introducing model-based development and virtual commissioning in enterprises in the field of machinery and plant engineering. After presenting a novel three-step methodology to introduce these methods, the theoretical implementation of virtual commissioning is described in detail. Afterwards, an industrial application example with explanation of the realization of virtual commissioning is presented and critically discussed. Finally, a summary with results and benefits and an insight to future research aspects with regard to the design of cyber-physical system and related topics is given.
DA  - 2019/07//
PY  - 2019
DO  - 10.1007/s00366-018-0622-6
VL  - 35
IS  - 3
SP  - 741
EP  - 754
SN  - 0177-0667
UR  - https://doi.org/10.1007/s00366-018-0622-6
KW  - Mechatronic engineering
KW  - Model-based development
KW  - Virtual commissioning
ER  - 

TY  - CONF
TI  - A Supervisor Synthesis Tool for Finite Nondeterministic Automata with Data
AU  - Kirilov, Aleksandar
AU  - Martinovikj, Darko
AU  - Mishevski, Kristijan
AU  - Petkovska, Marija
AU  - Trajcheska, Zlatka
AU  - Markovski, Jasen
AB  - Supervisory control theory deals with automated synthesis of models of supervisory controllers based on the models of the unsupervised systems and the control requirements. The models of the supervisory controllers are referred to as supervisors. We present a supervisor synthesis tool for finite nondeterministic automata with data-based control requirements. The tool implements a process-theoretic approach to supervisory control theory, which employs the behavioral preorder partial bisimulation to characterize the notion of a supervisor. To illustrate the tool, we remodel an industrial case study dealing with coordination of maintenance procedures of a printing process of a high-tech printer.
C1  - Berlin, Heidelberg
C3  - Revised Selected Papers of the SEFM 2013 Collocated Workshops on Software Engineering and Formal Methods - Volume 8368
DA  - 2013///
PY  - 2013
DO  - 10.1007/978-3-319-05032-4_8
SP  - 101
EP  - 112
PB  - Springer-Verlag
SN  - 978-3-319-05031-7
UR  - https://doi.org/10.1007/978-3-319-05032-4_8
ER  - 

TY  - JOUR
TI  - A Rationale for the Choice of Enterprise Architecture Method and Software Technology in a Software Driven Enterprise
AU  - Venkatesan, D.
AU  - Sridhar, S.
T2  - Int. J. Bus. Inf. Syst.
AB  - Enterprise architecture frameworks (EAFs) provide tools and methods to categorise, document and depict interrelationship between enterprise business processes, stakeholders and information classes. It explicitly documents information generation, processing and consumption pattern facilitating communication and management. But there is a confusing variety of EAFs for organisations to choose from. There is no explicit guidance or justifiable rationale available to choose an EAF over others. This paper provides a rationale and attributes based evaluation of popular EAFs and conclude superiority of Zachman framework (ZF) for a software-driven enterprise (SDE). Further, this paper surveys salient aspects of different software technologies and provide an assessment framework to compare them and conclude suitability of agent technology for realising information system infrastructure of an SDE. This work makes a provocative argument that many of the modern EAFs are not suited for an SDE due to their affiliation to software technologies that are found to has several limitations.
DA  - 2019/01//
PY  - 2019
DO  - 10.1504/ijbis.2019.103080
VL  - 32
IS  - 3
SP  - 272
EP  - 311
SN  - 1746-0972
UR  - https://doi.org/10.1504/ijbis.2019.103080
KW  - agent technology
KW  - BAM
KW  - business model alignment
KW  - EA
KW  - EAF
KW  - enterprise architecture
KW  - enterprise architecture framework
KW  - enterprise software
KW  - information systems design
KW  - MDD
KW  - model driven development
KW  - software architecture
KW  - system modelling
ER  - 

TY  - JOUR
TI  - Model-Based Tool Support for Tactical Data Links: An Experience Report from the Defence Domain
AU  - Ajit, Suraj
AU  - Holmes, Chris
AU  - Johnson, Julian
AU  - Kolovos, Dimitrios S.
AU  - Paige, Richard F.
T2  - Softw. Syst. Model.
AB  - The Tactical Data Link (TDL) allows the exchange of information between cooperating platforms as part of an integrated command and control ($$C^2$$C2) system. Information exchange is facilitated by adherence to a complex, message-based protocol defined by document-centric standards. In this paper, we report on a recent body of work investigating migration from a document-centric to a model-centric approach within the context of the TDL domain, motivated by a desire to achieve a positive return on investment. The model-centric approach makes use of the Epsilon technology stack and provides a significant improvement to both the level of abstraction and rigour of the network design. It is checkable by a machine and, by virtue of an MDA-like approach to the separation of domains and model transformation between domains, is open to integration with other models to support more complex workflows, such as by providing the results of interoperability analyses in human-readable domain-specific reports conforming to an accepted standard.
DA  - 2017/05//
PY  - 2017
DO  - 10.1007/s10270-015-0480-2
VL  - 16
IS  - 2
SP  - 559
EP  - 586
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-015-0480-2
KW  - Interoperability
KW  - Metamodelling
KW  - Model-based development
KW  - Eclipse Modeling Framework
KW  - Epsilon
KW  - Model management
KW  - Tactical data link
ER  - 

TY  - CONF
TI  - Model-Based Engineering & Simulation of Software-Intensive Systems-of-Systems: Experience Report and Lessons Learned
AU  - Neto, Valdemar Vicente Graciano
AU  - Manzano, Wallace
AU  - Kassab, Mohammad
AU  - Nakagawa, Elisa Yumi
T3  - ECSA '18
AB  - Software has been increasingly embedded into systems (e.g., autonomous cars, traffic control systems, power distribution systems) to increase the precision of their functionalities, deliver automation, and make them smarter. Those systems have been combined and formed Systems-of-Systems (SoS) to realize futuristic software applications, such as smart cities. However, the complexity exhibited by them has also increased, claiming for techniques to support their engineering and quality. In this direction, modeling and simulation (M&amp;S) have been established as valuable resources to deal with such complexity, potentially supporting an accurate prediction of SoS software correctness. The main contribution of this paper is reporting the results and advances achieved in the last five years of research on the use of M&amp;S techniques to support Software Engineering of SoS. We report our experience, present learned lessons, and point for important challenges that must still be addressed.
C1  - New York, NY, USA
C3  - Proceedings of the 12th European Conference on Software Architecture: Companion Proceedings
DA  - 2018///
PY  - 2018
DO  - 10.1145/3241403.3241432
PB  - Association for Computing Machinery
SN  - 978-1-4503-6483-6
UR  - https://doi.org/10.1145/3241403.3241432
KW  - simulation
KW  - model-based
KW  - model-driven
KW  - modeling
KW  - experience report
KW  - lessons learned
KW  - model
KW  - systems-of-systems
ER  - 

TY  - JOUR
TI  - AltaRica 3.0 in Ten Modelling Patterns
T2  - Int. J. Crit. Comput.-Based Syst.
AB  - AltaRica 3.0 is an object-oriented modelling language dedicated to probabilistic risk and safety analyses. It is a prominent representative of modelling formalisms supporting the so-called model-based approach in reliability engineering. In this article, we illustrate the key features of the AltaRica 3.0 technology by presenting the implementation of ten very common modelling patterns. We demonstrate in this way the expressive power of the language as well as its elegance and simplicity of use.
DA  - 2019/01//
PY  - 2019
VL  - 9
IS  - 1â2
SP  - 133
EP  - 165
SN  - 1757-8779
ER  - 

TY  - CONF
TI  - Supporting the Reuse of Algorithmic Simulation Models
AU  - Keller, Nicholas
AU  - Zeigler, Bernard
AU  - Kim, Doohwan
AU  - Anderson, Chase
AU  - Ceney, James
T3  - SummerSim '20
AB  - Stateless functions, also referred to as algorithmic models, return an output given inputs that all occur at the same time instant. As relatively simple dynamic models, which define the behavior of variables over a timeline, algorithmic models nevertheless encode knowledge of entities that can be essential for use within models in a particular domain. This paper presents a development methodology for representing algorithmic models within the Discrete Event Systems Specifications (DEVS) formalism and employing the System Entity Structure (SES) to organize these models for reuse in new compositions. A use case example is used for illustration of the development process and the benefits in savings of time and effort are illustrated. Finally, some future possibilities to enhance the support of DEVS environments for this methodology are discussed.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2020 Summer Simulation Conference
DA  - 2020///
PY  - 2020
PB  - Society for Computer Simulation International
SN  - 978-1-71381-429-0
KW  - DEVS
KW  - reuse
KW  - algorithmic
KW  - SES
ER  - 

TY  - CONF
TI  - Lessons Learned from Model-Based Safety Assessment with SysML and Component Fault Trees
AU  - Nordmann, Arne
AU  - Munk, Peter
T3  - MODELS '18
AB  - Mastering the complexity of safety assurance for modern, software-intensive systems is challenging in several domains, such as automotive, robotics, and avionics. Model-based safety analysis techniques show promising results to handle this challenge by automating the generation of required artifacts for an assurance case. In this work, we adapt prominent approaches and propose facilitation of SysML models with component fault trees (CFTs) to support the fault tree analysis (FTA). While most existing approaches based on CFTs are only targeting the system topology, e. g., UML Class Diagrams, we propose an integration of CFTs with SysML Internal Block Diagrams as well as SysML Activity Diagrams. We conclude with best practices and lessons learned that emerged from applying our approach to automotive use-cases.
C1  - New York, NY, USA
C3  - Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems
DA  - 2018///
PY  - 2018
DO  - 10.1145/3239372.3239373
SP  - 134
EP  - 143
PB  - Association for Computing Machinery
SN  - 978-1-4503-4949-9
UR  - https://doi.org/10.1145/3239372.3239373
ER  - 

TY  - CONF
TI  - XCPS: A Tool to EXplore Cyber Physical Systems
AU  - Adyanthaya, Shreya
AU  - Ara, Hadi Alizadeh
AU  - Bastos, JoÃ£o
AU  - Behrouzian, Amir
AU  - SÃ¡nchez, RÃ³binson Medina
AU  - van Pinxten, Joost
AU  - van der Sanden, Bram
AU  - Waqas, Umar
AU  - Basten, Twan
AU  - Corporaal, Henk
AU  - Frijns, Raymond
AU  - Geilen, Marc
AU  - Goswami, Dip
AU  - Stuijk, Sander
AU  - Reniers, Michel
AU  - Voeten, Jeroen
T3  - WESE'15
AB  - Cyber-Physical Systems (CPS) play an important role in the modern high-tech industry. Designing such systems is a challenging task due to the multi-disciplinary nature of these systems, and the range of abstraction levels involved. To facilitate hands-on experience with such systems, we develop a cyber-physical platform that aids in research and education on CPS. This paper describes this platform, which contains all typical CPS components. The platform is used in various research and education projects for bachelor, master, and PhD students. We discuss the platform and a number of projects and the educational opportunities they provide.
C1  - New York, NY, USA
C3  - Proceedings of the WESE'15: Workshop on Embedded and Cyber-Physical Systems Education
DA  - 2015///
PY  - 2015
DO  - 10.1145/2832920.2832923
PB  - Association for Computing Machinery
SN  - 978-1-4503-3897-4
UR  - https://doi.org/10.1145/2832920.2832923
KW  - embedded systems
KW  - Cyber-Physical Systems
KW  - education
ER  - 

TY  - CONF
TI  - A Task-Independent Design and Development Process for Cognitive Products in Industrial Applications
AU  - Murauer, Michaela
AU  - Jungwirth, Florian
AU  - Anzengruber, Bernhard
AU  - Abbas, Ali
AU  - Ahmad, Abdelrahman
AU  - Azadi, Behrooz
AU  - Cho, Jullius
AU  - Ennsbrunner, Helmut
AU  - Ferscha, Alois
AU  - Gerhard, Detlef
AU  - Gollan, Benedikt
AU  - HaslgrÃ¼bler, Michael
AU  - Selymes, Johannes
AU  - Sopidis, Georgios
AU  - StÃ¼tz, Matthias
AU  - WeiÃenbach, Paul
T3  - PETRA '19
AB  - This paper motivates the employment of a cognitive headgear in the context of two concrete human-in-the-loop industrial use cases. However, the distinct design and implementation of such a headgear is strongly task-dependent and no one-fits-all solution exists. To overcome that, a computer-aided design process is proposed that allows the design of a device truly tailored to the individual needs. Further, the features and components required to support workers in the identified scenarios are depicted, including image-based worker localization, gaze-based skill-level detection, workflow recognition using head-worn sensors and multimodal assistance. Finally, early functional prototypes are illustrated.
C1  - New York, NY, USA
C3  - Proceedings of the 12th ACM International Conference on PErvasive Technologies Related to Assistive Environments
DA  - 2019///
PY  - 2019
DO  - 10.1145/3316782.3322748
SP  - 358
EP  - 367
PB  - Association for Computing Machinery
SN  - 978-1-4503-6232-0
UR  - https://doi.org/10.1145/3316782.3322748
KW  - cognitive systems
KW  - pervasive computing
KW  - wearable computing
ER  - 

TY  - JOUR
TI  - A Functional Reference Architecture for Autonomous Driving
AU  - Behere, Sagar
AU  - TÃ¶rngren, Martin
T2  - Inf. Softw. Technol.
AB  - ContextAs autonomous driving technology matures toward series production, it is necessary to take a deeper look at various aspects of electrical/electronic (E/E) architectures for autonomous driving.ObjectiveThis paper describes a functional reference architecture for autonomous driving, along with various considerations that influence such an architecture. The functionality is described at the logical level, without dependence on specific implementation technologies.MethodEngineering design has been used as the research method, which focuses on creating solutions intended for practical application. The architecture has been refined and applied over a 5 year period to the construction of prototype autonomous vehicles in three different categories, with both academic and industrial stakeholders.ResultsThe architectural components are divided into categories pertaining to (i) perception, (ii) decision and control, and (iii) vehicle platform manipulation. The architecture itself is divided into two layers comprising the vehicle platform and a cognitive driving intelligence. The distribution of components among the architectural layers considers two extremes: one where the vehicle platform is as "dumb" as possible, and the other, where the vehicle platform can be treated as an autonomous system with limited intelligence. We recommend a clean split between the driving intelligence and the vehicle platform. The architecture description includes identification of stakeholder concerns, which are grouped under the business and engineering categories. A comparison with similar architectures is also made, wherein we claim that the presence of explicit components for world modeling, semantic understanding, and vehicle platform abstraction seem unique to our architecture.ConclusionThe concluding discussion examines the influences of implementation technologies on functional architectures and how an architecture is affected when a human driver is replaced by a computer. The discussion also proposes that reduction and acceleration of testing, verification, and validation processes is the key to incorporating continuous deployment processes.
DA  - 2016/05//
PY  - 2016
DO  - 10.1016/j.infsof.2015.12.008
VL  - 73
IS  - C
SP  - 136
EP  - 150
SN  - 0950-5849
UR  - https://doi.org/10.1016/j.infsof.2015.12.008
KW  - E/E architecture
KW  - Autonomous driving
KW  - Functional architecture
KW  - Reference architecture
ER  - 

TY  - JOUR
TI  - Towards a Sustainable Interoperability in Networked Enterprise Information Systems
AU  - Agostinho, Carlos
AU  - Ducq, Yves
AU  - Zacharewicz, Gregory
AU  - Sarraipa, JoÃ£o
AU  - Lampathaki, Fenareti
AU  - Poler, Raul
AU  - Jardim-Goncalves, Ricardo
T2  - Comput. Ind.
AB  - Sustaining interoperability in enterprise networks is the next research challenge.Not understanding the impact of a single system change may cause network failures.Pervasive information models and EA can support dynamic interoperability enablers.Combined use of model-driven and knowledge-based approaches can improve NG-EIS.We present and discuss the sustainable interoperability research framework. In a turbulent world, global competition and the uncertainty of markets have led organizations and technology to evolve exponentially, surpassing the most imaginary scenarios predicted at the beginning of the digital manufacturing era, in the 1980s. Business paradigms have changed from a standalone vision into complex and collaborative ecosystems where enterprises break down organizational barriers to improve synergies with others and become more competitive. In this context, paired with networking and enterprise integration, enterprise information systems (EIS) interoperability gained utmost importance, ensuring an increasing productivity and efficiency thanks to a promise of more automated information exchange in networked enterprises scenarios. However, EIS are also becoming more dynamic. Interfaces that are valid today are outdated tomorrow, thus static interoperability enablers and communication software services are no longer the solution for the future. This paper is focused on the challenge of sustaining networked EIS interoperability, and takes up input from solid research initiatives in the areas of knowledge management and model driven development, to propose and discuss several research strategies and technological trends towards next EIS generation.
DA  - 2016/06//
PY  - 2016
DO  - 10.1016/j.compind.2015.07.001
VL  - 79
IS  - C
SP  - 64
EP  - 76
SN  - 0166-3615
UR  - https://doi.org/10.1016/j.compind.2015.07.001
KW  - Ontologies
KW  - Enterprise information systems
KW  - Knowledge management semantic matching
KW  - Model-driven interoperability
KW  - Model-driven service engineering
KW  - Sustainable interoperability
ER  - 

TY  - CONF
TI  - A System-of-Systems Approach for Integrated Energy Systems Modeling and Simulation
AU  - Mittal, Saurabh
AU  - Ruth, Mark
AU  - Pratt, Annabelle
AU  - Lunacek, Monte
AU  - Krishnamurthy, Dheepak
AU  - Jones, Wesley
T3  - SummerSim '15
AB  - Energy systems integration combines energy carriers, including electricity, with infrastructures, to maximize efficiency and minimize waste. In order to study systems at a variety of physical scalesâfrom individual buildings to distribution systemsâinterconnected through these energy infrastructures, NREL is developing an Integrated Energy System Model (IESM), with an initial focus on the electricity system. Today's electricity grid is the most complex system ever builtâand the future grid is likely to be even more complex because it will incorporate distributed energy resources (DERs) such as wind, solar, and various other sources of generation and energy storage. The complexity is further augmented by the possible evolution to new retail market structures that would provide incentives to owners of DERs to support the grid. The IESM can be used to understand and test the impact of new retail market structures and technologies such as DERs, demand-response equipment, and energy management systems on the system's ability to provide reliable electricity to all customers. The IESM is composed of a power flow simulator (GridLAB-D), building and appliance models including home energy management system implemented using either GAMS or Pyomo, a market layer, and is able to include hardware-in-the-loop simulation (testing appliances such as air conditioners, dishwashers, etc.). The IESM is a system-of-systems (SoS) simulator wherein the constituent systems are brought together in a virtual testbed. We will describe an SoS approach for developing a distributed simulation environment. We will elaborate on the methodology and the control mechanisms used in the co-simulation illustrated by a case study.
C1  - San Diego, CA, USA
C3  - Proceedings of the Conference on Summer Computer Simulation
DA  - 2015///
PY  - 2015
SP  - 1
EP  - 10
PB  - Society for Computer Simulation International
SN  - 978-1-5108-1059-4
KW  - system-of-systems
KW  - co-simulation
KW  - DEVS
KW  - discrete-event simulation
KW  - GridLAB-D
KW  - integrated energy systems
KW  - optimization
KW  - smart grid
ER  - 

TY  - JOUR
TI  - Use, Potential, and Showstoppers of Models in Automotive Requirements Engineering
AU  - Liebel, Grischa
AU  - Tichy, Matthias
AU  - Knauss, Eric
T2  - Softw. Syst. Model.
AB  - Several studies report that the use of model-centric methods in the automotive domain is widespread and offers several benefits. However, existing work indicates that few modelling frameworks explicitly include requirements engineering (RE), and that natural language descriptions are still the status quo in RE. Therefore, we aim to increase the understanding of current and potential future use of models in RE, with respect to the automotive domain. In this paper, we report our findings from a multiple-case study with two automotive companies, collecting interview data from 14 practitioners. Our results show that models are used for a variety of different purposes during RE in the automotive domain, e.g. to improve communication and to handle complexity. However, these models are often used in an unsystematic fashion and restricted to few experts. A more widespread use of models is prevented by various challenges, most of which align with existing work on model use in a general sense. Furthermore, our results indicate that there are many potential benefits associated with future use of models during RE. Interestingly, existing research does not align well with several of the proposed use cases, e.g. restricting the use of models to informal notations for communication purposes. Based on our findings, we recommend a stronger focus on informal modelling and on using models for multi-disciplinary environments. Additionally, we see the need for future work in the area of model use, i.e. information extraction from models by non-expert modellers.
DA  - 2019/08//
PY  - 2019
DO  - 10.1007/s10270-018-0683-4
VL  - 18
IS  - 4
SP  - 2587
EP  - 2607
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-018-0683-4
KW  - Requirements engineering
KW  - MDE
KW  - Automotive
KW  - Case study
KW  - Empirical research
KW  - MBE
KW  - Modelling
ER  - 

TY  - JOUR
TI  - Business Process Flexibility - a Systematic Literature Review with a Software Systems Perspective
AU  - Cognini, Riccardo
AU  - Corradini, Flavio
AU  - Gnesi, Stefania
AU  - Polini, Andrea
AU  - Re, Barbara
T2  - Information Systems Frontiers
AB  - Business Process flexibility supports organizations in changing their everyday work activities to remain competitive. Since much research has been done on this topic a better awareness on the current state of knowledge is needed. This paper reports the results of a systematic literature review to develop a map on Business Process flexibility with a special focus on software systems related aspects. It covers a spectrum of the state of the art from academic point of view. It includes 164 research works from the main computer science digital libraries. After an introduction into the topic the applied methodology is described. The output of the paper is in the form of schemes and reflections. Starting from the needs for Business Process flexibility, its impact on Business Process life-cycle is introduced. Successively instruments used to express and to support Business Process flexibility are presented together with related validation scenarios. In this paper we also highlight possible future research lines needing further investigations. In particular we identified room for future works in the area of languages for modeling flexibility, on-the-fly verification solutions, adaptation of Business Process running instances, and techniques for evolution recognition.
DA  - 2018/04//
PY  - 2018
DO  - 10.1007/s10796-016-9678-2
VL  - 20
IS  - 2
SP  - 343
EP  - 371
SN  - 1387-3326
UR  - https://doi.org/10.1007/s10796-016-9678-2
KW  - Evolution
KW  - Adaptability
KW  - Business process
KW  - Business process life-cycle
KW  - Business process management
KW  - Cases study
KW  - Flexibility
KW  - Languages
KW  - Looseness
KW  - Mechanisms
KW  - Process aware information systems
KW  - Systematic literature review
KW  - Variability
ER  - 

TY  - JOUR
TI  - Model-Based Testing 2010: Short Abstracts
AU  - Tretmans, Jan
AU  - Prester, Florian
AU  - Helle, Philipp
AU  - Schamai, Wladimir
T2  - Electron. Notes Theor. Comput. Sci.
AB  - This article contains three short abstracts of presentations given at the Sixth Workshop on Model-Based Testing (MBT 2010) on March 21, 2010 in Paphos, Cyprus: Theory of Model-Based Testing and How ioco Goes eco by Jan Tretmans (invited presentation), Model-Centric Testing by Florian Prester and Specification Model Based Testing in the Avionic Domain - Current Status and Future Directions by Philipp Helle and Wladimir Schamai.
DA  - 2010/12//
PY  - 2010
DO  - 10.1016/j.entcs.2010.12.016
VL  - 264
IS  - 3
SP  - 85
EP  - 99
SN  - 1571-0661
UR  - https://doi.org/10.1016/j.entcs.2010.12.016
ER  - 

TY  - CONF
TI  - Incquery Server for Teamwork Cloud: Scalable Query Evaluation over Collaborative Model Repositories
AU  - HegedÃ¼s, Ãbel
AU  - Bergmann, GÃ¡bor
AU  - Debreceni, Csaba
AU  - HorvÃ¡th, Ãkos
AU  - Lunk, PÃ©ter
AU  - MenyhÃ©rt, Ãkos
AU  - Papp, IstvÃ¡n
AU  - VarrÃ³, DÃ¡niel
AU  - Vileiniskis, Tomas
AU  - RÃ¡th, IstvÃ¡n
T3  - MODELS '18
AB  - Large-scale cyber-physical systems are co-engineered, especially in safety-critical industries, by various specialists within an organization and, increasingly, across organizations. The collaborative aspect of the process is facilitated by hosting engineering artifacts in model repositories. In order to validate the adherence to design rules, perform change impact analysis across projects, generate reports etc., engineers specify model queries and evaluate them using query engines, traditionally available in client modeling tools.In this paper we introduce IncQuery Server for Teamwork Cloud (IQS4TWC), a standalone middleware service that connects to Teamwork Cloud model repositories, and builds on Viatra Query to provide fast querying over their content. The new server-side solution provides advanced features including single-model ad-hoc queries as well as repository-wide change impact analysis (correlating projects across branches and revisions); access to version snapshots as well as queries on the latest state; and a range of performance fine-tuning options (such as elasticity and in-memory indexes) to achieve high scalability.
C1  - New York, NY, USA
C3  - Proceedings of the 21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
DA  - 2018///
PY  - 2018
DO  - 10.1145/3270112.3270125
SP  - 27
EP  - 31
PB  - Association for Computing Machinery
SN  - 978-1-4503-5965-8
UR  - https://doi.org/10.1145/3270112.3270125
KW  - model-driven engineering
KW  - collaborative modeling
KW  - co-engineering
KW  - model query
ER  - 

TY  - CONF
TI  - Towards the Characterization of Realistic Models: Evaluation of Multidisciplinary Graph Metrics
AU  - SzÃ¡rnyas, GÃ¡bor
AU  - K\HovÃ¡ri, Zsolt
AU  - SalÃ¡nki, Ãgnes
AU  - VarrÃ³, DÃ¡niel
T3  - MODELS '16
AB  - Custom generators of graph-based models are used in MDE for many purposes such as functional testing and performance benchmarking of modeling environments to ensure the correctness and scalability of tools. However, while existing generators may generate large models in increasing size, these models are claimed to be simple and synthetic, which hinders their credibility for industrial and research benchmarking purposes. But how to characterize a realistic model used in software and systems engineering? This question is investigated in the paper by collecting over 17 different widely used graph metrics taken from other disciplines (e.g. network theory) and evaluating them on 83 instance models originating from six modeling domains. Our preliminary results show that certain metrics are similar within a domain, but differ greatly between domains, which makes them suitable input for future instance model generators to derive more realistic models.
C1  - New York, NY, USA
C3  - Proceedings of the ACM/IEEE 19th International Conference on Model Driven Engineering Languages and Systems
DA  - 2016///
PY  - 2016
DO  - 10.1145/2976767.2976786
SP  - 87
EP  - 94
PB  - Association for Computing Machinery
SN  - 978-1-4503-4321-3
UR  - https://doi.org/10.1145/2976767.2976786
KW  - domain models
KW  - graph metrics
KW  - network theory
ER  - 

TY  - CONF
TI  - Investigating the Model-Driven Development for Systems-of-Systems
AU  - Graciano Neto, Valdemar Vicente
AU  - Guessi, Milena
AU  - Oliveira, Lucas Bueno R.
AU  - Oquendo, Flavio
AU  - Nakagawa, Elisa Yumi
T3  - ECSAW '14
AB  - Software-intensive systems have become increasingly large and complex and new techniques and methodologies are necessary to deal with such complexity. Model-Driven Development (MDD) has been used to deal with complex scenarios, since software models, despite details, facilitate the visualization of the whole. Moreover, MDD has been widely recognized as a way to assure quality, reducing time and effort, and making possible the automatic transformation of models to generate source code. In this direction, software-intensive Systems-of-Systems (SoS) is a class of software systems that have emerged over the iminence of large systems which have a high-level of complexity. Considering the success of MDD in other areas, we decided to investigate how MDD has been used in the context of SoS. This paper presents results of a Systematic Literature Review conducted to scrutinize and bring to light the state of the art in the field of MDD for SoS. Besides that, we discuss future research directions and perspectives, aiming at contributing to the development of SoS.
C1  - New York, NY, USA
C3  - Proceedings of the 2014 European Conference on Software Architecture Workshops
DA  - 2014///
PY  - 2014
DO  - 10.1145/2642803.2642825
PB  - Association for Computing Machinery
SN  - 978-1-4503-2778-7
UR  - https://doi.org/10.1145/2642803.2642825
KW  - System-of-Systems
KW  - Model-Driven Development
KW  - Software Generation
ER  - 

TY  - CONF
TI  - Modular Model-Based Supervisory Controller Design for Wafer Logistics in Lithography Machines
AU  - van der Sanden, Bram
AU  - Reniers, Michel
AU  - Geilen, Marc
AU  - Basten, Twan
AU  - Jacobs, Johan
AU  - Voeten, Jeroen
AU  - Schiffelers, Ramon
T3  - MODELS '15
AB  - Development of high-level supervisory controllers is an important challenge in the design of high-tech systems. It has become a significant issue due to increased complexity, combined with demands for verified quality, time to market, ease of development, and integration of new functionality. To deal with these challenges, model-based engineering approaches are suggested as a cost-effective way to support easy adaptation, validation, synthesis, and verification of controllers. This paper presents an industrial case study on modular design of a supervisory controller for wafer logistics in lithography machines. The uncontrolled system and control requirements are modeled independently in a modular way, using small, loosely coupled and minimally restrictive extended finite automata. The multiparty synchronization mechanism that is part of the specification formalism provides clear advantages in terms of modularity, traceability, and adaptability of the model. We show that being able to refer to variables and states of automata in guard expressions and state-based requirements, enabled by the use of extended finite automata, provides concise models. Additionally, we show how modular synthesis allows construction of local supervisors that ensure safety of parts of the system, since monolithic synthesis is not feasible for our industrial case.
C3  - Proceedings of the 18th International Conference on Model Driven Engineering Languages and Systems
DA  - 2015///
PY  - 2015
SP  - 416
EP  - 425
PB  - IEEE Press
SN  - 978-1-4673-6908-4
ER  - 

TY  - CONF
TI  - An Approach Combining SysML and Modelica for Modelling and Validate Wireless Sensor Networks
AU  - Hammad, Ahmed
AU  - Mountassir, Hassan
AU  - Chouali, Samir
T3  - SESoS '13
AB  - Wireless Sensor Networks (WSN) have large industrial applications, however the modelling is still a very complex task in view of the nature of these networks, namely because they are distributed, embedded and have strong interactions between the hardware and software parts. In addition, industrials use semi-formal methods to design their systems and validate behaviours by simulation. In this context, in order to improve the checking of the WSN properties, we propose a Model Driven Engineering (MDE) approach for modeling and checking properties like energy consumption. This approach combines the advantages of SysML and Modelica languages. It is described mainly by two steps. At first, we offer a model transformation by taking into account static, dynamic and requirement diagrams of SysML in order to specify their corresponding Modelica model. In the second step, we carried out the virtual verification of WSN energy consumption. This approach is implemented inside Topcased platform and illustrated through a cross-roads monitoring system.
C1  - New York, NY, USA
C3  - Proceedings of the First International Workshop on Software Engineering for Systems-of-Systems
DA  - 2013///
PY  - 2013
DO  - 10.1145/2489850.2489852
SP  - 5
EP  - 12
PB  - Association for Computing Machinery
SN  - 978-1-4503-2048-1
UR  - https://doi.org/10.1145/2489850.2489852
KW  - SysML
KW  - modelica
KW  - simulation
KW  - MDE
KW  - WSN
KW  - modelling
KW  - virtual verification
ER  - 

TY  - CONF
TI  - System Simulation for Autonomous UAV Design*
AU  - Cappuzzo, Federico
AU  - Matiasso Portella, Kenedy
AU  - MascomÃ¨re, Jean-Patrick
AU  - Thalmann, Guillaume
AU  - Lallement, Raphael
T3  - DroneSE and RAPIDO '21
AB  - The use of drones or Unmanned Aerial Vehicles (UAVs) in commercial applications has the potential to disrupt several industries. To cover effectively such a broad spectrum of applications, UAV integrators require the ability to develop drone platforms that meet the requirements specified for the missions to accomplish. Simulation-based analysis are essential to this extent, as they provide useful means to explore the design space and select the most promising concepts that comply with requirements and specifications. This paper presents the use of system simulation techniques to model the performance of an octocopter UAV following specifications shared in the frame of the European research project COMP4DRONES. Batteries, electric motors, propulsion and flight behavior are simulated in the context of a mission including seismic sensors droppings. The performance model was then integrated in a co-simulation framework to include navigation sensors, mission environment, and guidance and control algorithms to simulate the drone's behavior when faced with obstacles avoidance and cluster flight.
C1  - New York, NY, USA
C3  - Proceedings of the 2021 Drone Systems Engineering and Rapid Simulation and Performance Evaluation: Methods and Tools Proceedings
DA  - 2021///
PY  - 2021
DO  - 10.1145/3444950.3444952
SP  - 36
EP  - 45
PB  - Association for Computing Machinery
SN  - 978-1-4503-8952-5
UR  - https://doi.org/10.1145/3444950.3444952
ER  - 

TY  - CONF
TI  - Supervisor Synthesis in Model-Based Automotive Systems Engineering
AU  - van de Mortel-Fronczak, Joanna M.
AU  - van der Heijden, Martin H. R.
AU  - Huisman, Rudolf G. M.
AU  - Reniers, Michel A.
T3  - ICCPS '14
AB  - It is recognized by various engineering disciplines that models support and speed up the development of systems consisting of numerous closely related computational and physical elements, since they enable extensive and early functional and performance analysis of the designs and allow for control code generation. Model-based engineering is gradually becoming an accepted best practice in several industrial application domains, such as mobile robotics or (autonomous) automotive systems. As reported in literature, more recently, engineering processes based on formal models are increasingly often being introduced in industrial settings because they proved not only to be able to cope with complexity and to reduce time-to-market and development costs, but also to substantially reduce testing effort and improve maintainability. The purpose of this paper is to outline the application of supervisory control synthesis to the design of discrete-event controllers in relation to physical elements, show how it can be integrated in an engineering process and how it can improve the design process of dependable discrete-event controllers. To facilitate the discussion, an automotive industrial case study is used.
C1  - USA
C3  - ICCPS '14: ACM/IEEE 5th International Conference on Cyber-Physical Systems (with CPS Week 2014)
DA  - 2014///
PY  - 2014
DO  - 10.1109/ICCPS.2014.6843722
SP  - 187
EP  - 198
PB  - IEEE Computer Society
SN  - 978-1-4799-4930-4
UR  - https://doi.org/10.1109/ICCPS.2014.6843722
ER  - 

TY  - CONF
TI  - A Model-Based Approach to Modeling a Hybrid Simulation Platform (Work in Progress)
AU  - Akbas, Asli Soyler
AU  - Mykoniatis, Konstantinos
AU  - Angelopoulou, Anastasia
AU  - Karwowski, Waldemar
T3  - DEVS '14
AB  - The availability of large data and immense improvements in technology have extended the modeling capabilities. As the intricacy of the simulated systems has been increasing, challenges in the process of modeling also emerged due to complexities hidden in different levels of the system. The purpose of this paper is to initiate the design of a framework for extrapolating a hybrid simulation model, composed of agent-based and system dynamics models, from its model-based architecture designed using Systems Modeling Language (SysML). The process is recognized as complex adaptive and a software training management system (STMS) is selected to demonstrate the initial research findings. Furthermore, the ongoing efforts to develop the simulation model of STMS, which can support organizations in critical decision making, and requirements and risk management, using a modelbased systems engineering approach.
C1  - San Diego, CA, USA
C3  - Proceedings of the Symposium on Theory of Modeling & Simulation - DEVS Integrative
DA  - 2014///
PY  - 2014
PB  - Society for Computer Simulation International
KW  - SysML
KW  - agent-based simulation
KW  - software training management
KW  - system dynamics
ER  - 

TY  - CONF
TI  - Incremental Queries and Transformations: From Concepts to Industrial Applications
AU  - VarrÃ³, DÃ¡niel
AB  - Model-driven engineering MDE is widely used nowadays in the design of embedded systems, especially in the automotive, avionics or telecommunication domain. Behind the scenes, design and verification tools in these domains frequently exploit advanced model query and transformation techniques to support various rich tool features. The rapid increase in the size and complexity of system models has drawn significant attention to incremental model query and transformation approaches, which enable fast and incremental reactions to model changes caused by systems engineers or automated design steps. In this paper, I overview two open source Eclipse projects, EMF-IncQueryÃ¯ Åºand Viatra, which have been actively used as a basis for developing various academic and industrial tools for critical systems.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 42nd International Conference on SOFSEM 2016: Theory and Practice of Computer Science - Volume 9587
DA  - 2016///
PY  - 2016
DO  - 10.1007/978-3-662-49192-8_5
SP  - 51
EP  - 59
PB  - Springer-Verlag
SN  - 978-3-662-49191-1
UR  - https://doi.org/10.1007/978-3-662-49192-8_5
KW  - Incremental evaluation
KW  - Model queries
KW  - Model transformations
KW  - Reactive programming
KW  - Software tool qualification
ER  - 

TY  - CONF
TI  - Modelling to Safety
AU  - Radjenovic, Alek
T3  - EWSA'05
AB  - In this position paper we outline the challenges that face safety critical systems. We identify the need to shift the validation emphasis from process to product, and state how formal proofs would be of great benefit by providing stronger evidence for safety case arguments. We also argue that a successful solution for the incremental certification problem could bring benefit to all levels of system design. A better understanding of the non-functional behaviour and methods for expressing, embedding into design, and managing properties that play a role in this aspect of safety critical systems are urgently needed. We also speculate that research into trusted components and compositional architectures is vital for the future of safety critical systems design. In partnership with BAE SYSTEMS, Rolls Royce, and QinetiQ, we have developed a framework and an architectural description language that addresses these issues.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 2nd European Conference on Software Architecture
DA  - 2005///
PY  - 2005
DO  - 10.1007/11494713_11
SP  - 162
EP  - 167
PB  - Springer-Verlag
SN  - 3-540-26275-X
UR  - https://doi.org/10.1007/11494713_11
ER  - 

TY  - JOUR
TI  - Thirteen Years of SysML: A Systematic Mapping Study
AU  - Wolny, Sabine
AU  - Mazak, Alexandra
AU  - Carpella, Christine
AU  - Geist, Verena
AU  - Wimmer, Manuel
T2  - Softw. Syst. Model.
AB  - The OMG standard Systems Modeling Language (SysML) has been on the market for about thirteen years. This standard is an extended subset of UML providing a graphical modeling language for designing complex systems by considering software as well as hardware parts. Over the period of thirteen years, many publications have covered various aspects of SysML in different research fields. The aim of this paper is to conduct a systematic mapping study about SysML to identify the different categories of papers, (i) to get an overview of existing research topics and groups, (ii) to identify whether there are any publication trends, and (iii) to uncover possible missing links. We followed the guidelines for conducting a systematic mapping study by Petersen et al. (Inf Softw Technol 64:1â18, 2015) to analyze SysML publications from 2005 to 2017. Our analysis revealed the following main findings: (i) there is a growing scientific interest in SysML in the last years particularly in the research field of Software Engineering, (ii) SysML is mostly used in the design or validation phase, rather than in the implementation phase, (iii) the most commonly used diagram types are the SysML-specific requirement diagram, parametric diagram, and block diagram, together with the activity diagram and state machine diagram known from UML, (iv) SysML is a specific UML profile mostly used in systems engineering; however, the language has to be customized to accommodate domain-specific aspects, (v) related to collaborations for SysML research over the world, there are more individual research groups than large international networks. This study provides a solid basis for classifying existing approaches for SysML. Researchers can use our results (i) for identifying open research issues, (ii) for a better understanding of the state of the art, and (iii) as a reference for finding specific approaches about SysML.
DA  - 2020/01//
PY  - 2020
DO  - 10.1007/s10270-019-00735-y
VL  - 19
IS  - 1
SP  - 111
EP  - 169
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00735-y
KW  - SysML
KW  - Systems engineering
KW  - Systematic mapping study
ER  - 

TY  - JOUR
TI  - SysPEM: Toward a Consistent and Unified System Process Engineering Metamodel
AU  - Jakjoud, Abdeslam
AU  - Zrikem, Maria
AU  - Baron, Claude
AU  - Ayadi, Abderrahmane
T2  - J. Intell. Manuf.
AB  - Industrial companies evolve in a highly competitive environment, their performance depends on their time to market as well as the quality of their products. This situation calls for a delicate optimization of supply chain and manufacturing processes, as a guarantee of the quality of the final system. Due to the fact that these processes are heterogeneous and poly-disciplinary, there is an urgent need for a general consistent model for all systems engineering concepts. Such model has to achieve an equilibrium between covering all key concepts of systems engineering processes and providing a rich language to express the details of these concepts. In this paper, we propose a solution to this problem through defining and validating a system process engineering metamodel inspired from research advances on Software Process Engineering Metamodel and System Modeling Language. The scope of this solution exceeds the definition and description of processes by providing an orchestration mechanism based on aspect oriented programming, in order to animate the execution control and monitoring through non intrusive mechanisms.
DA  - 2016/02//
PY  - 2016
DO  - 10.1007/s10845-014-0886-7
VL  - 27
IS  - 1
SP  - 149
EP  - 166
SN  - 0956-5515
UR  - https://doi.org/10.1007/s10845-014-0886-7
KW  - SysML
KW  - Systems engineering
KW  - Aspect oriented programming
KW  - Model driven engineering
KW  - SPEM
ER  - 

TY  - CONF
TI  - Reliable Supervisory Coordination of Stochastic Communicating Processes with Data
AU  - Markovski, J.
T3  - SAC '13
AB  - We develop a process theory that can model supervisory control loops with data observation for stochastic discrete-event systems. Supervisory controllers safely coordinate distributed components of complex systems by observing their high-level discrete(-event) behavior and making a decision on allowed activities. Models of such controllers can be automatically synthesized based on the formal models of the system components and a formalization of the coordination requirements. We employ generic communication primitives to distinguish between the different flows of information, i.e., observation and supervision, whereas the coordination requirements are compactly expressed in terms of data assignments. The stochastic behavior can be employed for performance or reliability analysis, bringing higher confidence in the control design. We illustrate the framework by remodeling an industrial case study involving safe and reliable coordination of multiple maintenance procedures of a printing process of a high-tech printer.
C1  - New York, NY, USA
C3  - Proceedings of the 28th Annual ACM Symposium on Applied Computing
DA  - 2013///
PY  - 2013
DO  - 10.1145/2480362.2480616
SP  - 1347
EP  - 1354
PB  - Association for Computing Machinery
SN  - 978-1-4503-1656-9
UR  - https://doi.org/10.1145/2480362.2480616
ER  - 

TY  - CONF
TI  - An Integrated Conceptual Modeling Framework for Simulation: Linking Simulation Modeling to the Systems Engineering Process
AU  - van der Zee, Durk-Jouke
T3  - WSC '12
AB  - Use of simulation tools for industrial projects implies a need for aligning the engineering process and simulation modeling activities. Alignment of activities builds on the definition of a conceptual model, detailing modeling objectives, model contents, inputs and outputs, thereby relying on a project problem definition and candidate solutions. Modeling frameworks assist the analyst in defining conceptual models by identifying relevant activities to undertake, as well as suggesting good practices, and supportive methods. Surprisingly, current frameworks do not acknowledge the need for explicitly linking the set-up of a conceptual model to the engineering process. Hence, both project efficiency and effectiveness may be hurt. To address this gap, we propose an integrated conceptual modeling framework, which is tailored towards simulation use for logistic analysis purposes. Relevance of the integrated framework for project success is illustrated by a case example.
C3  - Proceedings of the Winter Simulation Conference
DA  - 2012///
PY  - 2012
PB  - Winter Simulation Conference
ER  - 

TY  - CONF
TI  - Systems Engineering of Cyber-Physical Systems Education Program
AU  - Wade, Jon
AU  - Cohen, Roberta
AU  - Blackburn, Mark
AU  - Hole, Eirik
AU  - Bowen, Nicholas
T3  - WESE'15
AB  - Cyber-physical systems (CPS) are increasingly relied on to provide functionality and value to products, systems, and infrastructure in sectors including transportation (aviation, automotive, rail, and marine), health care, manufacturing, and electrical power generation and distribution. [1] In this paper, we describe the critical importance of systems engineering skills for the engineers of cyber-physical systems. We describe the state of embedded/CPS development projects and the resulting educational challenge and opportunities. We then describe the process, principles, concept and content of a Systems Engineering of Cyber-Physical Systems (SE of CPS) program that we have developed to address these needs. Finally, we present the current and desired future state for the program.
C1  - New York, NY, USA
C3  - Proceedings of the WESE'15: Workshop on Embedded and Cyber-Physical Systems Education
DA  - 2015///
PY  - 2015
DO  - 10.1145/2832920.2832927
PB  - Association for Computing Machinery
SN  - 978-1-4503-3897-4
UR  - https://doi.org/10.1145/2832920.2832927
KW  - cyber-physical systems
KW  - education
KW  - Systems engineering
KW  - project-based learning
ER  - 

TY  - CONF
TI  - Model Based Architecting and Construction of Embedded Systems (ACES-MB 2010)
AU  - Van Baelen, Stefan
AU  - Ober, Iulian
AU  - Espinoza, Huascar
AU  - Weigert, Thomas
AU  - Ober, Ileana
AU  - GÃ©rard, SÃ©bastien
T3  - MODELS'10
AB  - The third ACES-MB workshop brought together researchers and practitioners interested in model-based software engineering for real-time embedded systems, with a particular focus on the use of models for architecture description and domain-specific design, and for capturing non-functional constraints. Twelve presenters proposed contributions on metaheuristic search techniques for UML, modelling languages and mappings, model based verification and validation, software synthesis, and embedded systems product lines. In addition, a lively group discussion tackled these issues in further detail. This report presents an overview of the presentations and fruitful discussions that took place during the ACES-MB 2010 workshop.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 2010 International Conference on Models in Software Engineering
DA  - 2010///
PY  - 2010
SP  - 70
EP  - 74
PB  - Springer-Verlag
SN  - 978-3-642-21209-3
ER  - 

TY  - CONF
TI  - ModelicaML Value Bindings for Automated Model Composition
AU  - Schamai, Wladimir
AU  - Fritzson, Peter
AU  - Paredis, Christiaan J. J.
AU  - Helle, Philipp
T3  - TMS/DEVS '12
AB  - Virtual Verification of Designs against Requirements (vVDR) is a method for model-based system design verification. This paper discusses enhancements to the vVDR method and its implementation in ModelicaML to further improve the support of system verification activities by automation. In the vVDR method there are different kinds of models that are created independently. However, they will become dependent and need to be related to each other in some concrete verification context. The aim is to reduce modeling errors and modeling efforts by automatically composing verification models from their constituting sub-models based on data dependencies that are defined using so-called mediators, which allow the expression of data dependencies between models without affecting, i.e. changing, the models themselves.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2012 Symposium on Theory of Modeling and Simulation - DEVS Integrative M&S Symposium
DA  - 2012///
PY  - 2012
PB  - Society for Computer Simulation International
SN  - 978-1-61839-786-7
KW  - modelica
KW  - ModelicaML
KW  - design verification
KW  - model composition
KW  - model generation
ER  - 

TY  - JOUR
TI  - Model-Based System Analysis Using Chi and Uppaal: An Industrial Case Study
AU  - Braspenning, N. C. W. M.
AU  - Bortnik, E. M.
AU  - van de Mortel-Fronczak, J. M.
AU  - Rooda, J. E.
T2  - Comput. Ind.
AB  - New methods and techniques are needed to reduce the integration and test effort (lead time, costs, resources) in the development of high-tech multi-disciplinary systems. To facilitate this effort reduction, a method called model-based integration and testing is being developed. The method allows to integrate formal and executable models of system components that are not yet physically realized with available realizations of other components. The combination of models and realizations is then used for early analysis of the integrated system by means of validation, verification, and testing. The analysis enables early detection and prevention of problems that would otherwise occur during real integration, resulting in a significant reduction of effort invested in the real integration and testing phases. This paper illustrates the application of the method to a realistic industrial case study, focusing on verification of the models obtained. We show how a system model has been developed for model-based integration and testing in the timed process algebra @g (Chi), and how certain behavioral properties of this model have been verified by the Uppaal model checker.
DA  - 2008/01//
PY  - 2008
DO  - 10.1016/j.compind.2007.06.002
VL  - 59
IS  - 1
SP  - 41
EP  - 54
SN  - 0166-3615
UR  - https://doi.org/10.1016/j.compind.2007.06.002
KW  - Industrial case study
KW  - Model checking
KW  - Chi
KW  - Model-based integration and testing
KW  - Uppaal translation
ER  - 

TY  - JOUR
TI  - Development of a Complex Geospatial/RF Design Model in Support of Service Volume Engineering Design
AU  - Boci, Erton S.
AU  - Sarkani, Shahram
AU  - Mazzuchi, Thomas A.
T2  - Int. J. Interdiscip. Telecommun. Netw.
AB  - Today's National Airspace System NAS is managed using an aging surveillance radar system. The radar technology is not adequate to sustain the support of aviation growth and cannot be adapted to use 21st century technologies Therefore, FAA has begun to implement the Next Generation Air Transportation System NextGen that would transform today's aviation and ensure increased safety and capacity. The first building block of the NextGen system is the implementation of the Automatic Dependent Surveillance-Broadcast ADS-B system. One of the most important design aspects of the ADS-B program is the design of the terrestrial radio station infrastructure. This design determines the layout of the terrestrial radio stations throughout the United States and is optimized to meet system performance, safety and security. Designing this infrastructure to meet system requirements is at the core of Service Volume SV Engineering. In this paper, the authors present a complex Geospatial/RF design ER Development model-based ADS-B SV Engineering design that captures radio sites layout and configuration parameters. CORE software is selected to implement the model-based SV Engineering environment.
DA  - 2011/01//
PY  - 2011
DO  - 10.4018/jitn.2011010105
VL  - 3
IS  - 1
SP  - 56
EP  - 67
SN  - 1941-8663
UR  - https://doi.org/10.4018/jitn.2011010105
KW  - Automatic Dependent Surveillance-Broadcast ADS-B System
KW  - CORE Software
KW  - Geospatial
KW  - NextGen
KW  - RF Design
KW  - Service Volume
ER  - 

TY  - CONF
TI  - Enabling Reactive Streams in HLA-Based Simulations through a Model-Driven Solution
AU  - D'Ambrogio, Andrea
AU  - Falcone, Alberto
AU  - Garro, Alfredo
AU  - Giglio, Andrea
T3  - DS-RT '19
AB  - Modern systems are exposing an ever increasing degree of complexity also due to the heterogeneity of the involved components. Distributed simulation is widely recognized as an effective tool to carry out verification and validation activities for heterogeneous and complex systems. Unfortunately, the use of distributed simulation frameworks and related implementation technologies require a proper modeling and simulation know-how, as well as a significant effort and software development skills. As a result, distributed simulation is not typically addressed by systems engineers who do not have the required expertise or background. The MONADS model-driven method has been introduced to overcome such limitations and provide systems engineers with the ability to properly carry out simulation-based verification and validation activities. The method specifically addresses the HLA (High Level Architecture) distributed simulation framework and introduces an automated approach to generate a significant portion of the HLA code from system models specified in SysML, the standard modeling language in the systems engineering field. The automatically obtained code is then to be finalized by a manual programming activity. This paper contributes to make easier and further reduce the effort of such a manual activity by integrating the reactive features of the RxHLA framework into the MONADS method. This integration enables the use of streams to effectively manage HLA-based asynchronous interactions. The paper describes the technical details of the various strategies that can be used to integrate RxHLA into the MONADS method, thus providing a significant degree of flexibility to MONADS users.
C3  - Proceedings of the 23rd IEEE/ACM International Symposium on Distributed Simulation and Real Time Applications
DA  - 2019///
PY  - 2019
SP  - 17
EP  - 24
PB  - IEEE Press
SN  - 978-1-72812-923-5
KW  - model-driven systems engineering
KW  - distributed simulation
KW  - high level architecture (HLA)
KW  - reactive programming
ER  - 

TY  - CONF
TI  - Software Systems Engineering with Model-Based Design
AU  - Davey, Christopher
AU  - Friedman, Jon
T3  - SEAS '07
AB  - Today's original equipment manufacturers (OEMs) and suppliers face the seemingly conflicting goals of reducing development time while improving quality, and reducing system complexity while delivering technical innovations. To meet these challenges, design engineers are increasingly reliant on embedded software solutions to deliver innovative functionality. Luxury vehicles produced today contain as many as 90 embedded electronic control units (ECUs) that use four different network protocols and execute binary code generated from over 6 million lines of source code (MLOC). Even economy vehicles can contain as many as 50 ECUs that deliver mission-critical, distributed, embedded software systems.
C1  - USA
C3  - Proceedings of the 4th International Workshop on Software Engineering for Automotive Systems
DA  - 2007///
PY  - 2007
DO  - 10.1109/SEAS.2007.9
SP  - 7
PB  - IEEE Computer Society
SN  - 0-7695-2968-2
UR  - https://doi.org/10.1109/SEAS.2007.9
ER  - 

TY  - CONF
TI  - Approximate Reliability Algebra for Architecture Optimization
AU  - Helle, Philipp
AU  - Masin, Michael
AU  - Greenberg, Lev
T3  - SAFECOMP'12
AB  - A more recent trend in Systems Engineering is architecture optimization. Evermore complex aircraft systems make it harder and harder to determine, with reasonable time and effort, optimal architectures by traditional trial-and-error trade off studies. This can be alleviated by architecture optimization techniques where System Engineers only defines boundaries for the design space and then an optimization solver finds the optimal solution automatically. If safety and reliability requirements are not considered during automatic architecture generation, given the high impact of safety on systems design, there is a high probability that the optimized architectures are not valid. Therefore, it is critical to model and take into account reliability and safety requirements during Design Space Exploration in early architectural stages.Traditional reliability calculations are both not denotational and not linear which significantly narrows possible optimization techniques. In this work we suggest a Mixed Integer Linear Programming (MILP) formulation of the reliability calculus with the following features: (1) The order of magnitude of reliability calculations is correct, (2) There exists an explicit theoretical bound on potential "optimism" of the proposed algebra, (3) For a pool of representative benchmark problems the proposed approximation provides highly accurate results compared to the classical reliability calculations. This paper presents an approximate algebra for the safety analysis problem with explicit bounds and provides representative examples of its application.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 31st International Conference on Computer Safety, Reliability, and Security
DA  - 2012///
PY  - 2012
DO  - 10.1007/978-3-642-33678-2_24
SP  - 279
EP  - 290
PB  - Springer-Verlag
SN  - 978-3-642-33677-5
UR  - https://doi.org/10.1007/978-3-642-33678-2_24
KW  - architecture optimization
KW  - mixed integer linear programming
KW  - model-based safety analysis
KW  - reliability evaluation
ER  - 

TY  - CONF
TI  - Model-Driven Distributed Simulation Engineering
AU  - Bocciarelli, Paolo
AU  - D'Ambrogio, Andrea
AU  - Giglio, Andrea
AU  - Paglia, Emiliano
T3  - WSC '19
AB  - Simulation-based analysis is widely recognized as an effective technique to support verification and validation of complex systems throughout their lifecycle. The inherently distributed nature of complex systems makes the use of distributed simulation approaches a natural fit. However, the development of a distributed simulation is by itself a challenging task in terms of effort and required know-how. This tutorial introduces an approach that applies highly automated model-driven engineering principles and standards to ease the development of distributed simulations. The proposed approach is framed around the development process defined by the DSEEP (Distributed Simulation Engineering and Execution Process) standard, as applied to distributed simulations based on the HLA (High Level Architecture), and is focused on a chain of automated model transformations. A case study is used in the tutorial to illustrate an example application of the proposed model-driven approach to the development of an HLA-based distributed simulation of a space system.
C3  - Proceedings of the Winter Simulation Conference
DA  - 2019///
PY  - 2019
SP  - 75
EP  - 89
PB  - IEEE Press
SN  - 978-1-72813-283-9
ER  - 

TY  - CONF
TI  - A SysML Extension for Security Analysis of Industrial Control Systems
AU  - Lemaire, Laurens
AU  - Lapon, Jorn
AU  - De Decker, Bart
AU  - Naessens, Vincent
T3  - ICS-CSR 2014
AB  - The security of Industrial Control Systems (ICS) has become an important topic. Recent attacks have shown that inadequately protecting control systems could have disastrous consequences for society.This paper presents an extension for the Systems Modeling Language (SysML), allowing for the extraction of vulnerabilities from an industrial control system model. After a control system is modeled in SysML, the model is converted into input for a formal reasoning tool. This tool contains a logic theory which is used for the vulnerability extraction. The rules in this logic theory are inferred from the ICS-CERT vulnerability database and ICS security standards. Once the vulnerabilities have been extracted, they are included in the SysML diagrams of the model.The modeling approach allows the user to quickly see which changes to the system get rid of the reported vulnerabilities. It is also possible to mark certain components as compromised to see the consequences of attacks on these components for system security as a whole. The resulting analysis can be used to strengthen the security of the control system.
C1  - Swindon, GBR
C3  - Proceedings of the 2nd International Symposium on ICS & SCADA Cyber Security Research 2014
DA  - 2014///
PY  - 2014
DO  - 10.14236/ewic/ics-csr2014.1
SP  - 1
EP  - 9
PB  - BCS
SN  - 978-1-78017-286-6
UR  - https://doi.org/10.14236/ewic/ics-csr2014.1
KW  - SysML
KW  - Industrial control systems security
ER  - 

TY  - CONF
TI  - Multiformalism, Multiresolution, Multiscale Modeling
AU  - Dandashi, Fatma
AU  - Lakshminarayan, Vinay
AU  - Schult, Nancy
T3  - WSC '15
AB  - The modeling and simulation (M&amp;S) landscape for systems engineers is complex. This complexity is due to a variety of factors including the diversity of system components over a range of domains which are modeled at multiple scales using varied modeling formalisms. There is a need to chain system models developed using varying formalisms, resolutions or scales. An ideal Multiformalism, Multiresolution, Multiscale Modeling (M4) environment would provide a singular (or small set of) modeling formalisms from which to derive representations (models) across formalism, resolution and scale. This paper describes a research activity to translate Systems Modeling Language (SysML) models to the Joint Communications Simulation System (JCSS). A deliverable from this activity will aid the Department of Defense (DoD) in the design and analysis of the Joint Information Environment (JIE).
C3  - Proceedings of the 2015 Winter Simulation Conference
DA  - 2015///
PY  - 2015
SP  - 2622
EP  - 2631
PB  - IEEE Press
SN  - 978-1-4673-9741-4
ER  - 

TY  - CHAP
TI  - Steps for Data Exchange between Real Environment and Virtual Simulation Environment
AU  - Ferro, Rodrigo
AU  - Sajjad, Hamid
AU  - Eduardo Cooper Ordonez, Robert
T2  - 2021 The 13th International Conference on Computer Modeling and Simulation
AB  - Recently the technological evolution resulting from the fourth industrial revolution, especially with the advancement of the internet of things and bigdata, coupled with the change in consumer behavior, are forcing companies to improve the efficiency of production systems. Now, companies must mass produce to keep costs low, but they must also be flexible and offer a wide variety of products. Thus, companies are increasingly using computational tools to improve decision making, especially with the application of simulation and digitization of production systems. However, online data collection is presenting itself as a solution to decrease the time for the development of simulation models and, thus, speed up decision making. In this way, this work shows the steps required for online data exchange between a real system and a virtual production system. For this, a prototype will be used that demonstrates these basic concepts.
CY  - New York, NY, USA
DA  - 2021///
PY  - 2021
SP  - 180
EP  - 184
PB  - Association for Computing Machinery
SN  - 978-1-4503-8979-2
UR  - https://doi.org/10.1145/3474963.3474988
ER  - 

TY  - CHAP
TI  - Papyrus for Gamers, Let's Play Modeling
AU  - Bucchiarone, Antonio
AU  - Savary-Leblanc, Maxime
AU  - Pallec, Xavier Le
AU  - Bruel, Jean-Michel
AU  - Cicchetti, Antonio
AU  - Cabot, Jordi
AU  - Gerard, Sebastien
AU  - Aslam, Hamna
AU  - Marconi, Annapaola
AU  - Perillo, Mirko
T2  - Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
AB  - Gamification refers to the exploitation of gaming mechanisms for serious purposes, like learning hard-to-train skills such as modeling.We present a gamified version of Papyrus, the well-known open source modeling tool. Instructors can use it to easily create new modeling games (including the tasks, solutions, levels, rewards...) to help students learning any specific modeling aspect.The evaluation of the game components is delegated to the GDF gamification framework that bidirectionally communicates with the Papyrus core via API calls. Our gamified Papyrus includes as well a game dashboard component implemented with HTML/CSS/Javascript and displayed thanks to the integration of a web browser embedded in an Eclipse view.
CY  - New York, NY, USA
DA  - 2020///
PY  - 2020
PB  - Association for Computing Machinery
SN  - 978-1-4503-8135-2
UR  - https://doi.org/10.1145/3417990.3422002
ER  - 

TY  - CONF
TI  - Towards a Body of Knowledge for Model-Based Software Engineering
AU  - Ciccozzi, Federico
AU  - Famelis, Michalis
AU  - Kappel, Gerti
AU  - Lambers, Leen
AU  - Mosser, Sebastien
AU  - Paige, Richard F.
AU  - Pierantonio, Alfonso
AU  - Rensink, Arend
AU  - Salay, Rick
AU  - Taentzer, Gabi
AU  - Vallecillo, Antonio
AU  - Wimmer, Manuel
T3  - MODELS '18
AB  - Model-based Software Engineering (MBSE) is now accepted as a Software Engineering (SE) discipline and is being taught as part of more general SE curricula. However, an agreed core of concepts, mechanisms and practices â which constitutes the Body of Knowledge of a discipline â has not been captured anywhere, and is only partially covered by the SE Body of Knowledge (SWEBOK). With the goals of characterizing the contents of the MBSE discipline, promoting a consistent view of it worldwide, clarifying its scope with regard to other SE disciplines, and defining a foundation for a curriculum development on MBSE, this paper provides a proposal for an extension of the contents of SWEBOK with the set of fundamental concepts, terms and mechanisms that should constitute the MBSE Body of Knowledge.
C1  - New York, NY, USA
C3  - Proceedings of the 21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
DA  - 2018///
PY  - 2018
DO  - 10.1145/3270112.3270121
SP  - 82
EP  - 89
PB  - Association for Computing Machinery
SN  - 978-1-4503-5965-8
UR  - https://doi.org/10.1145/3270112.3270121
KW  - model-based software engineering
KW  - body of knowledge
ER  - 

TY  - JOUR
TI  - An Integrated Semantics for Reasoning about SysML Design Models Using Refinement
AU  - Lima, Lucas
AU  - Miyazawa, Alvaro
AU  - Cavalcanti, Ana
AU  - CornÃ©lio, MÃ¡rcio
AU  - Iyoda, Juliano
AU  - Sampaio, Augusto
AU  - Hains, Ralph
AU  - Larkham, Adrian
AU  - Lewis, Vaughan
T2  - Softw. Syst. Model.
AB  - SysML is a variant of UML for systems design. Several formalisations of SysML (and UML) are available. Our work is distinctive in two ways: a semantics for refinement and for a representative collection of elements from the UML4SysML profile (blocks, state machines, activities, and interactions) used in combination. We provide a means to analyse and refine design models specified using SysML. This facilitates the discovery of problems earlier in the system development lifecycle, reducing time, and costs of production. Here, we describe our semantics, which is defined using a state-rich process algebra and implemented in a tool for automatic generation of formal models. We also show how the semantics can be used for refinement-based analysis and development. Our case study is a leadership-election protocol, a critical component of an industrial application. Our major contribution is a framework for reasoning using refinement about systems specified by collections of SysML diagrams.
DA  - 2017/07//
PY  - 2017
DO  - 10.1007/s10270-015-0492-y
VL  - 16
IS  - 3
SP  - 875
EP  - 902
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-015-0492-y
KW  - Automation
KW  - SysML
KW  - CML
KW  - Process algebra
KW  - Refinement
KW  - Semantics
ER  - 

TY  - CONF
TI  - Traceability Management of GRL and SysML Models
AU  - Anda, Amal Ahmed
AU  - Amyot, Daniel
T3  - SAM '20
AB  - Emerging socio-cyber-physical systems integrate social concerns, often captured with goal models, with complex systems, where structure and behavior are often captured in SysML. Traceability between these two types of models is important to reason about consistency, completeness, and the impact of modifications. However, managing traceability during the co-evolution of these two views is not well supported as SysML does not provide sophisticated goal-modeling capabilities out of the box. This paper proposes an approach where the Goal-oriented Requirement Language (GRL) is used to capture and analyze social concerns as a supplement to SysML models, and where traceability is handled via a third-party requirements management system, namely IBM Rational DOORS. The approach is supported with tools automating the import in DOORS of relevant parts of the GRL and SysML models from their respective modeling environments (jUCMNav and No Magic's Cameo Systems Modeler). A traceability information model is proposed to connect elements from GRL and SysML models in a way that enables automating important completeness and consistency checks, even as the models evolve. The approach is illustrated and evaluated with a Smart Home example, with a discussion of benefits and limitations.
C1  - New York, NY, USA
C3  - Proceedings of the 12th System Analysis and Modelling Conference
DA  - 2020///
PY  - 2020
DO  - 10.1145/3419804.3420272
SP  - 117
EP  - 126
PB  - Association for Computing Machinery
SN  - 978-1-4503-8140-6
UR  - https://doi.org/10.1145/3419804.3420272
KW  - SysML
KW  - traceability
KW  - Change management
KW  - consistency
KW  - Goal-oriented Requirement Language
KW  - User Requirements Notation
ER  - 

TY  - JOUR
TI  - A Process-Theoretic Approach to Supervisory Coordination under Partial Observation
AU  - Markovski, Jasen
T2  - Sci. Comput. Program.
AB  - We propose a synthesis-centric model-based engineering framework for safe and nonblocking coordination of distributed components of complex high-tech systems. The framework is based on a process theory geared towards supervisory coordination and control of nondeterministic discrete-event systems under partial observation. Supervisory control theory deals with automated synthesis of provably correct models of supervisory controllers based on formal models of the system components and a formalization of the coordination requirements. Based on the obtained models, code generation can be used to implement the supervisory controllers in software, on a PLC, or an embedded (micro)processor. The proposed theory employs communication actions to distinguish between the different flows of information, i.e., observation of the system behavior and supervision by means of forwarding control signals. In addition, we consider the case of partial observation, where some behavior of the unsupervised system is hidden from the supervisory controller, e.g., due to lack of sensory information or internal inter-component communication. We revisit the notion of partial observation and treat it as a property of the supervisor, instead of conditioning the control requirements, which is a standard approach. By employing a behavior relation termed partial bisimulation, we are able to succinctly and transparently capture the notions of controllability and partial observability. We propose a model-based engineering framework for coordination of complex systems.The framework relies on a process theory geared towards supervisory coordination.We defined controllability by means of the partial bisimulation preorder.We characterize event history-based and data observer-based supervisors.The framework is employed for coordination of a printing process function.
DA  - 2016/01//
PY  - 2016
DO  - 10.1016/j.scico.2014.07.002
VL  - 115
IS  - C
SP  - 127
EP  - 145
SN  - 0167-6423
UR  - https://doi.org/10.1016/j.scico.2014.07.002
KW  - Controllability
KW  - Partial bisimulation
KW  - Process algebra
KW  - Partial observability
KW  - Supervisory control theory
ER  - 

TY  - CONF
TI  - Integrating Design and Runtime Variability Support into a System ADL
AU  - Ludwig, Marie
AU  - Farcet, Nicolas
AU  - Babau, Jean-Philippe
AU  - Champeau, JoÃ«l
T3  - ECMFA'11
AB  - As the complexity of modern large systems or System of Systems increases, it becomes challenging to capture their whole dimension and to identify their key aspects. Architecture models provide a legible description of the system, and help describing its properties in a representation shared and understood by most stakeholders. In our case, we intend to evaluate system architectures through model execution. Since evolutionary design and configuration are key challenges of such systems, variability needs a way to be expressed in architecture models. Variability can be solved either at design time (derive a system from the family), or at runtime (reconfigure the system). This paper presents our experience in integrating variability aspects in a system architecture description Domain-Specific Language.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 7th European Conference on Modelling Foundations and Applications
DA  - 2011///
PY  - 2011
SP  - 270
EP  - 281
PB  - Springer-Verlag
SN  - 978-3-642-21469-1
KW  - variability
KW  - systems of systems
KW  - architecture modelling
ER  - 

TY  - CONF
TI  - Model-Based Design for CPS with Learning-Enabled Components
AU  - Hartsell, Charles
AU  - Mahadevan, Nagabhushan
AU  - Ramakrishna, Shreyas
AU  - Dubey, Abhishek
AU  - Bapty, Theodore
AU  - Johnson, Taylor
AU  - Koutsoukos, Xenofon
AU  - Sztipanovits, Janos
AU  - Karsai, Gabor
T3  - DESTION '19
AB  - Recent advances in machine learning led to the appearance of Learning-Enabled Components (LECs) in Cyber-Physical Systems. LECs are being evaluated and used for various, complex functions including perception and control. However, very little tool support is available for design automation in such systems. This paper introduces an integrated toolchain that supports the architectural modeling of CPS with LECs, but also has extensive support for the engineering and integration of LECs, including support for training data collection, LEC training, LEC evaluation and verification, and system software deployment. Additionally, the toolsuite supports the modeling and analysis of safety cases - a critical part of the engineering process for mission and safety critical systems.
C1  - New York, NY, USA
C3  - Proceedings of the Workshop on Design Automation for CPS and IoT
DA  - 2019///
PY  - 2019
DO  - 10.1145/3313151.3313166
SP  - 1
EP  - 9
PB  - Association for Computing Machinery
SN  - 978-1-4503-6699-1
UR  - https://doi.org/10.1145/3313151.3313166
KW  - cyber physical systems
KW  - machine learning
KW  - model based design
ER  - 

TY  - JOUR
TI  - Multi-Scale Approach from Mechatronic to Cyber-Physical Systems for the Design of Manufacturing Systems
AU  - Penas, Olivia
AU  - Plateaux, Rgis
AU  - Patalano, Stanislao
AU  - Hammadi, Moncef
T2  - Comput. Ind.
AB  - Recent advances in manufacturing industry, and notably in the Industry 4.0 context, promote the development of CPSs and consequently give rise to a number of issues to be solved. The present paper describes the context of the extension of mechatronic systems to cyber-physical ones, firstly by highlighting their similarities and differences, and then by underlining the current needs for CPSs in the manufacturing sector. Then, the paper presents the main research issues related to CPS design and, in particular, the needs for an integrated and multi-scale designing approach to prevent conflicts across different design domains early enough within the CPS development process. To this aim, the impact of the extension from mechatronic to Cyber-Physical Systems on their design is examined through a set of existing related modelling techniques. The multi-scalability requirement of these techniques is firstly described, concerning external/internal interactions, process control, behaviour simulation, representation of topological relationships and interoperability through a multi-agent platform, and then applied to the case study of a tablets manufacturing process. Finally, the proposed holistic description of such a multi-scale manufacturing CPS allows to outline the main characteristics of a modelling-simulation platform, able notably to bridge the semantic gaps existing between the different designing disciplines and specialised domains.
DA  - 2017/04//
PY  - 2017
DO  - 10.1016/j.compind.2016.12.001
VL  - 86
IS  - C
SP  - 52
EP  - 69
SN  - 0166-3615
UR  - https://doi.org/10.1016/j.compind.2016.12.001
KW  - CPS design
KW  - Manufacturing systems
KW  - Mechatronic design
KW  - Multi-scalability
ER  - 

TY  - CONF
TI  - Tools for Model-Based Security Engineering: Models vs. Code
AU  - JÃ¼rjens, Jan
AU  - Yu, Yijun
T3  - ASE '07
AB  - We present tools to support model-based security engineering at both the model and the code level. In the approach supported by these tools, one firstly specifies the security-critical part of the system (e.g. a crypto protocol) using the UML security extension UMLsec. The models are automatically verified for security properties using automated theorem provers. These are implemented within a framework that supports implementing verification routines, based on XMI output of the diagrams from UML CASE tools. Advanced users can use this open-source framework to implement verification routines for the constraints of self-defined security requirementIn a second step, one verifies that security-critical parts of the model are correctly implemented in the code (which might be a legacy implementation), and applies security hardening transformations where that is not the case. This is supported by tools that (1) establish traceability through refactoring scripts and (2) modularize security hardening advices through aspect-oriented programming. The proposed method has been applied to an open-source implementation of a cryptographic protocol implementation (Jessie) in Java to build up traceability mappings and security aspects. In that application, we found a security weakness which could be fixed using our approach. The resulting refactoring scripts and security aspects have found reusability in the Java Secure Socket Extension (JSSE) library
C1  - New York, NY, USA
C3  - Proceedings of the Twenty-Second IEEE/ACM International Conference on Automated Software Engineering
DA  - 2007///
PY  - 2007
DO  - 10.1145/1321631.1321736
SP  - 545
EP  - 546
PB  - Association for Computing Machinery
SN  - 978-1-59593-882-4
UR  - https://doi.org/10.1145/1321631.1321736
KW  - UML
KW  - model-based software engineering
KW  - refactoring
KW  - code analysis
KW  - security
KW  - security hardening
KW  - verification framework
ER  - 

TY  - JOUR
TI  - Testing Self-Healing Cyber-Physical Systems under Uncertainty: A Fragility-Oriented Approach
AU  - Ma, Tao
AU  - Ali, Shaukat
AU  - Yue, Tao
AU  - Elaasar, Maged
T2  - Software Quality Journal
AB  - As an essential feature of smart cyber-physical systems (CPSs), self-healing behaviors play a major role in maintaining the normality of CPSs in the presence of faults and uncertainties. It is important to test whether self-healing behaviors can correctly heal faults under uncertainties to ensure their reliability. However, the autonomy of self-healing behaviors and impact of uncertainties make it challenging to conduct such testing. To this end, we devise a fragility-oriented testing approach, which is comprised of two novel algorithms: fragility-oriented testing (FOT) and uncertainty policy optimization (UPO). The two algorithms utilize the fragility, obtained from test executions, to learn the optimal policies for invoking operations and introducing uncertainties, respectively, to effectively detect faults. We evaluated their performance by comparing them against a coverage-oriented testing (COT) algorithm and a random uncertainty generation method (R). The evaluation results showed that the fault detection ability of FOT+UPO was significantly higher than the ones of FOT+R, COT+UPO, and COT+R, in 73 out of 81 cases. In the 73 cases, FOT+UPO detected more than 70% of faults, while the others detected 17% of faults, at the most.
DA  - 2019/06//
PY  - 2019
DO  - 10.1007/s11219-018-9437-3
VL  - 27
IS  - 2
SP  - 615
EP  - 649
SN  - 0963-9314
UR  - https://doi.org/10.1007/s11219-018-9437-3
KW  - Cyber-physical systems
KW  - Uncertainty
KW  - Model execution
KW  - Reinforcement learning
KW  - Self-healing
ER  - 

TY  - CONF
TI  - An Approach to Integration of Complex Systems: The SAVI Virtual Integration Process
AU  - Ward, Donald T.
AU  - Redman, David A.
AU  - Lewis, Bruce A.
T3  - HILT '13
AB  - The SAVI approach to integration embodies three fundamental concepts: (1) an architecture-centric emphasis (wrapped around an annotated architectural model with analyses carried out at the system level after modifications); (2) a component-based decomposition of elements of the system that support a building block approach; and (3) a unique level of consistency checking to assure compatibility for the physical and logical integration through ana "single truth" across the multi-domain model set. Thus, this unique architectural model implements the SAVI mantra of "integrate, analyze â then build" to address a range of virtual integration issues. Careful safeguards to protect the integrity of intellectual property for each member of the development team are provided through the SAVI Model Repository and Data Exchange Layer (SMR/DEL). These two core information-sharing elements of the VIP will eventually depend heavily on standards-based (likely ISO 10303-239) information exchange and the SAVI team has taken steps recently to cooperate with global collaborators, both in the United States and in Europe in this type of information exchange. This sort of standards-based data exchange also offers considerable promise for protection of sensitive information within a system development with competing suppliers. The paper describes how multiple architectural definition languages (specifically SysML and AADL) have been utilized in developing the core of this model-based analysis approach. The objective is to exploit strengths of both these languages while maintaining capability to translate between both variations of architectural models. The primary means of accomplishing this two-way translation is an extension of the translator generated by Cofer, et al, for the DARPA META program. This translator currently operates in a two-way sense (between SysML and AADL) only upon a rather limited subset of SysML capabilities but the SAVI team expects to see this two-way capability broadened with each incremental development phase of the VIP. Extensive use of recent new annexes for AADL, notably the Error Model Annex, has been a means of automating system safety analysis tools (like Functional Hazard Assessments, Failure Modes and Effects Analyses, and Fault Tree Analyses) that underpin broader System Safety Analysis.Another characteristic embedded in the SAVI VIP is a comprehensive form of consistency checking designed to evaluate integration of components and alterations of such components. At least six types of consistency are considered in a SAVI-compliant integration effort: (1) interface consistency, (2) compositional consistency, (3) constraint consistency, (4) behavioral consistency, (5) version consistency, and (6) verification consistency. Moreover, whenever a modification is made to any component, not only are these elements of consistency to be addressed, the effect of the modification on the entire system must be quantitatively analyzed using the SAVI annotated architectural model for the modified system. Each system considered under the SAVI paradigm is analyzed for system properties required to meet its performance specification using this architectural approach. The AADL portion of the architectural model structure allows quantitative evaluation of the system impact of each change made to the substructure. In this sense, the SAVI approach facilitates quantitative trade studies aimed at the system behavior during each iteration in the design loop.
C1  - New York, NY, USA
C3  - Proceedings of the 2013 ACM SIGAda Annual Conference on High Integrity Language Technology
DA  - 2013///
PY  - 2013
DO  - 10.1145/2527269.2527275
SP  - 43
EP  - 46
PB  - Association for Computing Machinery
SN  - 978-1-4503-2467-0
UR  - https://doi.org/10.1145/2527269.2527275
KW  - consistency checking
KW  - annotated architectural model
KW  - virtual integration
ER  - 

TY  - JOUR
TI  - An Approach to Integration of Complex Systems: The SAVI Virtual Integration Process
AU  - Ward, Donald T.
AU  - Redman, David A.
AU  - Lewis, Bruce A.
T2  - Ada Lett.
AB  - The SAVI approach to integration embodies three fundamental concepts: (1) an architecture-centric emphasis (wrapped around an annotated architectural model with analyses carried out at the system level after modifications); (2) a component-based decomposition of elements of the system that support a building block approach; and (3) a unique level of consistency checking to assure compatibility for the physical and logical integration through ana "single truth" across the multi-domain model set. Thus, this unique architectural model implements the SAVI mantra of "integrate, analyze â then build" to address a range of virtual integration issues. Careful safeguards to protect the integrity of intellectual property for each member of the development team are provided through the SAVI Model Repository and Data Exchange Layer (SMR/DEL). These two core information-sharing elements of the VIP will eventually depend heavily on standards-based (likely ISO 10303-239) information exchange and the SAVI team has taken steps recently to cooperate with global collaborators, both in the United States and in Europe in this type of information exchange. This sort of standards-based data exchange also offers considerable promise for protection of sensitive information within a system development with competing suppliers. The paper describes how multiple architectural definition languages (specifically SysML and AADL) have been utilized in developing the core of this model-based analysis approach. The objective is to exploit strengths of both these languages while maintaining capability to translate between both variations of architectural models. The primary means of accomplishing this two-way translation is an extension of the translator generated by Cofer, et al, for the DARPA META program. This translator currently operates in a two-way sense (between SysML and AADL) only upon a rather limited subset of SysML capabilities but the SAVI team expects to see this two-way capability broadened with each incremental development phase of the VIP. Extensive use of recent new annexes for AADL, notably the Error Model Annex, has been a means of automating system safety analysis tools (like Functional Hazard Assessments, Failure Modes and Effects Analyses, and Fault Tree Analyses) that underpin broader System Safety Analysis.Another characteristic embedded in the SAVI VIP is a comprehensive form of consistency checking designed to evaluate integration of components and alterations of such components. At least six types of consistency are considered in a SAVI-compliant integration effort: (1) interface consistency, (2) compositional consistency, (3) constraint consistency, (4) behavioral consistency, (5) version consistency, and (6) verification consistency. Moreover, whenever a modification is made to any component, not only are these elements of consistency to be addressed, the effect of the modification on the entire system must be quantitatively analyzed using the SAVI annotated architectural model for the modified system. Each system considered under the SAVI paradigm is analyzed for system properties required to meet its performance specification using this architectural approach. The AADL portion of the architectural model structure allows quantitative evaluation of the system impact of each change made to the substructure. In this sense, the SAVI approach facilitates quantitative trade studies aimed at the system behavior during each iteration in the design loop.
DA  - 2013/11//
PY  - 2013
DO  - 10.1145/2658982.2527275
VL  - 33
IS  - 3
SP  - 43
EP  - 46
SN  - 1094-3641
UR  - https://doi.org/10.1145/2658982.2527275
KW  - consistency checking
KW  - annotated architectural model
KW  - virtual integration
ER  - 

TY  - JOUR
TI  - Model of Mobile Manipulator Performance Measurement Using SysML
AU  - Bostelman, Roger
AU  - Foufou, Sebti
AU  - Hong, Tsai
AU  - Shah, Mili
T2  - J. Intell. Robotics Syst.
AB  - Test methods for measuring safety and performance of mobile manipulators have yet to be developed. Therefore, potential mobile manipulator users cannot compare one system to another. Systems Modeling Language (SysML) is a general-purpose modeling language for systems engineering applications that supports the specification, analysis, design, verification, and validation of simple through complex systems, such as mobile manipulators. As test methods are developed to allow performance comparison of the varied mobile manipulators, so to should be the case of allowing comparison of most any mobile manipulator configuration and control strategy during performance measurements. Additionally, mobile manipulator manufacturers and users can then compare these systems to tasks using various methods. This paper uses SysML to describe two measurement methods (optical tracking and artifacts) and the performance measurement of mobile manipulators performing assembly tasks. The SysML models are verified through systems review, referenced experimentation and summarize with uncertainty propagation models of the mobile manipulator.
DA  - 2018/09//
PY  - 2018
DO  - 10.1007/s10846-017-0705-4
VL  - 92
IS  - 1
SP  - 65
EP  - 83
SN  - 0921-0296
UR  - https://doi.org/10.1007/s10846-017-0705-4
KW  - Control
KW  - Mobile manipulator
KW  - Performance measurement
KW  - Standards
KW  - Systems modeling language (SysML)
KW  - Test methods
ER  - 

TY  - CONF
TI  - Merging Worlds: Complex Adaptive Systems Science Meets Systems Engineering: A Foundation for Complex Adaptive Agent-Based Modeling Architectures
AU  - Doyle, Margery J.
AU  - Watz, Eric
AU  - Portrey, Antoinette M.
T3  - ANSS '15
AB  - Presented in this paper are details regarding a Complex Adaptive System-of-Systems, multi-purpose, agent-in-the-loop behavior modeling framework. A framework designed to facilitate usage of agents and automated tools in military training and research, that can either be rapidly developed or easily modified. This particular agent-based modeling effort was initiated because, to date, operator and opponent behavior models used in the current threat systems still require a significant amount of time, effort, and expertise to develop. The approach to such a versatile framework, was, and continues to be, inspired by theories of the emergent properties exhibited in complex adaptive system's behaviors, such as the syntax and semantics inherit in a succession of events, artifact-mediated indirect communication, and facilitation of shared meaning within a multi-stakeholder environment. Also of interest are agent-environment interactions and the affordances available to an agent; a theory derived from ecological psychology. This research both supports and is supported by multi-agent simulations of military operations where the agents represent logical realistic models of military operators. A method for rapid design and evaluation of agent-based models will be identified and further discussed via descriptions of two exemplar implementations in distinct large scale complex adaptive multi-stakeholder multi-component systems.
C1  - San Diego, CA, USA
C3  - Proceedings of the 48th Annual Simulation Symposium
DA  - 2015///
PY  - 2015
SP  - 86
EP  - 93
PB  - Society for Computer Simulation International
SN  - 978-1-5108-0099-1
KW  - interoperability
KW  - system-of-systems
KW  - agent-based modeling
KW  - composeability
KW  - emergence complex adaptive systems
KW  - event syntax
KW  - fighter combat-tactical awareness capability
KW  - tactical observation agent
ER  - 

TY  - CONF
TI  - Digital Twin Modeling, Co-Simulation and Cyber Use-Case Inclusion Methodology for IoT Systems
AU  - Mittal, Saurabh
AU  - Tolk, Andreas
AU  - Pyles, Andrew
AU  - Van Balen, Nicolas
AU  - Bergollo, Kevin
T3  - WSC '19
AB  - Cyber Physical Systems (CPS) and Internet of Things (IoT) communities are often asked to test devices regarding their effects on underlying infrastructure. Usually, only one or two devices are given to the testers, but hundreds or thousands are needed to really test IoT effects. This proposition makes IoT Test &amp; Evaluation (T&amp;E) cost and management prohibitive. One possible approach is to develop a digital twin of the IoT device and employ many replicas of the twin in a simulation environment comprised of various simulators that mimic the IoT device's operational environment. Cyber attack experimentation is a critical aspect of IoT T&amp;E and without such a virtual T&amp;E environment, it is almost impossible to study large scale effects. This paper will present a digital twin engineering methodology as applicable to IoT device T&amp;E and cyber experimentation.
C3  - Proceedings of the Winter Simulation Conference
DA  - 2019///
PY  - 2019
SP  - 2653
EP  - 2664
PB  - IEEE Press
SN  - 978-1-72813-283-9
ER  - 

TY  - CONF
TI  - Towards a Model-Based DevOps for Cyber-Physical Systems
AU  - Combemale, Benoit
AU  - Wimmer, Manuel
AB  - The emerging field of Cyber-Physical Systems (CPS) calls for new scenarios of the use of models. In particular, CPS require to support both the integration of physical and cyber parts in innovative complex systems or production chains, together with the management of the data gathered from the environment to drive dynamic reconfiguration at runtime or finding improved designs. In such a context, the engineering of CPS must rely on models to uniformly reason about various heterogeneous concerns all along the system life cycle. In the last decades, the use of models has been intensively investigated both at design time for driving the development of complex systems, and at runtime as a reasoning layer to support deployment, monitoring and runtime adaptations. However, the approaches remain mostly independent. With the advent of DevOps principles, the engineering of CPS would benefit from supporting a smooth continuum of models from design to runtime, and vice versa. In this vision paper, we introduce a vision for supporting model-based DevOps practices, and we infer the corresponding research roadmap for the modeling community to address this vision by discussing a CPS demonstrator.
C1  - Berlin, Heidelberg
C3  - Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment: Second International Workshop, DEVOPS 2019, ChÃ¢teau de Villebrumier, France, May 6â8, 2019, Revised Selected Papers
DA  - 2019///
PY  - 2019
DO  - 10.1007/978-3-030-39306-9_6
SP  - 84
EP  - 94
PB  - Springer-Verlag
SN  - 978-3-030-39305-2
UR  - https://doi.org/10.1007/978-3-030-39306-9_6
ER  - 

TY  - JOUR
TI  - Bridging Proprietary Modelling and Open-Source Model Management Tools: The Case of PTC Integrity Modeller and Epsilon
AU  - Zolotas, Athanasios
AU  - HoyosÂ Rodriguez, Horacio
AU  - Hutchesson, Stuart
AU  - SanchezÂ Pina, Beatriz
AU  - Grigg, Alan
AU  - Li, Mole
AU  - Kolovos, Dimitrios S.
AU  - Paige, Richard F.
T2  - Softw. Syst. Model.
AB  - While the majority of research on Model-Based Software Engineering revolves around open-source modelling frameworks such as the Eclipse Modelling Framework, the use of commercial and closed-source modelling tools such as RSA, Rhapsody, MagicDraw and Enterprise Architect appears to be the norm in industry at present. This technical gap can prohibit industrial users from reaping the benefits of state-of-the-art research-based tools in their practice. In this paper, we discuss an attempt to bridge a proprietary UML modelling tool (PTC Integrity Modeller), which is used for model-based development of safety-critical systems at Rolls-Royce, with an open-source family of languages for automated model management (Epsilon). We present the architecture of our solution, the challenges we encountered in developing it, and a performance comparison against the toolâs built-in scripting interface. In addition, we use the bridge in a real-world industrial case study that involves the coordination with other bridges between proprietary tools and Epsilon.
DA  - 2020/01//
PY  - 2020
DO  - 10.1007/s10270-019-00732-1
VL  - 19
IS  - 1
SP  - 17
EP  - 38
SN  - 1619-1366
UR  - https://doi.org/10.1007/s10270-019-00732-1
KW  - Model-driven engineering
KW  - Model management
KW  - Open-source
ER  - 

TY  - CHAP
TI  - Towards the next Generation of Reactive Model Transformations on Low-Code Platforms: Three Research Lines
AU  - HorvÃ¡th, Benedek
AU  - HorvÃ¡th, Ãkos
AU  - Wimmer, Manuel
T2  - Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
AB  - Low-Code Development Platforms have emerged as the next-generation, cloud-enabled collaborative platforms. These platforms adopt the principles of Model-Driven Engineering, where models are used as first-class citizens to build complex systems, and model transformations are employed to keep a consistent view between the different aspects of them. Due to the online nature of low-code platforms, users expect them to be responsive, to complete complex operations in a short time. To support such complex collaboration scenarios, the next-generation of low-code platforms must (i) offer a multi-tenant environment to manage the collaborative work of engineers, (ii) provide a model processing paradigm scaling up to hundreds of millions of elements, and (iii) provide engineers a set of selection criteria to choose the right model transformation engine in multi-tenant execution environments. In this paper, we outline three research lines to improve the performance of reactive model transformations on low-code platforms, by motivating our research with a case study from a systems engineering domain.
CY  - New York, NY, USA
DA  - 2020///
PY  - 2020
PB  - Association for Computing Machinery
SN  - 978-1-4503-8135-2
UR  - https://doi.org/10.1145/3417990.3420199
ER  - 

TY  - CONF
TI  - Towards a Conceptual Framework for Requirements Interoperability in Complex Systems Engineering
AU  - Szejka, Anderson Luis
AU  - Aubry, Alexis
AU  - Panetto, HervÃ©
AU  - JÃºnior, Osiris Canciglieri
AU  - Loures, Eduardo Rocha
AB  - Requirements Engineering RE is an important activity in system engineering and produces, from the users' needs, specifications related to what the final system must be. This process in complex systems engineering is extremely intense, because there is a large number of stakeholders involved, with expertise deriving from heterogeneous domains. Moreover, requirements' improvements and variations are common during system life cycle phases. Thus, there is a risk of inconsistency of requirements during the engineering of a system. This paper provides a contribution in requirements engineering as it explores requirements interoperability in complex systems when multiples dimensions are involved. It discusses requirement management according to the cross-domains dimension, the cross-systems life cycle dimension, the cross-requirements dimension and the risk of inconsistency when three dimensions are involved simultaneously during the life cycle phases. The main result is an overview of the existing gaps in one and/or more dimensions allowing a discussion on the possibilities to cope with the problem of requirements inconsistency in multiples dimensions.
C1  - Berlin, Heidelberg
C3  - Proceedings of the Confederated International Workshops on On the Move to Meaningful Internet Systems: OTM 2014 Workshops - Volume 8842
DA  - 2014///
PY  - 2014
DO  - 10.1007/978-3-662-45550-0_24
SP  - 229
EP  - 240
PB  - Springer-Verlag
SN  - 978-3-662-45549-4
UR  - https://doi.org/10.1007/978-3-662-45550-0_24
KW  - Requirements Engineering
KW  - Complex Systems Engineering
KW  - Requirements Consistency
KW  - Requirements Interoperability
ER  - 

TY  - CONF
TI  - Incorporating Automation: Using Modeling and Simulation to Enable Task Re-Allocation
AU  - Goodman, Tyler J.
AU  - Miller, Michael E.
AU  - Rusnock, Christina F.
T3  - WSC '15
AB  - Models for evaluating changes in human workload as a function of task allocation between humans and automation are investigated. Specifically, SysML activity diagrams and IMPRINT workload models are developed for a tablet-based game with the ability to incorporate automation. Although a first order model could be created by removing workload associated with tasks that are allocated away from the human and to the computer, we discuss the need to improve the activity diagrams and models by capturing workload associated with communicating state information between the human and the automation. Further, these models are extended to capture additional human tasks, which permit the user to maintain situation awareness, enabling the human to monitor the robustness of the automation. Through these model extensions, it is concluded that human workload will be affected by the degree the human relies upon the automation to accurately perform its allocated tasks.
C3  - Proceedings of the 2015 Winter Simulation Conference
DA  - 2015///
PY  - 2015
SP  - 2388
EP  - 2399
PB  - IEEE Press
SN  - 978-1-4673-9741-4
ER  - 

TY  - CONF
TI  - Multi-Faceted Modeling in the Analysis and Optimization of Iot Complex Systems
AU  - CÃ¡rdenas, RomÃ¡n
AU  - Arroba, Patricia
AU  - Moya, JosÃ© M.
AU  - Risco-MartÃ­n, JosÃ© L.
T3  - SummerSim '20
AB  - Modeling, Simulation, and Optimization tools are used in the development process of complex systems for improving their overall performance. However, enforcing full coverage in the validation process of these models may add unbearable simulation time overheads. In this research, we propose the implementation of multi-faceted sets of models with different degrees of complexity for optimizing IoT complex systems. With this approach, elements of the system are optimized using simpler and faster models that reduce simulation times, enabling the exploration of more scenarios in less time. Optimized components can be then validated extensively using more complex models, ensuring full coverage, and reducing potential failures.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2020 Summer Simulation Conference
DA  - 2020///
PY  - 2020
PB  - Society for Computer Simulation International
SN  - 978-1-71381-429-0
KW  - optimization
KW  - multi-resolution modeling
KW  - performance
KW  - systems of systems
ER  - 

TY  - JOUR
TI  - Self-Organising Socio-Technical Description in Service Systems for Supporting Smart User Decisions in Public Transport
AU  - DrÄgoicea, Monica
AU  - e Cunha, JoÃ£o FalcÃ£o
AU  - PÄtraÅcu, Monica
T2  - Expert Syst. Appl.
AB  - Exploration to transpose service science principles to guide service systems design.Modelling of value co-creation service interactions embedding customer experience.Description of the Socio-Technical Systems Engineering (STSE) process.Exploratory case study of a real time information and travel planning service.Integration guidelines of the STSE process steps with Presage2 multiagent platform. This paper describes an exploration towards the transposition of service science principles into design guidelines. This aims at capturing value co-creation service interactions embedding customer experience in service design and delivery activities. The new Socio-Technical Systems Engineering (STSE) process is proposed to guide improved design, and it is exemplified with a new real time service that provides integrated information for trip planning in a city. The STSE process supports a high level visual modelling approach assisted by model execution and simulation tools. From a service engineering perspective, the outcomes of this process are artefacts that automatically support consistency among design steps and effective integration of customer experience and stakeholder requirements through iterative cycles related to service design. The application of the STSE process in the design of an exploratory case study of a real time information and travel planning service is validated through simulation using an executable representation of requirements. It can be executed over more complex transport service offerings, with different resource allocation algorithms, or different public transport planning services over a sample of real users requesting information. Results of such a simulation are beneficial for the users, for the service providers, and for the authorities managing public transport in city or metropolitan areas.
DA  - 2015/10//
PY  - 2015
DO  - 10.1016/j.eswa.2015.04.029
VL  - 42
IS  - 17
SP  - 6329
EP  - 6341
SN  - 0957-4174
UR  - https://doi.org/10.1016/j.eswa.2015.04.029
KW  - ABSagent based simulation
KW  - Agent based simulation
KW  - MBSEmodel-based systems engineering
KW  - SBSEmodelling and simulation-based systems engineering
KW  - Self-organisation
KW  - Service design
KW  - Service interactions
KW  - Service systems
KW  - STSESocio-Technical Systems Engineering
KW  - M&
ER  - 

TY  - CONF
TI  - Integrated Framework for Model-Driven Systems Engineering: A Research Roadmap
AU  - Aliyu, Hamzat Olanrewaju
AU  - TraorÃ©, Mamadou Kaba
T3  - TMS-DEVS '16
AB  - In recent decades, Model-Driven Engineering (MDE) practices have continuously aided the adoption of system analysis approaches like simulation, formal analysis and enactment by non-expert users. However, due to limited portability of models between different approaches, exhaustive analysis of complex systems still depend largely on creating disparate models designated for different analysis goals to get complementary solutions to the problem. Productivity and efficiency of the process can be greatly improved by integrating the different approaches in a framework which offers a unified modeling interface and automated synthesis of all required artifacts. This paper suggests a framework as a roadmap for further research towards realizing this goal. First we present the architecture of the framework, then we present the steps to build the syntax of the unified formalism at its kernel and an illustrative case study as a proof of concept for the proposal.
C1  - San Diego, CA, USA
C3  - Proceedings of the Symposium on Theory of Modeling & Simulation
DA  - 2016///
PY  - 2016
PB  - Society for Computer Simulation International
SN  - 978-1-5108-2321-1
KW  - model-driven systems engineering
KW  - HiLLS
KW  - language integration
KW  - SimStudio
ER  - 

TY  - CONF
TI  - Applying a Model-Based Approach to IT Systems Development Using SysML Extension
AU  - Izukura, Sayaka
AU  - Yanoo, Kazuo
AU  - Osaki, Takao
AU  - Sakaki, Hiroshi
AU  - Kimura, Daichi
AU  - Xiang, Jianwen
T3  - MODELS'11
AB  - Model-based system engineering (MBSE) is regarded as an effective way of developing systems. We are now applying the model-based approach to IT system development/integration (SI) because we urgently need to reduce the cost of SI. However, there are various challenges imposed when applying MBSE to SI. One of these is that reducing the cost to update models is more significant than that in other MBSE domains such as embedded systems. We adopted SysML to handle these issues and extended it to modeling IT systems. We present the details on this SysML extension and how it overcame these issues. We are developing an in-house SI-support tool called "CASSI", which evaluates the non-functional requirements; performance and availability of the IT system's models written in that extended manner and helps these models to be reused. This paper also includes industrial case studies of CASSI, and its effectiveness is discussed.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 14th International Conference on Model Driven Engineering Languages and Systems
DA  - 2011///
PY  - 2011
SP  - 563
EP  - 577
PB  - Springer-Verlag
SN  - 978-3-642-24484-1
KW  - model-based
KW  - IT systems development
KW  - system modeling
ER  - 

TY  - CONF
TI  - Model-Driven Systems Engineering for Netcentric System of Systems with DEVS Unified Process
AU  - Mittal, Saurabh
AU  - MartÃ­n, JosÃ© Luis Risco
T3  - WSC '13
AB  - Model-Based Systems Engineering (MBSE) employs model-based technologies and established systems engineering practices. Model-Driven Engineering (MDE) provides various concepts to automate model based practices using metamodeling. We describe the DEVS Unified Process (DUNIP) that aims to bring together MBSE and MDE as Model-driven Systems Engineering (MDSE) and apply it in a netcentric environment. We historically look at various model-based and model-driven flavors and suggest MDSE/DUNIP as one of the derived methodologies. We describe essential elements in DUNIP that facilitate integration with architecture solutions like Service Oriented Architecture (SOA), Event Driven Architectures (EDA), Systems Entity Structures (SES) ontology, and frameworks like Department of Defense Architecture Framework (DoDAF 2.0). We discuss systems requirement specifications, verification and validation, metamodeling, Domain Specific Languages (DSLs), and model transformation technologies as applicable in DUNIP. In this article, we discuss the features and contributions of DUNIP in netcentric system of systems engineering.
C3  - Proceedings of the 2013 Winter Simulation Conference: Simulation: Making Decisions in a Complex World
DA  - 2013///
PY  - 2013
SP  - 1140
EP  - 1151
PB  - IEEE Press
SN  - 978-1-4799-2077-8
ER  - 

TY  - BOOK
TI  - Agile Systems Engineering
AU  - Douglass, Bruce Powel
AB  - Agile Systems Engineering presents a vision of systems engineering where precise specification of requirements, structure, and behavior meet larger concerns as such as safety, security, reliability, and performance in an agile engineering context. World-renown author and speaker Dr. Bruce Powel Douglass incorporates agile methods and model-based systems engineering (MBSE) to define the properties of entire systems while avoiding errors that can occur when using traditional textual specifications. Dr. Douglass covers the lifecycle of systems development, including requirements, analysis, design, and the handoff to specific engineering disciplines. Throughout, Dr. Douglass couples agile methods with SysML and MBSE to arm system engineers with the conceptual and methodological tools they need to avoid specification defects and improve system quality while simultaneously reducing the effort and cost of systems engineering. Identifies how the concepts and techniques of agile methods can be effectively applied in systems engineering context Shows how to perform model-based functional analysis and tie these analyses back to system requirements and stakeholder needs, and forward to system architecture and interface definition Provides a means by which the quality and correctness of systems engineering data can be assured (before the entire system is built!) Explains agile system architectural specification and allocation of functionality to system components Details how to transition engineering specification data to downstream engineers with no loss of fidelity Includes detailed examples from across industries taken through their stages, including the "Waldo" industrial exoskeleton as a complex system Table of Contents What is Model-Based Systems Engineering What are Agile Methods and Why Should I Care The importance of Agile methods Agile Stakeholder Requirements Engineering Agile Systems Requirements Definition and Analysis System Architectural Analysis and Trade Studies Agile Systems Architectural Design The Handoff to Downstream Engineering Appendix A. T-Wrecks Stakeholder Requirements Appendix B. T-Wrecks System Requirements
CY  - San Francisco, CA, USA
DA  - 2015///
PY  - 2015
PB  - Morgan Kaufmann Publishers Inc.
SN  - 978-0-12-802349-5
ER  - 

TY  - CHAP
TI  - Model-Driven Systems Engineering for Virtual Product Design
AU  - Dalibor, Manuela
AU  - Jansen, Nico
AU  - Rumpe, Bernhard
AU  - Wachtmeister, Louis
AU  - Wortmann, Andreas
T2  - Proceedings of the 22nd International Conference on Model Driven Engineering Languages and Systems
AB  - Model-Based Systems Engineering (MBSE) aims to provide a systems engineering methodology that leverages modeling methods to support design, analysis, verification, and validation of systems. As such, methodologies for MBSE have to be able to integrate heterogeneous engineering models from a variety of domains, including mechanical engineering, product design, legislation, and many more. Most research in this area usually only focuses on general system descriptions of a step in the system development process, without providing any interdisciplinary or interprocess connections. Thus, the models created by the domain experts are often unconnected and not suited for automated model transformations. We present a method to integrate abstract system descriptions in the Systems Modeling Language (SysML) with Computer-Aided Design (CAD) models, which are not only the primary model for geometrical hardware descriptions but also the starting point of most process chains in the context of virtual product development. The transformations of our method are realized in a plug-in for the MagicDraw modeling environment and support to generate parameters of a parameter and constraint CAD modeling approach from a SysML model. This automates the integration of abstract system descriptions with design models to foster a coherent virtual product development.
DA  - 2019///
PY  - 2019
SP  - 431
EP  - 436
PB  - IEEE Press
SN  - 978-1-72815-125-0
UR  - https://doi.org/10.1109/MODELS-C.2019.00069
ER  - 

TY  - BOOK
TI  - A Practical Guide to SysML: Systems Modeling Language
AU  - Friedenthal, Sanford
AU  - Moore, Alan
AU  - Steiner, Rick
AB  - This book provides a comprehensive and practical guide for modeling systems with SysML. It includes a full description of the language along with a quick reference guide, and shows how the language can be applied to specify, analyze, and design systems. It contains examples to help readers understand how SysML can be used in practice. The book also includes guidance on how an organization or project can transition to model based systems engineering using SysML, with considerations for processes, methods, tools, and training. *The authoritative guide for understanding and applying SysML *Authored by the foremost experts on the language *Language description, examples, and quick reference guide included
CY  - San Francisco, CA, USA
DA  - 2008///
PY  - 2008
PB  - Morgan Kaufmann Publishers Inc.
SN  - 978-0-08-055836-3
ER  - 

TY  - CONF
TI  - Integrated Systems Engineering and Software Requirements Engineering for Technical Systems
AU  - Holtmann, JÃ¶rg
AU  - Bernijazov, Ruslan
AU  - Meyer, Matthias
AU  - Schmelter, David
AU  - Tschirner, Christian
T3  - ICSSP 2015
AB  - The development of software-intensive technical systems (e.g., within the automotive industry) involves several engineering disciplines like mechanical, electrical, control, and software engineering. Model-based Systems Engineering (MBSE) coordinates these disciplines throughout the development by means of discipline-spanning processes and system models. Such a system model provides a common understanding of the system under development and serves as a starting point for the discipline-specific development. An integral part of MBSE is the requirements engineering on the system level. However, for the discipline-specific development to start, these requirements need to be refined, e.g., into specific requirements for the embedded software. Since existing MBSE approaches lack support for this refinement step, we conceived a systematic transition from MBSE to model-based software requirements engineering, which we present in this paper. We automated the steps of the transition where possible, in order to avoid error-prone and time-consuming manual tasks. We illustrate the approach with an example of an automotive embedded system.
C1  - New York, NY, USA
C3  - Proceedings of the 2015 International Conference on Software and System Process
DA  - 2015///
PY  - 2015
DO  - 10.1145/2785592.2785597
SP  - 57
EP  - 66
PB  - Association for Computing Machinery
SN  - 978-1-4503-3346-7
UR  - https://doi.org/10.1145/2785592.2785597
KW  - Requirements Engineering
KW  - Systems Engineering
ER  - 

TY  - CONF
TI  - Metrics for Co-Evolving Autonomous Systems
AU  - Ring, Jack
T3  - PerMIS '09
AB  - Autonomous system innovations have overrun the test and evaluation capability to find problems before they become expensive to fix â or lethal. The autonomy paradigm demands that an equivalent test and evaluation system be conceived, architected and engineered, operated and evolved. This in turn demands an autonomous test and evaluation enterprise, staffed with competent systemists, as the enabling agent. This paper outlines the metrics and key capabilities for realizing such an enterprise. It features a game-theoretic basis, a model-based systems engineering approach and a four part strategic framework. This paper focuses on the unclassified situation in the U.S. Dept. of Defense. However, these ideas will apply to other domains of autonomy in both the public and private sectors.
C1  - New York, NY, USA
C3  - Proceedings of the 9th Workshop on Performance Metrics for Intelligent Systems
DA  - 2009///
PY  - 2009
DO  - 10.1145/1865909.1865929
SP  - 99
EP  - 104
PB  - Association for Computing Machinery
SN  - 978-1-60558-747-9
UR  - https://doi.org/10.1145/1865909.1865929
KW  - ontology
KW  - agility
KW  - persistent integrity assurance
KW  - reconfigurable
KW  - repurposed
KW  - systemics
ER  - 

TY  - JOUR
TI  - The Role of Service Oriented Architectures in Systems Engineering
AU  - Andary, James F.
AU  - Sage, Andrew P.
T2  - Inf. Knowl. Syst. Manag.
AB  - Notions of Service Oriented Architectures (SOA) have recently become popular and potentially very useful in the management, business and engineering worlds as the enterprise-focused Information Technology (IT) architecture of choice. SOA is an approach to defining integration-architectures based on the concept of services, where a service is defined as a mechanism that enables access to one or more capabilities using a prescribed interface. A Service Oriented Architecture (SOA) is a way of organizing services and associated hardware and software so that it is potentially possible to respond quickly to the changing requirements of the marketplace. Recognizing the significant advantages of service oriented architecture applied to a business enterprise, we ask: Can an engineering organization, specifically a systems engineering organization, realize similar benefits? This paper will attempt to answer that question by exploring the possibility and advantages of applying SOA to the systems engineering design process, specifically as a key enabler of the Model Based Systems Engineering (MBSE) paradigm.
DA  - 2010/01//
PY  - 2010
VL  - 9
IS  - 1
SP  - 47
EP  - 74
SN  - 1389-1995
ER  - 

TY  - CONF
TI  - SysML as a Tool for Requirements Traceability in Mechatronic Design
AU  - Vidal, Enrique J.
AU  - Villota, Elizabeth R.
T3  - ICMRE 2018
AB  - Modern mechatronic systems have to deal with the ever increasing requirements due to a higher number of demands and their complexity. Those demands are summarized in the requirements list. Classic design methodologies do not directly relate a system or part of it to the requirements list. As a result, by failing to ensure that the qualification of requirements is traceable, when a problem arises, design engineers lose the ability to track back and quickly locate one or more not fulfilled requirements. Our work shows how requirements traceability for mechatronic design can be achieved by employing a Model-Based Systems Engineering (MBSE) methodology and associated tool, Systems Modeling Language (SysML). SysML is a general purpose multiview language for systems modeling capable of linking requirements to the system elements by capturing textual requirements and placing them in the design models. Furthermore, SysML can be coupled to other tools including spreadsheets and design and simulation software, such as Matlab or Modelica, enabling requirements verification. An electro-mechanical actuator (EMA) -an airplane surface actuatoris chosen as a mechatronic system example. By joining SysML and Matlab/Simulink, it was possible to trace requirements for the EMA mechatronic design and hence verify compliance with requirements throughout the design.
C1  - New York, NY, USA
C3  - Proceedings of the 2018 4th International Conference on Mechatronics and Robotics Engineering
DA  - 2018///
PY  - 2018
DO  - 10.1145/3191477.3191494
SP  - 146
EP  - 152
PB  - Association for Computing Machinery
SN  - 978-1-4503-6365-5
UR  - https://doi.org/10.1145/3191477.3191494
KW  - Traceability
KW  - SysML
KW  - Mechatronic Design
KW  - Requirements
ER  - 

TY  - JOUR
TI  - CORAMOD: A Checklist-Oriented Model-Based Requirements Analysis Approach
AU  - Brace, William
AU  - Ekman, Kalevi
T2  - Requir. Eng.
AB  - Requirement development activities such as requirements analysis and modelling are well defined in software engineering. A model-based requirement development may result in significant improvements in engineering design. In current product development activities in this domain, not all requirements are consciously identified and modelled. This paper presents the checklist-oriented requirements analysis modelling (CORAMOD) approach. CORAMOD is a methodology for the use of model-based systems engineering for requirements analysis of complex products utilizing checklists, the simplest kind of rational design method. The model-based focuses the requirements analysis process on requirement modelling, whereas the checklist encourages a conscious and systematic approach to identify requirements. We illustrate the utility of CORAMOD artefacts by a comprehensive case study example and modelling with system modelling language (SysML). We suggest that visual accessibility of the SysML views facilitates the full participation of all stakeholders and enables the necessary dialogue and negotiation. The approach promotes tracing derived requirements to the customer need statement and enhances validation by model execution and simulation.
DA  - 2014/03//
PY  - 2014
DO  - 10.1007/s00766-012-0154-3
VL  - 19
IS  - 1
SP  - 1
EP  - 26
SN  - 0947-3602
UR  - https://doi.org/10.1007/s00766-012-0154-3
KW  - CORAMOD
KW  - Formalize requirement
KW  - Model-based
KW  - Model-based requirements analysis
KW  - Requirement models
KW  - Requirements analysis
ER  - 

TY  - CONF
TI  - Bridging the Gap between Design and Verification of Embedded Systems in Model Based System Engineering: A Meta-Model for Modeling Universal Verification Methodology (UVM) Test Benches
AU  - Anwar, Muhammad Waseem
AU  - Qamar, Shumaila
AU  - Azam, Farooque
AU  - Butt, Wasi Haider
AU  - Rashid, Muhammad
T3  - ICCMS '20
AB  - Model Based System Engineering (MBSE) is recurrently adopted for embedded systems in order to simplify the design and verification activities. Particularly, it enables the modeling of system design at higher abstraction level. Subsequently, model transformation process is executed to automatically generate Register Transfer Level (RTL) code in order to accomplish verification through simulation. In this context, the test benches required for the realistic simulation of RTL code are usually developed at lower abstraction level e.g. SystemVerilog etc. This creates a significant gap between design and its verification as the concepts of MBSE are used to develop the system design and corresponding test benches are implemented at lower abstraction level separately. To abridge this gap, a novel meta-model for the modeling of Universal Verification Methodology (UVM) test benches is proposed in this article. Particularly, the proposed meta-model is based on the several UVM concepts like scoreboard, monitor, agent, driver etc. in order to allow the simultaneous modeling of test benches along with system design. This provides the foundation to concurrently generate both RTL code and UVM test benches implementations from the models through transformation process. Subsequently, the simulation for design verification can be done instantaneously in existing UVM based simulator such as QuestaSIM. The practicability of the proposed meta-model is validated through memory model case study.
C1  - New York, NY, USA
C3  - Proceedings of the 12th International Conference on Computer Modeling and Simulation
DA  - 2020///
PY  - 2020
DO  - 10.1145/3408066.3408069
SP  - 82
EP  - 87
PB  - Association for Computing Machinery
SN  - 978-1-4503-7703-4
UR  - https://doi.org/10.1145/3408066.3408069
KW  - MBSE
KW  - Design verification
KW  - Embedded systems
KW  - Meta-modeling
KW  - Test benches
KW  - Universal Verification Methodology
KW  - UVM
ER  - 

TY  - JOUR
TI  - Integrating Security Requirements Engineering into MBSE: Profile and Guidelines
AU  - MaÅ¾eika, D.
AU  - Butleris, R.
AU  - Sorce, Salvatore
T2  - Sec. and Commun. Netw.
AB  - Model-Based System Engineering (MBSE) provides a number of ways on how to create, validate, and verify the complex system design; unfortunately, the inherent security aspects are addressed neither by the SysML language that is the main MBSE enabler nor by popular MBSE methods. Although there are many common points between MBSE and security requirements engineering, the key advantages of MBSE (such as managed complexity, reduced risk and cost, and improved communication across a multidisciplinary team) have not been exploited enough. This paper reviews security requirements engineering processes and modeling methods and standards and provides the MBSE security profile as well, which is formalized with the UML 2.5 profiling capability. The new UML-based security profile conforms to the ISO/IEC 27001 information security standard. In addition to the MBSE security profile, this paper also presents the security profile application use case and the feasibility study of current status for security and systems engineering processes.
DA  - 2020/01//
PY  - 2020
DO  - 10.1155/2020/5137625
VL  - 2020
SN  - 1939-0114
UR  - https://doi.org/10.1155/2020/5137625
ER  - 

TY  - CONF
TI  - Systems Engineering and Simulation: Converging toward Noble Causes
AU  - Zeigler, Bernard P.
AU  - Marvin, Joseph W.
AU  - Cadigan, John J.
T3  - WSC '18
AB  - This paper highlights the accomplishments and shared vision between the International Council on Systems Engineering (INCOSE) and the Modeling and Simulation community (represented by the Society for Modeling and Simulation, International (SCS), and Simulation Interoperability Standards Organization (SISO, among others). We describe convergence between the model-based systems engineering initiative of the INCOSE community and the model-based simulation developments of the SCS community. The goal is not only to highlight the outstanding accomplishments of our time, but also to emphasize the parallels and relationships. The paper is intended to enhance communications and facilitate the outreach already in motion. Modeling and Simulation (M&amp;S) represents a core capability and need for addressing today's complex and grand challenges. We suggest a collaboration of INCOSE and SCS, as leaders in the systems and M&amp;S communities, to solve these challenges complicated by multi-dimensional, hierarchical, and uncertain Big Data and propelled by exascale computational platforms.
C3  - Proceedings of the 2018 Winter Simulation Conference
DA  - 2018///
PY  - 2018
SP  - 3742
EP  - 3752
PB  - IEEE Press
SN  - 978153866570
ER  - 

TY  - CONF
TI  - Generation of an Optimised Master Algorithm for FMI Co-Simulation
AU  - Van Acker, Bert
AU  - Denil, Joachim
AU  - Vangheluwe, Hans
AU  - De Meulenaere, Paul
T3  - DEVS '15
AB  - Model-based Systems Engineering plays a pivotal role in the design of Software-Intensive and Cyber-Physical Systems by enabling early virtual integration of the different parts of the system. Often multiple formalisms are combined to express the behaviour of these complex engineered systems. Co-simulation in general and the Functional Mock-up Interface specifically, is a technique to simulate multiple heterogeneous models in concert. However, usage and performance of the overall co-simulation does not only depend on the accuracy of the distinct heterogeneous models. It also depends on the co-simulation master: the orchestration mechanism for this simultaneous simulation. In this paper we report on a technique to increase the performance of co-simulation. We explicitly model a co-simulation setup, using language engineering techniques. An explicit model of the co-simulation allows to automatically generate an optimised orchestration algorithm compliant to the Functional Mock-up Interface standard.
C1  - San Diego, CA, USA
C3  - Proceedings of the Symposium on Theory of Modeling & Simulation: DEVS Integrative M&S Symposium
DA  - 2015///
PY  - 2015
SP  - 205
EP  - 212
PB  - Society for Computer Simulation International
SN  - 978-1-5108-0105-9
KW  - co-simulation
KW  - domain-specific language
KW  - FMI
KW  - model transformation
KW  - model-driven engineering
ER  - 

TY  - CONF
TI  - Modeling for Safety in a Synthesis-Centric Systems Engineering Framework
AU  - Markovski, Jasen
AU  - van de Mortel-Fronczak, J. M.
T3  - SAFECOMP'12
AB  - The ever-increasing complexity of safety-critical systems puts high demands on safety assurance and certification. We focus on the development of control software, where safety) requirements engineering plays a crucial and delicate role. Nowadays, most of the safety features are ensured by the (embedded) control software and, consequently, a great deal of the operational failures primarily originate from requirement errors. We apply formal methods to systematically specify, model, and validate safety (control) requirements, which we then employ to automatically synthesize a control design based on a formal model of the system at hand. The synthesized designs are correct by definition, provided that the models capture all safety aspects of the system. We structure the process in a synthesis-centric model-based systems engineering framework that we apply in an industrial case study involving safe coordination of movement of theme park vehicles. The framework provides rigorous means for modeling of safety requirements, and it supports evolvable product design, requirement reuse, and early integration with hardware prototypes for validation and testing.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 2012 International Conference on Computer Safety, Reliability, and Security
DA  - 2012///
PY  - 2012
DO  - 10.1007/978-3-642-33675-1_4
SP  - 36
EP  - 49
PB  - Springer-Verlag
SN  - 978-3-642-33674-4
UR  - https://doi.org/10.1007/978-3-642-33675-1_4
ER  - 

TY  - CONF
TI  - Towards Facilities for Modeling and Synthesis of Architectures for Resource Allocation Problem in Systems Engineering
AU  - Creff, Stephen
AU  - Noir, JÃ©rÃ´me Le
AU  - Lenormand, Eric
AU  - MadelÃ©nat, SÃ©bastien
T3  - SPLC '20
AB  - Exploring architectural design space is often beyond human capacity and makes architectural design a difficult task. Model-based systems engineering must include assistance to the system designer in identifying candidate architectures to subsequently analyze tradeoffs. Unfortunately, existing languages and approaches do not incorporate this concern, generally favoring solution analysis over exploring a set of candidate architectures.In this paper, we explore the advantages of designing and configuring the variability problem to solve one of the problems of exploring (synthesizing) candidate architectures in systems engineering: the resource allocation problem. More specifically, this work reports on the use of the Clafer modeling language and its gateway to the CSP Choco Solver, on an industrial case study of heterogeneous hardware resource allocation (GPP-GPGPU-FPGA).Based on experiments on the modeling in Clafer, and the impact of its translation into the constraint programming paradigm (performance studies), discussions highlight some issues concerning facilities for modeling and synthesis of architectures and recommendations are proposed towards the use of this variability approach.
C1  - New York, NY, USA
C3  - Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A - Volume A
DA  - 2020///
PY  - 2020
DO  - 10.1145/3382025.3414963
PB  - Association for Computing Machinery
SN  - 978-1-4503-7569-6
UR  - https://doi.org/10.1145/3382025.3414963
KW  - allocation problem
KW  - architecture synthesis
KW  - constraint solving
KW  - empirical study
KW  - variability modeling
ER  - 

TY  - CONF
TI  - Model-Based Configuration of Automotive Co-Simulation Scenarios
AU  - Krammer, Martin
AU  - Fritz, Johannes
AU  - Karner, Michael
T3  - ANSS '15
AB  - Co-simulation represents a state-of-the-art method for virtual integration and simulation of automotive systems. Due to the needed number of simulation component models to describe such systems and their environment, the setup of all involved co-simulation tools within a framework becomes time consuming and error-prone. Based on related work, this paper takes the idea of a model based co-simulation configuration further, where all necessary information for execution of co-simulations is retrieved from a system model. For that purpose a meta-model, a subsequently derived UML-profile and a tool extension are developed. With this approach a tighter integration of simulation based verification activities to model-based systems engineering techniques is achieved. This allows engineers to generate co-simulation configurations out of system models. The resulting co-simulation configurations are fed directly to the used co-simulation framework, eliminating the need for time-consuming configuration of such a framework. Furthermore, potential reuse of entire co-simulation configurations, or parts thereof, is ensured. To support these claims, two use cases from the automotive domain are adducted to evaluate the described approach.
C1  - San Diego, CA, USA
C3  - Proceedings of the 48th Annual Simulation Symposium
DA  - 2015///
PY  - 2015
SP  - 155
EP  - 162
PB  - Society for Computer Simulation International
SN  - 978-1-5108-0099-1
KW  - SysML
KW  - UML
KW  - co-simulation
KW  - automotive
KW  - configuration
KW  - language
ER  - 

TY  - CONF
TI  - The MONDO Collaboration Framework: Secure Collaborative Modeling over Existing Version Control Systems
AU  - Debreceni, Csaba
AU  - Bergmann, GÃ¡bor
AU  - BÃºr, MÃ¡rton
AU  - RÃ¡th, IstvÃ¡n
AU  - VarrÃ³, DÃ¡niel
T3  - ESEC/FSE 2017
AB  - Model-based systems engineering of critical cyber-physical systems necessitates effective collaboration between different stakeholders while still providing secure protection of intellectual properties of all involved parties. While engineering artifacts are frequently stored in version control repositories, secure access control is limited to file-level strategies in most existing frameworks where models are split into multiple fragments with all-or-nothing permissions, which becomes a scalability and usability bottleneck in case of complex industrial models. In this paper, we introduce the MONDO Collaboration Framework, which provides rule-based fine-grained model-level secure access control, property-based locking and automated model merge integrated over existing version control systems such as Subversion (SVN) for storage and version control. Our framework simultaneously supports offline collaboration (asynchronous checkout-modify-commit) on top of off-the-shelf modeling tools and online scenarios (GoogleDocs-style short transactions) scenarios by offering a web-based modeling frontend. Screencast Demo: https://youtu.be/Ix3CgmsYIU0
C1  - New York, NY, USA
C3  - Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering
DA  - 2017///
PY  - 2017
DO  - 10.1145/3106237.3122829
SP  - 984
EP  - 988
PB  - Association for Computing Machinery
SN  - 978-1-4503-5105-8
UR  - https://doi.org/10.1145/3106237.3122829
KW  - automated model merge
KW  - collaborative modeling
KW  - locking
KW  - rule-based access control
KW  - version control systems
ER  - 

TY  - JOUR
TI  - Model-Based Design Verification for Embedded Systems through SVOCL: An OCL Extension for SystemVerilog
AU  - Anwar, Muhammad Waseem
AU  - Rashid, Muhammad
AU  - Azam, Farooque
AU  - Kashif, Muhammad
T2  - Des. Autom. Embedded Syst.
AB  - Model Based System Engineering (MBSE) is a renowned approach in the context of embedded systems development. It is frequently used to deal with the structural and behavioral aspects of system design. However, the verification of system design is generally performed in isolation. It is particularly true in the context of assertion based verification. Consequently, there is a huge gap between system design and its verification that seriously effects the productivity and time-to market objectives. Therefore, in this research, we target to reduce this gap by exploiting the features of MBSE and SystemVerilog assertions (SVA's). This article introduces a novel MBSE approach to model the design verification aspects of embedded systems, along with the system design (structural and behavioral aspects). We propose SystemVerilog in Object Constraint Language (SVOCL), an OCL temporal extension for SystemVerilog, to represent the design verification requirements by means of SVA's. As a part of research, SVOCL transformation engine has been developed to generate SVA's code in order to automate the design verification of embedded systems. The application of SVOCL has been validated through four case studies.
DA  - 2017/03//
PY  - 2017
DO  - 10.1007/s10617-017-9182-z
VL  - 21
IS  - 1
SP  - 1
EP  - 36
SN  - 0929-5585
UR  - https://doi.org/10.1007/s10617-017-9182-z
KW  - MBSE
KW  - Embedded systems
KW  - OCL extension
KW  - SVOCL
KW  - SystemVerilog assertions
ER  - 

TY  - CONF
TI  - Defining Object-Process Methodology in Web Ontology Language for Semantic Mediation
AU  - Jacobs, Shmuela
AU  - Wengrowicz, Niva
AU  - Dori, Dov
T3  - SWSTE '14
AB  - Model-Based Systems Engineering (MBSE) is gradually becoming an acceptable good practice, especially for large-scale complex systems. The variety of modeling languages allows detailed representation of domain-specific knowledge of different components and aspects of a system. Semantic Web concepts provide opportunities for easier and more efficient collaboration between design and verification teams using different modeling tools. IBM Semantic Mediation Container (SMC) is a tool interoperability platform, allowing mediation and synchronization among models in different languages based on their ontologies. We propose integrating into SMC the ability to translate Object-Process Methodology (OPM), the emerging ISO 19450 Standard, which provides a holistic view of the system's function, structure, and behavior. In this paper we describe the first integration stage - defining the OPM ontology in a way that conforms to Semantic Web specifications. We discuss different approaches of element representation and validate the ontology by round-trip transformation of OPM models from their visual representation to Resource Description Framework (RDF) and back.
C1  - USA
C3  - Proceedings of the 2014 IEEE International Conference on Software Science, Technology and Engineering
DA  - 2014///
PY  - 2014
DO  - 10.1109/SWSTE.2014.14
SP  - 87
EP  - 95
PB  - IEEE Computer Society
SN  - 978-1-4799-4432-3
UR  - https://doi.org/10.1109/SWSTE.2014.14
KW  - Conceptual modeling
KW  - Object-Process Methodology
KW  - Ontology design
KW  - RDF
KW  - Semantic Web Semantic mediation
ER  - 

TY  - JOUR
TI  - Pattern-Based Integration of System Optimization in Mechatronic System Design
AU  - Yuan, Wenqiang
AU  - Liu, Yusheng
AU  - Zhao, Jianjun
AU  - Wang, Hongwei
T2  - Adv. Eng. Softw.
AB  - A new profile named is proposed to implement the selection of optimization method based on SysML.A pattern with mechatronic semantics is formalized for supporting the retrieval of feasible optimization methods.A general automated selection process of optimization method is proposed based on the optimization profile.The detailed retrieval process of optimization methods and the semantic similarity calculation are proposed. Model-Based Systems Engineering (MBSE) is a promising methodology for the design of complex mechatronic systems. There are some tools developed to support MBSE in complex system design and modeling. However, none of them has got the functionality of supporting system optimization. This work is precisely motivated by this gap and aims to develop effective methods to support automatic system optimization for MBSE. Specifically, a pattern-based method is proposed to support the integration of system optimization into mechatronic system design. In such a method, optimization problems, their solving methods and computation results are formally defined in each pattern based on the System Modeling Language (SysML). In addition, a model description scheme termed an optimization profile is proposed based on SysML to include the components for formalizing different kinds of optimization problems and optimization methods. After an optimization profile is created for an optimization problem, system optimization methods can be chosen automatically from the pattern library based on a semantic similarity evaluation. Then, optimization results are provided to users to support decision-making and the pattern library is updated using the relevant information obtained in this process. A system design example is used to demonstrate the feasibility and effectiveness of proposed methods.
DA  - 2016/08//
PY  - 2016
DO  - 10.1016/j.advengsoft.2016.03.005
VL  - 98
IS  - C
SP  - 23
EP  - 37
SN  - 0965-9978
UR  - https://doi.org/10.1016/j.advengsoft.2016.03.005
KW  - SysML
KW  - Complex mechatronic systems
KW  - Pattern-based integration
KW  - Semantic similarity
KW  - System design
KW  - System optimization
ER  - 

TY  - CONF
TI  - The Event Coordination Notation: Behaviour Modelling Beyond Mickey Mouse
AU  - Jepsen, Jesper
AU  - Kindler, Ekkart
AB  - The Event Coordination NotationECNO allows modelling the desired behaviour of a software system on top of any object-oriented software. Together with existing technologies from Model-based Software EngineeringMBSE for automatically generating the software for the structural parts, ECNO allows generating fully functional software from a combination of class diagrams and ECNO models. What is more, software generated from ECNO models, integrates with existing software and software generated by other technologies.ECNO started out from some challenges in behaviour modelling and some requirements on behaviour modelling approaches, which we pointed out in a paper presented at the second BMFA workshop [1]; the integration with pre-existing software was but one of these requirements.Different ideas and concepts of ECNO have been presented before â mostly with neat and small examples, which exhibit one special aspect of ECNO or another; and it would be fair to call them "Mickey Mouse examples".In this paper, we give a concise overview of the motivation, ideas, and concepts of ECNO. More importantly, we discuss a larger system, which was completely generated from the underlying models: a workflow management system. This way, we demonstrate that ECNO can be used for modelling software beyond the typical Mickey Mouse examples. This example demonstrates that the essence of workflow management â including its behaviour â can be captured in ECNO: in a sense, it is a domain model of workflow management, from which a fully functioning workflow engine can be generated.
C1  - Berlin, Heidelberg
C3  - Revised Selected Papers of the International Workshops on Behavior Modeling â Foundations and Applications - Volume 6368
DA  - 2015///
PY  - 2015
DO  - 10.1007/978-3-319-21912-7_6
SP  - 133
EP  - 164
PB  - Springer-Verlag
SN  - 978-3-319-21911-0
UR  - https://doi.org/10.1007/978-3-319-21912-7_6
KW  - Behaviour modelling
KW  - Code generation
KW  - Event Coordination
KW  - Meta-modelling
KW  - Workflow engine
ER  - 

TY  - CONF
TI  - Immersive Visualization and Course-of-Action Simulation: Towards a Decision Support Simulation System for Data Driven Businesses
AU  - Tolk, Andreas
AU  - Dandashi, Fatma
AU  - Haberlin, Rick
AU  - Chin, Shawn P.
T3  - ANSS '16
AB  - One of MITRE's Agile Enterprise initiatives targets making silo-ed data available to the enterprise. As part of the overall initiative, this research applies a Model-Based Systems Engineering (MBSE) approach with the Systems Modeling Language (SysML), discrete event simulations (DES). The goal is to draw from enterprise data to enable a Decision Maker (DM) to evaluate alternative Courses of Action (COAs) based on numerical insight. Partial results have been realized using a MongoDB to structure relevant enterprise data and present them in a flexible, but common format. Currently, the coherent data view is made accessible to the user via several selected visualization tools â collectively referred to as Immersive Visualization â representing the information in an enterprise context. We propose that using SysML with DEVS makes all characteristics of the enterprise accessible in the form of attributed entities. That is, by including simulation-required components, the information can now be transformed into knowledge. This is accomplished through obtaining numerical insight into the dynamic behavior of the enterprise by identifying and executing performance measures for COAs. Using SysML to specify the simulation components allows storage of these alternative actions in the same MongoDB as one additional component of the enterprise model. This paper describes a prototype, current research, and planned research to provide Decision Support Simulation Systems for Data Driven Businesses.
C1  - San Diego, CA, USA
C3  - Proceedings of the 49th Annual Simulation Symposium
DA  - 2016///
PY  - 2016
PB  - Society for Computer Simulation International
SN  - 978-1-5108-2316-7
KW  - big data
KW  - course of action analyses
KW  - decision support systems
KW  - enterprise data
KW  - visualization
ER  - 

TY  - CONF
TI  - Integration of UML Models in FMI-Based Co-Simulation
AU  - Guermazi, Sahar
AU  - Dhouib, Saadia
AU  - Cuccuru, Arnaud
AU  - Letavernier, Camille
AU  - GÃ©rard, SÃ©bastien
T3  - TMS-DEVS '16
AB  - Due to both an increase of business competition and design constraints, the complexity of Cyber Physical Systems (CPS) is reaching the limits of the human capabilities to think and then to design safe, secure, performant and reliable systems. Extensive use of modeling and simulation (Model-based Systems Engineering) throughout the systems development life-cycle is one of the most important ways to effectively go beyond this limit. One important feature of CPS is their heterogeneity involving designers from several disciplines for multiple interconnected and interactive components. Designing and validating these systems requires co-modeling and co-simulating these heterogeneous components.While simulators and specific modeling tools exist for each individual domain, UML can be used for modeling cyber components, and it is now possible to simulate these models with standard execution semantics by relying on Executable UML OMG specifications. This work aims at providing a co-simulation environment for CPS in Papyrus (the open-source UML/SysML modeler of the Eclipse foundation), to ensure the proper integration of UML models in a co-simulation approach. The approach relies on the co-simulation standard FMI, and the formal semantics foundation of UML (fUML [8]) for the execution of UML models.
C1  - San Diego, CA, USA
C3  - Proceedings of the Symposium on Theory of Modeling & Simulation
DA  - 2016///
PY  - 2016
PB  - Society for Computer Simulation International
SN  - 978-1-5108-2321-1
KW  - co-simulation
KW  - FMI
KW  - CPS
KW  - executable UML
ER  - 

TY  - CONF
TI  - Towards Optimal Supervisory Control of Discrete-Time Stochastic Discrete-Event Processes with Data
AU  - Markovski, Jasen
T3  - ACSD '13
AB  - We propose a model-based systems engineering framework for supervisory control and probabilistic model checking of discrete-time stochastic discrete-event systems. Supervisory control theory deals with synthesis of models of supervisory controllers that ensure safe and nonblocking behavior, based on models of the uncontrolled system and the control requirements. However, guaranteeing only safety and nonblocking properties of the supervised system is not sufficient, and often performance measures must be taken into account. Unfortunately, treating optimality in the synthesis procedure is a costly undertaking. Therefore, we propose to decouple the synthesis of the supervisor that caters for functional aspects of the system from the performance evaluation that considers the quantitative aspects. We provide an appropriate abstraction of the stochastic behavior, which enables us to employ standard supervisory controller synthesis tools. The synthesized supervisor is, thereafter, coupled with the stochastic model of the unsupervised system, and abstracted to a discretetime Markov process, which is fed to a probabilistic model checker to validate the performance requirements.
C1  - USA
C3  - Proceedings of the 2013 13th International Conference on Application of Concurrency to System Design
DA  - 2013///
PY  - 2013
DO  - 10.1109/ACSD.2013.29
SP  - 31
EP  - 40
PB  - IEEE Computer Society
SN  - 978-0-7695-5035-0
UR  - https://doi.org/10.1109/ACSD.2013.29
KW  - probabilistic model checking
KW  - controllability of probabilistic timed systems
KW  - probabilistic timed partial bisimulation
KW  - supervisory control theory
ER  - 

TY  - CONF
TI  - Exploration of Hardware Topologies Based on Functions, Variability and Timing
AU  - Eder, Johannes
T3  - MODELS '18
AB  - This paper gives an overview over a dissertation project in the area of design space exploration for distributed, embedded systems. As the engineering of distributed embedded systems is getting more and more complex due to increasingly sophisticated functionalities demanding more and more powerful hardware, automation is required in order cope with this rising complexity. Using a model based systems engineering approach enables design space exploration methods which provide such automations, given a formalization of the problem in order to be solvable e.g. by SMT solvers.In this thesis we want to provide an automated synthesis of hardware topologies (E/E architectures) based on the functions which are deployed onto this topology and constraints and optimization objectives which are derived from the requirements of the system. The synthesis shall consider variability aspects (possible variants) of the hardware elements. Additionally, timing aspects of the deployed shall be regarded such that the solution of the synthesis is a hardware topology, a deployment of functions onto this topology and a schedule of these functions.The thesis shall be evaluated by using an automotive industrial use case of realistic size.
C1  - New York, NY, USA
C3  - Proceedings of the 21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
DA  - 2018///
PY  - 2018
DO  - 10.1145/3270112.3275333
SP  - 145
EP  - 149
PB  - Association for Computing Machinery
SN  - 978-1-4503-5965-8
UR  - https://doi.org/10.1145/3270112.3275333
ER  - 

TY  - CONF
TI  - DEVS Markov Modeling and Simulation of Activity-Based Models for MBSE Application
AU  - Alshareef, Abdurrahman
AU  - Seo, Chungman
AU  - Kim, Anthony
AU  - Zeigler, Bernard P.
T3  - WSC '21
AB  - DEVS has been proposed as the basic modeling and simulation framework for Model-Based System Engineering (MBSE) methodology that supports the critical stages in top down design of complex systems. Here we propose a novel DEVS Markov simulation for Activity-Based Models to provide a means for experiment design to examine flows in activities with behavioral elements. The approach allows comparing different flows in a seamless manner. Also adjustments to the models become possible that would be costly and harder to maintain otherwise. With application to MBSE in mind, we aim to make such a process support developing more multiple alternatives in complex model design while delegating as much of code modification downstream to advanced automatic code generators. We examine the approach with application to MBSE with an example from the health care domain with different policies and patient flows. Finally, we discuss the remaining challenges and opportunities for further research.
C3  - Proceedings of the Winter Simulation Conference
DA  - 2021///
PY  - 2021
PB  - IEEE Press
ER  - 

TY  - CHAP
TI  - Towards Employing ABM and MAS Integrated with MBSE for the Lifecycle of SCPSoS
AU  - Challenger, Moharram
AU  - Vangheluwe, Hans
T2  - Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
AB  - Cyber-Physical Systems (CPSs) are natural evolutions of embedded systems consisting of embedded computing devices and networks interacting with physical processes and possibly with a human. By introduction of Internet of Things (IoT), and Industry 4.0, CPSs are used in an interconnected way each of which may belong to a different stakeholder, building a complex System of Systems (SoS) called CPSoS. These systems need to employ some techniques to transform the collected data to knowledge with which the system can make better decisions. These capabilities can create smart CPSoS or sCPSoS.However, these systems are highly complex from both structural and behavioural point of views. Naturally, there is a need for multiple abstraction levels using different paradigms to model these system, called Multi-Paradigm modeling (MPM).In this paper, the challenges and opportunities of using agent technologies, including intelligent agents, Agent-based modeling and Simulation (ABM), and Multi-Agent Systems (MAS) (or Agent-oriented Software Engineering (AOSE)) in an integrated way with Model-based System Engineering (MBSE) techniques are discussed to cover the whole lifecycle of sCPSoS, from simulation and analysis, to development, operation and monitoring.
CY  - New York, NY, USA
DA  - 2020///
PY  - 2020
PB  - Association for Computing Machinery
SN  - 978-1-4503-8135-2
UR  - https://doi.org/10.1145/3417990.3421439
ER  - 

TY  - JOUR
TI  - Robust Global Supply Network Design
AU  - Goetschalckx, Marc
AU  - Huang, Edward
AU  - Mital, Pratik
T2  - Inf. Knowl. Syst. Manag.
AB  - It has been widely documented that disruptions and changes in the environment of manufacturing in a global enterprise impact the performance of the enabling supply network. The need exists for a methodology that can not only provide an objective and transparent evaluation of the efficiency and risks of a supply network configuration but that can also design supply network configurations with provably superior performance. Supply chain engineering SCE fundamentally applies the perspective and methodology of systems engineering to the domain of supply chains. SCE is the integrator of various corporate functions such as purchasing, production, distribution, and sustainment over the total product life cycle from design, through deployment, production, sustainment, and disposal. A supply chain is actually a network that consists of a diverse set of organizational and geographical components that typically change over time. The systematic design and management of such an inherently complex system requires the principles and tools of model-based systems engineering. A comprehensive and integrated model of the structure and the behavior of the supply network of a manufacturing enterprise has been developed. In this model the inherent uncertainty of the future environmental conditions in which the supply network will have to function is captured in a large number of scenarios. The variability of the profits achieved by the supply network for the various scenarios is used as a proxy for the supply network risk. The model allows for the explicit tradeoff of the systems life cycle profit with the variability of this profit. An efficient solution algorithm eliminates the vast majority of feasible supply network configurations from consideration and identifies all the Pareto-optimal configurations. However, the final selection of the network configuration depends on the risk preferences of the designer and the complexity of the enterprise. Selecting the supply network configuration with the appropriate robustness becomes one of the principal risk mitigation policies for the network and, in turn, the enterprise. The combination of the socio designer risk preferences and analysis and technical Pareto-optimization of all feasible supply network configurations creates a transparent engineering design process that finds the supply network configuration best matched to the objectives of the manufacturing enterprise.
DA  - 2012/01//
PY  - 2012
VL  - 11
IS  - 1,2
SP  - 119
EP  - 130
SN  - 1389-1995
KW  - Modeling-Based Decision Support
KW  - Risk-Based Design
KW  - Robust Systems Design
KW  - Supply Chain And Network Design
KW  - Supply Chain Risk Management
ER  - 

TY  - CONF
TI  - Towards a Unified Theory of Validation
AU  - Bair, Lisa Jean
AU  - Tolk, Andreas
T3  - WSC '13
AB  - The modeling and simulation (M&amp;S) literature is rich with procedures, standards, conceptual frameworks, and M&amp;S-related theories that provide frames of reference for M&amp;S validation. However, these works are disjoint, leading to inconsistencies: common terms used differently, differing terms for similar concepts, varying degrees of detail, and conflicting assumptions. There is no single, unifying frame of reference for validation. This has restricted the development of a common theoretical and practical understanding of validation across the M&amp;S field. This paper introduces the concept of a validation frame of reference; builds a taxonomy of using frames of reference found in the validation literature; and proposes the creation of a unifying theoretical framework for M&amp;S validation to build a foundation for the development of a paradigm of common theoretical and practical understanding of validation across the M&amp;S field.
C3  - Proceedings of the 2013 Winter Simulation Conference: Simulation: Making Decisions in a Complex World
DA  - 2013///
PY  - 2013
SP  - 1245
EP  - 1256
PB  - IEEE Press
SN  - 978-1-4799-2077-8
ER  - 

TY  - JOUR
TI  - Toward the Tools Selection in Model Based System Engineering for Embedded Systems-A Systematic Literature Review
AU  - Rashid, Muhammad
AU  - Anwar, Muhammad Waseem
AU  - Khan, Aamir M.
T2  - J. Syst. Softw.
AB  - Recent model based system engineering (MBSE) approaches pertaining to embedded systems were identified.Systematic literature review (SLR) was used to identify the emerging trends.39 tools were identified for various MBSE activities.Evaluation of identified tools was presented. Model based system engineering (MBSE) is a systematic approach of modeling which is frequently used to support requirement specification, design, verification and validation activities of system development. However, it is difficult to customize MBSE approach for the development of embedded systems due to their diverse behavioral aspects. Furthermore, appropriate tools selection to perform particular MBSE activities is always challenging. This paper focuses on the identification and classification of recent research practices pertaining to embedded systems development through MBSE approach. Consequently, a comprehensive analysis of various MBSE tools has been presented. Systematic literature review (SLR) has been used to identify 61 research practices published during 2008-2014. The identified researches have been classified into six different categories to analyze various aspects of MBSE approach for embedded systems. Consequently, 39 preliminary tools are identified that have been used in recent researches. Furthermore, classification and evaluation of tools have been presented. This research highlights important trends and approaches of MBSE to support development of embedded systems. A comprehensive investigation of tools in this article facilitates researchers, practitioners and developers to select appropriate tools according to their requirements. Display Omitted
DA  - 2015/08//
PY  - 2015
DO  - 10.1016/j.jss.2015.04.089
VL  - 106
IS  - C
SP  - 150
EP  - 163
SN  - 0164-1212
UR  - https://doi.org/10.1016/j.jss.2015.04.089
KW  - MBSE
KW  - Embedded systems
KW  - Tools
ER  - 

TY  - CHAP
TI  - SysML Models: Studying Safety and Security Measures Impact on Performance Using Graph Tainting
AU  - Zoor, Maysam
AU  - Apvrille, Ludovic
AU  - Pacalet, Renaud
T2  - Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings
AB  - Designing safe, secure and efficient embedded systems implies understanding interdependences between safety, security and performance requirements and mechanisms. In this paper, we introduce a new technique for analyzing the performance impact of safety/security implemented as hardware and software mechanisms and described in SysML models. Our analysis approach extracts a dependency graph from a SysML model. The SysML model is then simulated to obtain a list of simulation transactions. Then, to study the latency between two events of interest, we progressively taint the dependency graph according to simulation transactions and to dependencies between all software and hardware components. The simulation transactions are finally classified according to which vertex taint they correspond, and are displayed according to their timing and related hardware device. Thus a designer can easily spot which components need to be re-modeled in order to meet the performance requirement. A Rail Carriage use case studied in the scope of the H2020 AQUAS project illustrates our approach, in particular how tainting can handle the multiple occurrences of the same event.
CY  - New York, NY, USA
DA  - 2020///
PY  - 2020
PB  - Association for Computing Machinery
SN  - 978-1-4503-8135-2
UR  - https://doi.org/10.1145/3417990.3419225
ER  - 

TY  - CONF
TI  - Model-Based Development and Simulative Verification of Logical Vehicle Functions Using Executable UN/ECE Regulations
AU  - Neubauer, Kevin
AU  - Bucher, Harald
AU  - Haas, Benedikt
AU  - Becker, JÃ¼rgen
T3  - SummerSim '20
AB  - On the way towards autonomous driving, a steadily increasing number of Advanced Driver Assistance Systems leads to a tremendous test effort to approve their safe operation. However, route-based real-world tests cannot cover this effort sufficiently which is why virtual testing has become part of the vehicle development and approval process as well. Since regulations such as those of the United Nations Economic Commission for Europe, are mandatory for vehicle approval there is a need to integrate their prescribed test scenarios into virtual test environments. In this paper, we present a novel approach to transform these textually available scenarios into executable state machines. It is complemented by a holistic simulation-based verification where model-based vehicle functions are stimulated by sensor data of the virtual vehicle under test to achieve meaningful and more realistic results. We prototyped a tool-chain to execute approval-related test scenarios on the example of an Advanced Emergency Braking System.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2020 Summer Simulation Conference
DA  - 2020///
PY  - 2020
PB  - Society for Computer Simulation International
SN  - 978-1-71381-429-0
KW  - simulation
KW  - E/E architecture
KW  - homologation
KW  - model-based
KW  - verification
ER  - 

TY  - CONF
TI  - Edge Federation Simulator for Data Stream Analytics
AU  - CÃ¡rdenas, RomÃ¡n
AU  - Arroba, Patricia
AU  - Moya, JosÃ© M.
AU  - Risco-MartÃ­n, JosÃ© L.
T3  - SummerSim '19
AB  - The technological revolution of the Internet of Things (IoT) is transforming our society by registering and analyzing users and infrastructures' behavior in order to develop new services for improving life quality and resource management. IoT-based applications demand a vast amount of both localized and location-based information services. For these scenarios, current cloud-based services appear to be inefficient in terms of latency, throughput and power consumption. Edge computing proposes new infrastructures for effective real-time decision making. These facilities should be able to process a vast amount of data from multiple geographically distributed sources. To that end, new urban edge data centers are to be deployed, bringing computing resources closer to data sources while reducing both core network congestion and overall energy demand. This paper presents an Edge Federation simulator for data stream analytics in a 5G scenario that provides the necessary resource management for efficient service-oriented computing.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2019 Summer Simulation Conference
DA  - 2019///
PY  - 2019
PB  - Society for Computer Simulation International
KW  - MBSE
KW  - DEVS
KW  - driving assistance
KW  - edge computing
ER  - 

TY  - CONF
TI  - Bringing DSE to Life: Exploring the Design Space of an Industrial Automotive Use Case
AU  - Eder, Johannes
AU  - Zverlov, Sergey
AU  - Voss, Sebastian
AU  - Khalil, Maged
AU  - Ipatiov, Alexandra
T3  - MODELS '17
AB  - In order to cope with the rising complexity of today's systems, model-based development of software-intensive embedded systems has become a de-facto standard in recent years. Such a development approach enables a variety of front-loading methods. Design space exploration is one of those techniques. However, in order to properly perform a valid exploration, a system model has to have a certain quality. This requires dedicated, meaningful models as an input according to well-known design principles, which entails the structuring of models according to different viewpoints and usage of dedicated models for each of these viewpoints.In this work, we demonstrate how, based on an industrial application model represented in SysML, design space exploration methods can be efficiently applied to enable the synthesis of deployments from a logical (platform-independent) system models to technical (platform-specific) system models. Moreover, we will demonstrate the applicability of this approach by a project conducted with Continental.
C3  - Proceedings of the ACM/IEEE 20th International Conference on Model Driven Engineering Languages and Systems
DA  - 2017///
PY  - 2017
DO  - 10.1109/MODELS.2017.36
SP  - 270
EP  - 280
PB  - IEEE Press
SN  - 978-1-5386-3492-9
UR  - https://doi.org/10.1109/MODELS.2017.36
KW  - deployment
KW  - design space exploration
KW  - mbse
ER  - 

TY  - JOUR
TI  - A Graph Grammar-Based Formal Validation of Object-Process Diagrams
AU  - Bibliowicz, Arieh
AU  - Dori, Dov
T2  - Softw. Syst. Model.
AB  - Two basic requirements from a system's conceptual model are correctness and comprehensibility. Most modeling methodologies satisfy only one of these apparently contradicting requirements, usually comprehensibility, leaving aside problems of correctness and ambiguousness that are associated with expressiveness. Some formal modeling languages do exist, but in these languages a complete model of a complex system is fairly complicated to understand. Object-process methodology (OPM) is a holistic systems modeling methodology that combines the two major aspects of a systemâstructure and behaviorâin one model, providing mechanisms to manage the complexity of the model using refinement-abstraction operations, which divide a complex system into many interconnected diagrams. Although the basic syntax and semantics of an OPM model are defined, they are incomplete and leave room for incorrect or ambiguous models. This work advances the formal definition of OPM by providing a graph grammar for creating and checking OPM diagrams. The grammar provides a validation methodology of the semantic and syntactic correctness of a single object-process diagram.
DA  - 2012/05//
PY  - 2012
VL  - 11
IS  - 2
SP  - 287
EP  - 302
SN  - 1619-1366
KW  - Formal system model
KW  - Graph transformation
KW  - Model verification
KW  - Object-process modeling
ER  - 

TY  - CONF
TI  - Cross-Layer Behavioral Modeling and Simulation of E/E-Architectures Using Preevision and Ptolemy II
AU  - Bucher, Harald
AU  - Becker, JÃ¼rgen
AU  - Kamm, Simon
T3  - SummerSim '19
AB  - In this paper, an approach for integrated behavior modeling and simulation within model-based electric/electronic-architecture (EEA) descriptions is presented. It leverages actor-oriented and UML state chart behavior modeling to address complex reactive systems. A key contribution is the aggregation of cross-layer behavior specified at the logical function architecture layer and at the hardware layer together with further properties of the EEA, such as the current consumption of electronic control units (ECUs), the underlying network topology and execution aspects of functions. The EEA and behavior modeling is done in the common industry tool PREEvision. Using these static descriptions, a unified simulation model is synthesized and executed using Ptolemy II, which extends a previously developed approach. In addition, a general concept to feed back the simulation data into PREEvision is briefly described e.g., to further evaluate the gained results. Finally, a proof-of-concept is presented using an Adaptive Cruise Control application.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2019 Summer Simulation Conference
DA  - 2019///
PY  - 2019
PB  - Society for Computer Simulation International
KW  - MBSE
KW  - automotive E/E-Architectures
KW  - PREEvision
KW  - Ptolemy II
KW  - state charts
ER  - 

TY  - CONF
TI  - Simulation of an Electrical Network and Control System in SysML
AU  - Hause, Matthew
AU  - Hummell, James
T3  - TMS/DEVS '12
AB  - Modeling of the electrical grid is normally done using bespoke or custom tools and programs rather than generic modeling languages. This requires the engineer to develop the complete simulation system from scratch. In addition, it is difficult to model from different viewpoints and levels of abstraction. The models are normally created from a single perspective to solve a specific problem or analyze the system from a single point of view. The Systems Modeling Language (SysML) was developed by INCOSE and the OMG to provide general purpose modeling language for systems. Most published examples of SysML are of electro-mechanical software intensive systems in the aerospace and transportation industries. This paper documents a work in progress by the author to develop a model of an example electrical network, including the user interface to show how SysML can be used to model complex systems of systems. In addition, it shows how a simulation tool integrated with SysML provides a means of integrating multiple paradigms as well as a Human Computer Interface to the simulation.
C1  - San Diego, CA, USA
C3  - Proceedings of the 2012 Symposium on Theory of Modeling and Simulation - DEVS Integrative M&S Symposium
DA  - 2012///
PY  - 2012
PB  - Society for Computer Simulation International
SN  - 978-1-61839-786-7
KW  - SysML
KW  - MBSE
KW  - simulation
KW  - electrical network
KW  - executable models
KW  - interfaces
ER  - 

TY  - CONF
TI  - Model-Based System Verification: A Formal Framework for Relating Analyses, Requirements, and Tests
AU  - Kerzhner, Aleksandr A.
AU  - Paredis, Christiaan J. J.
T3  - MODELS'10
AB  - As modern systems become increasingly complex, there is a growing need to support the systems engineering process with a variety of formal models, such that the team of experts involved in the process can express and share knowledge precisely, succinctly and unambiguously. However, creating such formal models can be expensive and timeconsuming, making a broad exploration of different system architectures cost-prohibitive. In this paper, we investigate an approach for reducing such costs and hence enabling broader architecture space exploration-through the use of model transformations. Specifically, a method is presented for verifying design alternatives with respect to design requirements through automated generation of analyses from formal models of the systems engineering problem. Formal models are used to express the structure of design alternatives, the system requirements, and experiments to verify the requirements as well as the relationships between the models. These formal models are all represented in a common modeling language, the Object Management Group's Systems Modeling Language (OMG SysMLâ¢). To then translate descriptive models of system alternatives into a set of corresponding analysis models, a model transformation approach is used to combine knowledge from the experiment models with knowledge from reusable model libraries. This set of analysis models is subsequently transformed into executable simulations, which are used to guide the search for suitable system alternatives. To facilitate performing this search using commercially available optimization tools, the analyses are represented using the General Algebraic Modeling System (GAMS). The approach is demonstrated on the design of a hydraulic subsystem for a log splitter.
C1  - Berlin, Heidelberg
C3  - Proceedings of the 2010 International Conference on Models in Software Engineering
DA  - 2010///
PY  - 2010
SP  - 279
EP  - 292
PB  - Springer-Verlag
SN  - 978-3-642-21209-3
KW  - systems engineering
KW  - model integration
KW  - model to model transformation
KW  - requirements modeling
KW  - sysML
ER  - 

TY  - JOUR
TI  - EQUITAS
T2  - Microprocess. Microsyst.
AB  - To support advanced features such as hybrid engine control, intelligent energy management, and advanced driver assistance systems, automotive embedded systems must use advanced technologies. As a result, systems are becoming distributed and include dozens of Electronic Control Units (ECU). On the one hand, this tendency raises the issue of robustness and reliability, due to the increase in the error ratio with the integration level and the clock frequency. On the other hand, due to a lack of automation, software Validation and Verification (V&amp;V) tends to swallow up 40% to 50% of the total development cost. The âEnhanced Quality Using Intensive Test Analysis on Simulatorsâ (EQUITAS11This work was financially supported by Bpifrance AAP FUI16 project EQUITAS and the General Counsel of Essonne (Conseil GÃ©nÃ©ral de l'Essonne-France). It is supported by competitiveness clusters System@tic, iTrans and ID4CAR) project aims (1) to improve reliability and functional safety and (2) to limit the impact of software V&amp;V on embedded systems costs and time-to-market. These two achievements are obtained by (1) developing a continuous tool-chain to automate the V&amp;V process, (2) improving the relevance of the test campaigns by detecting redundant tests using equivalence classes, (3) providing assistance for hardware failure effect analysis (FMEA) and finally (4) assessing the tool-chain under the ISO 26262 requirements.
DA  - 2016/11//
PY  - 2016
DO  - 10.1016/j.micpro.2016.07.020
VL  - 47
IS  - PB
SP  - 252
EP  - 261
SN  - 0141-9331
UR  - https://doi.org/10.1016/j.micpro.2016.07.020
ER  - 

TY  - CHAP
TI  - Chaining Model Transformations to Develop a System Model Verification Tool: Application to Capella State Machines and Data Flows Models
AU  - Duhil, Christophe
AU  - Babau, Jean-Philippe
AU  - LÃ©picier, Eric
AU  - Voirin, Jean-Luc
AU  - Navas, Juan
T2  - Proceedings of the 35th Annual ACM Symposium on Applied Computing
AB  - In the context of model-based system engineering (MBSE), the need emerges for model verification tools aiming at detecting inconsistencies in the dynamic behavioral aspect of the design. In this paper, a model-based approach is proposed to develop model verification tools. The approach allows targeting different semantics and facilitates the reuse of legacy semantics. The idea is to enforce separation of concerns, by progressively defining a behavioral semantic through a chain of five model transformation steps. The approach ensures traceability between source models and target models, facilitating the interpretation of the verification results. We apply the approach to develop a tool to verify Capella models, allowing simulation of the data flow and state machines diagrams in order to verify their coherency. An experimentation on a clock-radio case study demonstrates the ability of the generated tool to catch design inconsistencies.
CY  - New York, NY, USA
DA  - 2020///
PY  - 2020
SP  - 1654
EP  - 1657
PB  - Association for Computing Machinery
SN  - 978-1-4503-6866-7
UR  - https://doi.org/10.1145/3341105.3374093
ER  - 

TY  - CONF
TI  - Model-Based Reconfiguration Planning for a Distributed On-Board Computer
AU  - Kovalov, Andrii
AU  - Franz, Tobias
AU  - Watolla, Hannes
AU  - Vishav, Vishav
AU  - Gerndt, Andreas
AU  - LÃ¼dtke, Daniel
T3  - SAM '20
AB  - The ScOSA project (Scalable On-board Computing for Space Avionics) of the German Aerospace Center aims at combining radiation hardened space hardware together with unreliable, but high performance COTS (commercial off-the-shelf) components as the processing nodes in a heterogeneous on-board network in order to provide future space missions with the necessary processing capabilities. However, such a system needs to cope with node failures. Our approach is to use a static reconfiguration graph that controls how software tasks are mapped to the processing nodes, and how this mapping should change in response to possible node failures.In this paper we present a model-based approach and a tool for automatic generation of reconfiguration graphs. Based on the software and hardware models, we traverse the graph of all possible failure situations. For every node of this graph we solve a combinatorial optimization problem of mapping tasks to processing nodes either with an SMT solver or using a genetic algorithm. The resulting reconfiguration graph can then be translated into the configuration files that are deployed on the target system, eliminating the need for tedious and error-prone manual configuration design.
C1  - New York, NY, USA
C3  - Proceedings of the 12th System Analysis and Modelling Conference
DA  - 2020///
PY  - 2020
DO  - 10.1145/3419804.3420266
SP  - 55
EP  - 62
PB  - Association for Computing Machinery
SN  - 978-1-4503-8140-6
UR  - https://doi.org/10.1145/3419804.3420266
KW  - MBSE
KW  - Modeling
KW  - Task-node mapping
ER  - 

TY  - JOUR
TI  - An Aspect-Oriented, Model-Driven Approach to Functional Hardware Verification
AU  - Linehan, Eamonn
AU  - Clarke, SiobhÃ¡n
T2  - J. Syst. Archit.
AB  - The cost of correcting errors in the design of an embedded system's hardware components can be higher than for its software components, making it important to test as early as possible. Testing hardware components before they are implemented involves verifying the design through either formal or more commonly, simulation-based functional verification. Performing functional verification of a hardware design requires software-based simulators and verification testbenches. However, the increasing complexity of embedded systems is contributing to testbenches that are progressively more difficult to understand, maintain, extend and reuse across projects. This paper presents an aspect-oriented domain-specific modelling language for the e hardware verification language that can be used as part of a model-based software engineering process. The modelling language is designed to produce well modularised models from which e code can be generated, thereby improving engineers ability to develop testbenches that can be more easily maintained, adapted and reused. We demonstrate the suitability of the modelling language through its application to a representative testbench from the automotive semiconductor industry.
DA  - 2012/04//
PY  - 2012
DO  - 10.1016/j.sysarc.2011.02.001
VL  - 58
IS  - 5
SP  - 195
EP  - 208
SN  - 1383-7621
UR  - https://doi.org/10.1016/j.sysarc.2011.02.001
KW  - Code generation
KW  - Aspect-oriented programming
KW  - DSML
KW  - Hardware verification
KW  - MARTE
KW  - Model-based software engineering
KW  - Theme/UML
ER  - 

TY  - CONF
TI  - Metamodeling Activities for Hierarchical Component-Based Models
AU  - Alshareef, Abdurrahman
AU  - Sarjoughian, Hessam
T3  - TMS '19
AB  - Abstractions are necessary to facilitate grounding and managing model development and simulation experiments. Understanding the specific roles of different artifacts in abstractions is important to enrich the model development process. Actions and states reveal certain unique aspects about system behavior within and among component models. However, behavior specifications are not explicit and adequately supported in state-based formalisms. In this paper, we examine the role of actions in model specification in accordance with the notion of state in the modular and hierarchical parallel DEVS formalism. The resulting approach relies on the profoundness of DEVS while having a more intuitive abstraction around it via hierarchical activity metamodeling. Together the activity and DEVS modeling help simplify and strengthen specifying complex system behaviors as composition of atomic and coupled models. We show the importance of hierarchical DEVS activity modeling approach with a coordinator model as a part of a dual-server model.
C1  - San Diego, CA, USA
C3  - Proceedings of the Theory of Modeling and Simulation Symposium
DA  - 2019///
PY  - 2019
PB  - Society for Computer Simulation International
KW  - abstraction
KW  - action
KW  - activity
KW  - behavior
KW  - specification
ER  - 

TY  - CONF
TI  - Integrated Modeling Methodologies and Languages
AU  - Al-Fedaghi, Sabah
AU  - Alahmad, Haya
T3  - IMCOM '18
AB  - Two 1 state-of-the-art languages being used in the field of integrated modeling and management of systems are OMG Systems Modeling Language (SysML) and Object-Process Methodology (OPM). SysML is based on UML 2, a de-facto standard in software engineering. OPM is chartered as ISO/PAS 19450 for system and process modeling. Aspects of these two diverse modeling methodologies have been comparatively analyzed and examined. This paper points to yet another approach that takes a methodology oriented to flow of things to provide an underlying conceptual model on which to construct a fundamental representation of the information or physical system. Adopting a similar analysis technique of comparing SysML and OPM, we examine features of a flow of things orientation based on a concrete sample problem. To demonstrate the feasibility of this methodology in a real environment, we present a case study of an actual IT department of a government ministry, and the results point to the viability of the approach as a foundation for modeling and management of systems.
C1  - New York, NY, USA
C3  - Proceedings of the 12th International Conference on Ubiquitous Information Management and Communication
DA  - 2018///
PY  - 2018
DO  - 10.1145/3164541.3164605
PB  - Association for Computing Machinery
SN  - 978-1-4503-6385-3
UR  - https://doi.org/10.1145/3164541.3164605
KW  - UML
KW  - behavior
KW  - conceptual modeling
KW  - object
KW  - OPM
KW  - Process
KW  - user modeling
ER  - 

TY  - JOUR
TI  - Evaluation of Systems-of-Systems Software Architectures: State of the Art and Future Perspectives
AU  - Santos, Daniel S.
AU  - Oliveira, Brauner R. N.
AU  - Kazman, Rick
AU  - Nakagawa, Elisa Y.
T2  - ACM Comput. Surv.
AB  - The quality of large and complex Systems-of-Systems (SoS) that have emerged in critical application domains depends on the quality of their architectures, which are inherently dynamic in terms of reorganization at runtime to comply with domain needs. However, the way to model and evaluate the quality of these architectures is not clear. This article presents the state of the art regarding how SoS architectures have been evaluated. For this, we systematically examined the literature and, as a result, we discovered and summarized relevant architectural evaluation methods and associated modeling techniques and quality attributes, the maturity of these methods, as well as the benefits and costs of adopting them. We also address open issues and research opportunities and recommend that the mindset for SoS architecture evaluation must be changed to ensure the quality of SoS in critical domains.
DA  - 2022/02//
PY  - 2022
DO  - 10.1145/3519020
SN  - 0360-0300
UR  - https://doi.org/10.1145/3519020
KW  - Architecture Evaluation
KW  - Software Architecture
KW  - Software Quality
KW  - System-of-Systems
ER  - 

TY  - JOUR
TI  - Using Formal Methods with SysML in Aerospace Design and Engineering
AU  - Graves, Henson
AU  - Bijan, Yvonne
T2  - Annals of Mathematics and Artificial Intelligence
AB  - Maintaining design consistency is a critical issue for macro-level aerospace development. The inability to maintain design consistency is a major contributor to cost and schedule overruns. By embedding The Systems Modeling Language (SysML) within a formal logic, formal methods can be used to maintain consistency as a design evolves. SysML, provided with a formal semantics, enables engineers to employ reasoning in the course of a typical model-based development process. Engineers can make use of formal methods within the context of current engineering practice and tools without needing to have special formal methods training. As component subsystems are introduced to refine a design, their assumptions are checked against current assumptions. If new assumptions do not introduce inconsistency, they are added to the model assumptions. If the assumptions render the design inconsistent, they are detected which minimizes potential rework. SysML has a demonstrated capability for top-to-bottom design refinement for large-scale aerospace systems. SysML does not have a formal logic-based semantics. The logical formalism within which SysML is embedded matches the informal semantic of SysML closely. The approach to integrating formal methods with SysML is illustrated with a typical macro-level aerospace design task. The design process produces a design solution which provably satisfies the top level requirements. The example provides evidence that coupling formal methods with SysML can realistically be applied to solve aerospace development problems. The approach results from a number of detailed design trades employing a model-based system development process which used SysML as the model integration framework.
DA  - 2011/09//
PY  - 2011
DO  - 10.1007/s10472-011-9267-5
VL  - 63
IS  - 1
SP  - 53
EP  - 102
SN  - 1012-2443
UR  - https://doi.org/10.1007/s10472-011-9267-5
KW  - SysML
KW  - MBSE
KW  - 03B70
KW  - 03C60
KW  - 03C98
KW  - 03G30
KW  - 18B25
KW  - 18C10
KW  - 18C50
KW  - 68Q60
KW  - 68T30
KW  - Description logic
KW  - Design by refinement
KW  - OWL
KW  - Type theory
ER  - 

TY  - JOUR
TI  - Towards an Integrated Conceptual Design Evaluation of Mechatronic Systems
AU  - Chami, Mohammad
AU  - Bruel, Jean-Michel
T2  - Procedia Comput. Sci.
AB  - Mechatronic systems play a significant role in different types of industry, especially in trans- portation, aerospace, automotive and manufacturing. Although their multidisciplinary nature provides enormous functionalities, it is still one of the substantial challenges which frequently impede their design process. Notably, the conceptual design phase aggregates various engi- neering disciplines, project and business management fields, where different methods, modeling languages and software tools are applied. Therefore, an integrated environment is required to intimately engage the different domains together. This paper outlines a model-based research approach for an integrated conceptual design evaluation of mechatronic systems using SysML. Particularly, the state of the art is highlighted, most important challenges, remaining problems in this field and a novel solution is proposed, named SysDICE, combining model based system engineering and artificial intelligence techniques to support for achieving efficient design.
DA  - 2015/09//
PY  - 2015
DO  - 10.1016/j.procs.2015.05.180
VL  - 51
IS  - C
SP  - 650
EP  - 659
SN  - 1877-0509
UR  - https://doi.org/10.1016/j.procs.2015.05.180
KW  - SysML
KW  - Design Evaluation
KW  - Mechatronics Design
KW  - SysDICE
KW  - System Modeling
ER  - 

TY  - JOUR
TI  - Integrating Simulation and Numerical Analysis in the Evaluation of Generalized Stochastic Petri Nets
AU  - Zimmermann, Armin
AU  - Hotz, Thomas
T2  - ACM Trans. Model. Comput. Simul.
AB  - The standard existing performance evaluation methods for discrete-state stochastic models such as Petri nets either generate the reachability graph followed by a numerical solution of equations or use some variant of simulation. Both methods have characteristic advantages and disadvantages depending on the size of the reachability graph and type of performance measure.This article proposes a hybrid performance evaluation algorithm for the steady-state solution of Generalized Stochastic Petri Nets that integrates elements of both methods. It automatically adapts its behavior depending on the available size of main memory and number of model states. As such, the algorithm unifies simulation and numerical analysis in a joint framework. It is proved to result in an unbiased estimator whose variance tends to zero with increasing simulation time.The article extends earlier results with an algorithm variant that starts with a small maximum number of particles and increases them during the run to increase the efficiency in cases that are rapidly solved by regular simulation. The algorithmâs applicability is demonstrated through case studies, including an example where it outperforms the standard methods.
DA  - 2019/11//
PY  - 2019
DO  - 10.1145/3321518
VL  - 29
IS  - 4
SN  - 1049-3301
UR  - https://doi.org/10.1145/3321518
KW  - Simulation
KW  - generalized stochastic Petri net
KW  - Markov chain
KW  - numerical analysis
ER  - 

TY  - JOUR
TI  - From Lustre to Simulink: Reverse Compilation for Embedded Systems Applications
AU  - Bourbouh, Hamza
AU  - Garoche, Pierre-LoÃ¯c
AU  - Garion, Christophe
AU  - Thirioux, Xavier
T2  - ACM Trans. Cyber-Phys. Syst.
AB  - Model-based design is now unavoidable when building embedded systems and, more specifically, controllers. Among the available model languages, the synchronous dataflow paradigm, as implemented in languages such as MATLAB Simulink or ANSYS SCADE, has become predominant in critical embedded system industries. Both of these frameworks are used to design the controller itself but also provide code generation means, enabling faster deployment to target and easier V&amp;V activities performed earlier in the design process, at the model level. Synchronous models also ease the definition of formal specification through the use of synchronous observers, attaching requirements to the model in the very same language, mastered by engineers and tooled with simulation means or code generation.However, few works address the automatic synthesis of MATLAB Simulink annotations from lower-level models or code. This article presents a compilation process from Lustre models to genuine MATLAB Simulink, without the need to rely on external C functions or MATLAB functions. This translation is based on the modular compilation of Lustre to imperative code and preserves the hierarchy of the input Lustre model within the generated Simulink one. We implemented the approach and used it to validate a compilation toolchain, mapping Simulink to Lustre and then C, thanks to equivalence testing and checking. This backward compilation from Lustre to Simulink also provides the ability to produce automatically Simulink components modeling specification, proof arguments, or test cases coverage criteria.
DA  - 2021/07//
PY  - 2021
DO  - 10.1145/3461668
VL  - 5
IS  - 3
SN  - 2378-962X
UR  - https://doi.org/10.1145/3461668
KW  - Simulink
KW  - equivalence checking
KW  - formal verification
KW  - Model-based design
KW  - translation validation
ER  - 

TY  - JOUR
TI  - Model Based Control System Design Using SysML, Simulink, and Computer Algebra System
AU  - Sakairi, Takashi
AU  - Palachi, Eldad
AU  - Cohen, Chaim
AU  - Hatsutori, Yoichi
AU  - Shimizu, Junya
AU  - Miyashita, Hisashi
T2  - J. Control Sci. Eng.
AB  - The Systems Modeling Language (SysML) is a standard, general-purpose, modeling language formodel-based systems engineering (MBSE). SysML supports the specification, analysis, and design of a broad range of complex systems such as control systems. The authors demonstrate how they can integrate a SysML modeling tool (IBM Rational Rhapsody) with a proprietary simulation tool (Math Works Simulink) and a Computer Algebra System (CAS) to validate system specification. The integration with Simulink enables users to perform systems engineering process in a SysML model, while designing continuous control algorithms and plant behavior in Simulink, and to validate the behavior by simulating the overall composition in Simulink. The integration with a CAS enables the evaluation of mathematical constraints defined in SysML parametric diagrams. The authors also show the overall approach using a Dual Clutch Transmission (DCT) and a Cruise Control System as examples.
DA  - 2013/01//
PY  - 2013
DO  - 10.1155/2013/485380
VL  - 2013
SN  - 1687-5249
UR  - https://doi.org/10.1155/2013/485380
ER  - 

TY  - CONF
TI  - A Model Based Systems Engineering Approach for Behavioral Responses to Advanced Quantitative Precipitation Information.
AU  - Brooks, William
AU  - Chandrasekar, V.
AU  - Pratt, Greg
AU  - Cifelli, Robert
C3  - IEEE International Systems Conference, SysCon 2021, Vancouver, BC, Canada, April 15 - May 15, 2021
DA  - 2021///
PY  - 2021
DO  - 10.1109/SysCon48628.2021.9447116
SP  - 1
EP  - 6
UR  - https://doi.org/10.1109/SysCon48628.2021.9447116
ER  - 

TY  - CONF
TI  - Applying Model-Based Systems Engineering to the Development of a Test and Evaluation Tool for Unmanned Autonomous Systems
AU  - S. Gebreyohannes
AU  - A. Karimoddini
AU  - A. Homaifar
T2  - 2020 IEEE International Systems Conference (SysCon)
AB  - In this paper, we apply the Model-Based Systems Engineering (MBSE) concepts and approaches to the early phases of the development of a Test &amp; Evaluation (T&amp;E) tool for Unmanned Autonomous Systems (UASs). This helps meet the design requirements and maintain traceability (of design requirements and decisions for satisfying stakeholder's needs). UAS development is driving toward increasing levels of autonomy for unmanned systems. The dynamic, non-deterministic behavior of intelligent autonomous systems presents the testers with a significant challenge. The ability to predict the behavior and evaluate performance of increasingly intelligent systems, especially those that employ vision-based behaviors, is seen as a critical T&amp;E shortfall. To address this challenge, we propose, in this paper, to use a high-fidelity simulation environment. This can significantly aid in the evaluation of UAS behaviors and their perception mechanisms. Such a high-fidelity simulator enables the testes to safely conduct a wide variety of mission scenarios to test an autonomous system by providing truth data to compare with the UAS's perceptions. A major challenge here is to manage the system modeling complexity and maintain traceability of design decisions made at each level of the development to meet stakeholder's needs. In this paper, we follow MBSE methodology and use Systems Modeling Language (SysML - a domain-specific modeling language for systems engineering used to specify, analyze, design, optimize, and verify systems) to establish a systematic framework for designing a T&amp;E tool for UASs and to transform stakeholder's needs into design requirements to maintain traceability.
C3  - 2020 IEEE International Systems Conference (SysCon)
DA  - 2020/09/24/Aug.-20
PY  - 2020
DO  - 10.1109/SysCon47679.2020.9275894
SP  - 1
EP  - 7
SN  - 2472-9647
KW  - Model-Based Systems Engineering
KW  - Tools
KW  - Modeling
KW  - Analytical models
KW  - Autonomous systems
KW  - Systems engineering and theory
KW  - Systems Modeling Language
KW  - Test & Evaluation
KW  - Testing
KW  - Unmanned Autonomous Systems
ER  - 

TY  - CONF
TI  - Model-based systems engineering of automotive systems
AU  - G. H. Fisher
T2  - 17th DASC. AIAA/IEEE/SAE. Digital Avionics Systems Conference. Proceedings (Cat. No.98CH36267)
AB  - The primary products of systems engineers all seem to be documents such, as specifications and trade-off studies. Communicating the requirements to hardware and software designers with documents is fraught with problems. By using a model-based approach to systems engineering, there is no ambiguity. The model fully defines the functional behavior, inputs and outputs, and the physical architecture, as well as the performance and resource requirements. This method provides a unified, consistent and traceable design. This paper describes the design of the Automotive Personal Assistance System (APAS) exploiting the features of the Global Positioning System, which is similar to the Cadillac OnStar System. It includes the entire systems engineering life cycle, from source requirements analysis, through behavior analysis and physical architecture, to verification and validation. The behavior model can be fully executed to verify its correctness long before money is wasted building prototypes. The use of the model-based approach will aid in the reduction of product cost and the increase in product quality.
C3  - 17th DASC. AIAA/IEEE/SAE. Digital Avionics Systems Conference. Proceedings (Cat. No.98CH36267)
DA  - 1998/11/31/Oct.-7
PY  - 1998
DO  - 10.1109/DASC.1998.741455
VL  - 1
SP  - B15/1
EP  - B15/7 vol.1
KW  - Software design
KW  - Systems engineering and theory
KW  - Automotive engineering
KW  - Buildings
KW  - Computer architecture
KW  - Costs
KW  - Design engineering
KW  - Global Positioning System
KW  - Hardware
KW  - Prototypes
ER  - 

TY  - CONF
TI  - Model-Based Systems Engineering of Process Control for Energy Installations
AU  - V. Khokhlovskiy
AU  - V. Oleinikov
T2  - 2019 International Multi-Conference on Industrial Engineering and Modern Technologies (FarEastCon)
AB  - Design of process automation control for energy installations is considered as MBSE, i.e. the basic means of UML are used to describe main functionality, structure and behavior of a target system. The rules of IEC 61131-3 international standard are used for implementation of the control. UML component diagrams of the control system are mapped into configuration of PAC. The behavior is refined by conversion of UML activity diagrams into SFC programming language. A control system for hydro power unit is described to demonstrate the approach.
C3  - 2019 International Multi-Conference on Industrial Engineering and Modern Technologies (FarEastCon)
DA  - 2019/10/01/4
PY  - 2019
DO  - 10.1109/FarEastCon.2019.8934790
SP  - 1
EP  - 5
KW  - Automation
KW  - Unified modeling language
KW  - Modeling
KW  - Standards
KW  - configuration of process automation controller PAC
KW  - Control systems
KW  - energy installations
KW  - hydro power unit
KW  - IEC 61131-3
KW  - Picture archiving and communication systems
KW  - process control
KW  - Process control
KW  - sequential functional charts SFC
KW  - unified modeling language UML
ER  - 

TY  - CONF
TI  - Integrated model-based systems engineering (MBSE) applied to the Simulation of a CubeSat mission
AU  - D. Kaslow
AU  - G. Soremekun
AU  - H. Kim
AU  - S. Spangelo
T2  - 2014 IEEE Aerospace Conference
AB  - Small satellite missions are becoming increasingly complex as scientists and engineers propose to utilize them to accomplish more ambitious science and technology goals. Small satellites such as CubeSats are challenging to design because they have limited resources, coupled subsystems, and must operate in dynamic environments. Model Based Systems Engineering (MBSE) is a key practice to advance systems engineering that can benefit CubeSat missions. MBSE creates a system model that helps integrate other discipline specific engineering models and simulations. The system level model is initiated at the start of a project and evolves throughout development. It provides a cohesive and consistent source of system requirements, design, analysis, and verification. This paper describes an integrated, executable MBSE representation of the Radio Aurora Explorer (RAX) CubeSat mission. The purpose of the RAX mission is to study the formation of magnetic field-aligned electron density irregularities in the Earth's ionosphere, which are known to disrupt tracking and communication between Earth and orbiting spacecraft. The RAX CubeSat model describes the configuration and properties for various systems and subsystems, and is capable of executing behavior and parametric models for analyzing subsystem functions and states of the spacecraft. It is comprised of a SysML model created with MagicDraw<sup>Â®</sup>, a set of analytical models developed in MATLAB<sup>Â®</sup>, and a high fidelity space system simulation model created in STK<sup>Â®</sup>. ModelCenter was used to integrate the analytical and simulation models. The integrated analyses were linked to the SysML model using MBSE Analyzer, a bridge between SysML tools and ModelCenter. Behavioral models were executed for a representative RAX mission to study energy state and data collection capabilities. This work was undertaken to demonstrate the power, scalability, and utility of MBSE tools and methods that are available to help meet the challenge of designing spacecraft missions of ever-increasing complexity. The RAX CubeSat model will be made available to the academic community for further study and potential extension for more complex missions.
C3  - 2014 IEEE Aerospace Conference
DA  - 2014/03/01/8
PY  - 2014
DO  - 10.1109/AERO.2014.6836317
SP  - 1
EP  - 14
SN  - 1095-323X
KW  - Analytical models
KW  - Biological system modeling
KW  - Computers
KW  - Magnetic analysis
KW  - Magnetic properties
ER  - 

TY  - CONF
TI  - A model-based systems engineering approach to capturing disaster management systems
AU  - A. Soyler
AU  - S. Sala-Diakanda
T2  - 2010 IEEE International Systems Conference
AB  - The purpose of this paper is to initiate the design of a framework for defining and capturing disaster management systems (DMS). Recognizing the management of disasters as complex adaptive systems (CAS), whose performance cannot be improved through the isolated optimization of their constituents, this paper proposes the adoption of model-based systems engineering (MBSE) to capturing the behavior of such systems, as well as the structure responsible for their behaviors. Using a domain-independent language such as the systems modeling language (SysML) to implement MBSE, the holistic approach proposed here effectively introduces a new paradigm in disaster management studies that is aimed at reducing the aforementioned complexity. By enforcing traceability between the DMS subsystems, and by leveraging artifacts such as viewpoints to develop perspectives that are tailored to specific stakeholders and users, it is anticipated that a MBSE-based holistic approach such as the one presented in this paper will promote proper use of the scientific method for the design, verification, validation and improvement of disaster management systems.
C3  - 2010 IEEE International Systems Conference
DA  - 2010/04/05/8
PY  - 2010
DO  - 10.1109/SYSTEMS.2010.5482340
SP  - 283
EP  - 287
KW  - Engineering management
KW  - SysML
KW  - Model-Based Systems Engineering
KW  - Modeling
KW  - Systems engineering and theory
KW  - agency management
KW  - Disaster management
KW  - Earthquakes
KW  - Fires
KW  - Floods
KW  - Hazards
KW  - Hurricanes
KW  - Industrial engineering
KW  - natural disaster management
KW  - system architecture
KW  - systems modeling
ER  - 

TY  - CONF
TI  - Model-Based Systems Engineering for design and automated operation of modern waterway systems
AU  - L. Petnga
AU  - M. Austin
T2  - 2014 IEEE International Systems Conference Proceedings
AB  - Waterway and canal systems are particularly cost effective in the transport of bulk and containerized goods to support global trade. Yet, despite these benefits, they are among the most under-appreciated of transportation engineering systems. Looking ahead, the long-term view is not rosy. Failures, delays, incidents, and accidents in aging waterway systems are doing little to attract the technical and economic assistance required for modernization and sustainability. We argue that programs for waterway and canal modernization and sustainability can benefit significantly from system thinking, supported by systems engineering techniques. To support this claim, we develop a framework for the Model-Based Systems Engineering (MBSE) design of modern waterways, especially canal systems. The proposed framework supports organizational, requirements and engineering models. Semi-formal modeling techniques are employed for the representation of project goals and scenarios and high-level models of behavior and structure. The essential features of this framework are highlighted in a case study where model-based systems engineering procedures are used for the design and analysis of a post-Panamax waterlock system. Formal verification procedures to demonstrate that essential system properties such as safety, liveliness and reachability are satisfied are currently under development.
C3  - 2014 IEEE International Systems Conference Proceedings
DA  - 2014/04/31/March-3
PY  - 2014
DO  - 10.1109/SysCon.2014.6819274
SP  - 309
EP  - 316
KW  - Unified modeling language
KW  - Modeling
KW  - Biological system modeling
KW  - Irrigation
KW  - Marine vehicles
KW  - Mathematical model
KW  - Organizations
ER  - 

TY  - CONF
TI  - Model based verification of Electronic Control Unit (ECU) in high lift systems: Verification and validation
AU  - U. Farooq
T2  - 2017 IEEE International Systems Engineering Symposium (ISSE)
AB  - Aircraft flight control systems are complex systems to verify, especially considering the amount of software and hardware involved. One such flight control system is the High Lift System which provides the fundamental aircraft function of increasing wing lift. UTC Aerospace Systems provides complete "stick to surface" High Lift Actuation Systems for large commercial aircraft as well as smaller business jets. Verification of High Lift actuation Systems is a complex task, as each component has different performance, functionality and environmental requirements that need to be verified at an early stage in the lifecycle. This paper provides an overview of the method used to verify the interfaces and behaviour of a High Lift System Electronic Control Unit (ECU) with the greater system and aircraft through the use of models. The paper describes an approach to assess the functional behaviour of a system through simulation of failure conditions in a model and assessing the system response. In addition, the paper describes an approach undertaken to get visibility of the level of margin present in the Safety Monitors in the High Lift System ECU.
C3  - 2017 IEEE International Systems Engineering Symposium (ISSE)
DA  - 2017/10/11/13
PY  - 2017
DO  - 10.1109/SysEng.2017.8088318
SP  - 1
EP  - 5
KW  - Model Based Systems Engineering
KW  - Systems Engineering
KW  - Safety
KW  - Aerospace control
KW  - Aircraft
KW  - Atmospheric modeling
KW  - Electronic Control Unit
KW  - High Lift System
KW  - Monitoring
KW  - Object oriented modeling
KW  - Safety Monitors
KW  - Verification
ER  - 

TY  - CONF
TI  - Civil Aircraft Auto Brake System Development Using Model-Based Systems Engineering
AU  - X. Zhang
AU  - S. Zhang
AU  - J. Yan
T2  - 2021 China Automation Congress (CAC)
AB  - Civil aircraft auto brake system development based on Model-Based Systems Engineering(MBSE) technology is proposed in this paper. After requirements analysis, functional analysis and architecture synthesis three phases, use case model, function analysis model, tradeoff model and logical architecture of system are established in Rhapsody using Systems Modeling Language(SysML). Then a collaborative simulation mechanism combining Rhapsody/Simulink model is proposed to solve the defect that SysML canât describe the continuous behavior of system. Collaborative simulation enables system designers to carry out comprehensive and timely verification of dynamic behavior and correctness of modeling by simulating the overall composition which greatly improves the efficiency and accuracy of development.
C3  - 2021 China Automation Congress (CAC)
DA  - 2021/10/22/24
PY  - 2021
DO  - 10.1109/CAC53003.2021.9728152
SP  - 400
EP  - 405
SN  - 2688-0938
KW  - SysML
KW  - MBSE
KW  - Analytical models
KW  - Atmospheric modeling
KW  - Brakes
KW  - Civil aircraft auto brake system
KW  - Collaboration
KW  - Collaborative simulation
KW  - Functional analysis
KW  - Rhapsody
KW  - Systems architecture
KW  - Systems modeling
ER  - 

TY  - CONF
TI  - Tool suite to support model based systems engineering-enabled system-of-systems analysis
AU  - C. Guariniello
AU  - Z. Fang
AU  - N. Davendralingam
AU  - K. Marais
AU  - D. DeLaurentis
T2  - 2018 IEEE Aerospace Conference
AB  - The complexity of aerospace systems requirements, analysis, design, and architecture puts these systems among those that can benefit the most from a Model-Based Systems Engineering approach. However, though there has been progress in connecting domain-based model specifications and simulation experiments, there is still a gap between Model-Based Systems Engineering and the implementation and use of tools and metrics for modeling and analysis of complex aerospace systems. Here, we build upon our prior System-of-System research to illustrate how a System-of-Systems Analytic Work Bench can be used in combination with Model-Based Systems Engineering to enhance the analysis and design of systems architectures. The Analytic Work Bench is a suite of tools for analysis of the behavior of complex systems and for comparison and evaluation of systems architectures. The tools in the Analytic Work Bench adopt a representation of Systems-of-Systems architecture as a network of interdependent systems, which lends itself to connection with various Model-Based Systems Engineering representations, for example, Functional Block Diagrams and SysML activity and parametric diagrams. For each method in the Analytic Work Bench we illustrate appropriate linking to Model-Based Systems Engineering representations, explaining how the methods can acquire part of the required information for their models from traditional Model-Based Systems Engineering methodology. We then show how results from the tools in the Analytic Work Bench enhance Model-Based Systems Engineering with quantitative analysis of complex systems and architectures, including evaluation of performance, criticalities, robustness, resilience, and evolution of the systems at various levels of abstraction.
C3  - 2018 IEEE Aerospace Conference
DA  - 2018/03/03/10
PY  - 2018
DO  - 10.1109/AERO.2018.8396642
SP  - 1
EP  - 16
KW  - Tools
KW  - Analytical models
KW  - Aerospace engineering
KW  - Complexity theory
KW  - Robustness
ER  - 

TY  - JOUR
TI  - An Interactive Model-Driven Simulation Approach for Dynamic Behavior Analysis in Armed Conflicts
AU  - M. Li
AU  - J. Xu
AU  - K. Yang
AU  - B. Ge
T2  - IEEE Access
AB  - As system dynamic behaviors are difficult to capture and analyze in model-based systems engineering, executable architectures, and simulation methods are widely studied to understand the behaviors that result from interactions amongst system components. However, most current studies often strive for analyzing independently specific aspects of architecture rather than capturing simultaneously the structural, behavioral, and performance related features, leading to failures of understanding the whole system from a global perspective. Accordingly, an interactive model-driven simulation that includes meta-model mapping and collaborative engine capabilities specific to DoDAF, Rhapsody, and STK simulations is first proposed to integrate the full advantages of different analytical tools. Then, a synergic engine is developed to provide synchronized control between time-driven and event-driven execution through the dynamic analysis process. Two executable techniques communicate with each other throughout the entire execution cycle to provide complementary necessary process information. The events occurred in the STK simulation scenario are used as the trigger of the executable state machine model that describes only the logical procedure of system behaviors without timeand space-related constraints. Last, an illustrative example of the Russian-Turkish Plane Incident is carried out to demonstrate the feasibility of the foregoing approach.
DA  - 2018///
PY  - 2018
DO  - 10.1109/ACCESS.2018.2852803
VL  - 6
SP  - 36744
EP  - 36756
J2  - IEEE Access
SN  - 2169-3536
KW  - Tools
KW  - Model-based systems engineering
KW  - Analytical models
KW  - Mathematical model
KW  - Data models
KW  - dynamic behavior analysis
KW  - interactive validation
KW  - multi-modeling
KW  - Solid modeling
KW  - systems simulation
ER  - 

TY  - JOUR
TI  - Formal Behavioral Requirements Management
AU  - S. Gebreyohannes
AU  - W. Edmonson
AU  - A. Esterline
T2  - IEEE Systems Journal
AB  - In this paper, we develop the mathematical foundation for a formal requirements management of a systems engineering (SE) methodology called the Responsive and Formal Design (RFD) process. The RFD process relates a set of requirements, associated models, simulations, and the relationship between them, by integrating model-based systems engineering (MBSE) to manage system modeling complexity with formal methods to ensure that designs are verifiably correct against their requirements. In this paper, we formally define basic notions of the RFD process, develop algorithms to extract a set of logical expressions from a set of requirements, and present a technique that is used to map a behavior model to its simulation. We also present a formal way of refining requirements in the RFD process and show how properties are preserved along the way in a fundamental fashion. We demonstrate our development using three small satellites measurement system that images the colorful auroral ovals around Earth's magnetic poles.
DA  - 2018/09//
PY  - 2018
DO  - 10.1109/JSYST.2017.2775740
VL  - 12
IS  - 3
SP  - 3006
EP  - 3017
J2  - IEEE Systems Journal
SN  - 1937-9234
KW  - model-based systems engineering (MBSE)
KW  - Tools
KW  - Mathematical model
KW  - Context modeling
KW  - Formal methods
KW  - Petri nets
KW  - Requirements management
KW  - requirements managment
KW  - responsive and formal design (RFD) process
KW  - Stakeholders
ER  - 

TY  - CONF
TI  - A systems engineering approach for a dynamic co-simulation of a SysML tool and Matlab
AU  - D. Bank
AU  - F. Blumrich
AU  - P. Kress
AU  - C. StÃ¶ferle
T2  - 2016 Annual IEEE Systems Conference (SysCon)
AB  - Industry is in a debate about the potential of the Systems Modeling Language (SysML). One part sees the advantage in development and project planning. The other part argues that the employment of SysML results in unnecessary additional work. The description of systems is still largely managed by the widely-used Microsoft Office software like Excel or PowerPoint. Indeed, this software has its limitations, especially when it comes to complex systems. Regarding SysML, the aim of this publication is to show the practical benefit and to open a further field of application. The cyclic coupling of SysML with a calculation software enables periodic data exchange in a flexible toolchain. This is a fundamental step, which leads to a new approach of systems development and domain collaboration. The SysML tool is intended to be the highest instance in the toolchain. A calculation software translates all the instructions coming from the highest instance into physical behavior, which can be simultaneously displayed with the aid of a visualization tool. As a significant result, an early validation of the behavior of a system under development can be performed with the aid of the overall model. In order to demonstrate this concept, a high-level simulation of a "Traffic Alert and Collision Avoidance System (TCAS)" serves as an example. Tests show that the SysML controlled TCAS simulation is a proper application to demonstrate the execution of important decisions. By means of the visualization, the TCAS behavior becomes transparent. The advantages of the dynamic co-simulation are particularly in the application of Model-Based Systems Engineering (MBSE) to heterogeneous complex systems.
C3  - 2016 Annual IEEE Systems Conference (SysCon)
DA  - 2016/04/18/21
PY  - 2016
DO  - 10.1109/SYSCON.2016.7490534
SP  - 1
EP  - 6
KW  - Mathematical model
KW  - Aircraft
KW  - Atmospheric modeling
KW  - Dynamic Co-Simulation
KW  - Early Validation
KW  - Heterogeneous Complex Systems
KW  - MATLAB
KW  - Model-Based Systems Engineering (MBSE)
KW  - Systems Modeling Language (SysML)
KW  - Traffic Alert and Collision Avoidance System (TCAS)
KW  - Unmanned Aerial Vehicle (UAV)
ER  - 

TY  - CONF
TI  - A holistic approach for virtual commissioning of intelligent systems: Model-based systems engineering for the development of a turn-milling center
AU  - C. Henke
AU  - J. Michael
AU  - C. Lankeit
AU  - A. TrÃ¤chtler
T2  - 2017 Annual IEEE International Systems Conference (SysCon)
AB  - Due to the Industrial Internet of Things and rising complexity of intelligent technical systems efficient design and test processes for mechanical and plant engineering become more important. The design and test process encompasses the discipline-spanning system design in early phases, virtual prototyping as well as virtual commissioning in test phases. This contribution illustrates a holistic model-based approach, which supports these activities in terms of Model-Based Systems Engineering. The paper shows the development from the system model and especially the requirements engineering via the detailed simulation of the physical behavior to the virtual commissioning of a vertical turn-milling-center.
C3  - 2017 Annual IEEE International Systems Conference (SysCon)
DA  - 2017/04/24/27
PY  - 2017
DO  - 10.1109/SYSCON.2017.7934735
SP  - 1
EP  - 6
SN  - 2472-9647
KW  - Tools
KW  - Modeling
KW  - Testing
KW  - Mathematical model
KW  - Systems architecture
KW  - Complexity theory
KW  - requirements engineering
KW  - simulation models
KW  - system model
KW  - virtual commissioning
ER  - 

TY  - JOUR
TI  - On the Reliability Analysis of Systems and SoS: The RAMSAS Method and Related Extensions
AU  - A. Garro
AU  - A. Tundis
T2  - IEEE Systems Journal
AB  - This paper aims at contributing to fill the lack of methods specifically conceived for addressing the analysis and verification of nonfunctional requirements. In particular, the attention is focused on system reliability, which is a key requirement to be satisfied particularly for mission-critical systems where system failures could cause even human losses. To this end, this paper presents an up-to-date version of RAMSAS, which is a recently proposed model-based method for the reliability analysis of systems through simulation. The present version of RAMSAS is the result of an intensive experimentation phase in several application domains (avionics, automotive, and satellite) that allowed for the improvement of the effectiveness of the method, particularly in the modeling of both the intended and dysfunctional system behaviors. Moreover, this paper discusses the specific issues that arise when moving from the reliability analysis of systems to that of systems of systems (SoSs) and proposes a possible extension of the RAMSAS method (called RAMSoS) that is able to address the identified issues and thus support the reliability analysis of SoSs through simulation.
DA  - 2015/03//
PY  - 2015
DO  - 10.1109/JSYST.2014.2321617
VL  - 9
IS  - 1
SP  - 232
EP  - 241
J2  - IEEE Systems Journal
SN  - 1937-9234
KW  - model-based systems engineering
KW  - reliability analysis
KW  - Analytical models
KW  - Agent-based modeling and simulation
KW  - dysfunctional behavior modeling
KW  - Satellites
KW  - Software packages
KW  - Software reliability
ER  - 

TY  - CONF
TI  - Verification of embedded system's specification using collaborative simulation of SysML and simulink models
AU  - R. Kawahara
AU  - D. Dotan
AU  - T. Sakairi
AU  - Kohichi Ono
AU  - Hiroaki Nakamura
AU  - A. Kirshin
AU  - Shinichi Hirose
AU  - Hiroshi Ishikawa
T2  - 2009 International Conference on Model-Based Systems Engineering
AB  - The authors propose an extension of SysML which enables description of continuous-time behavior. The authors also develop its execution tool integrated on Eclipse-based platform by exploiting co-simulation of SysML and MATLAB / Simulink. To demonstrate the effectiveness of the tool and the extension to SysML in verifying specifications of an embedded system, we create a sample model and analyze its execution results by checking constraints under a test case.
C3  - 2009 International Conference on Model-Based Systems Engineering
DA  - 2009/03/02/5
PY  - 2009
DO  - 10.1109/MBSE.2009.5031716
SP  - 21
EP  - 28
KW  - Unified modeling language
KW  - Systems engineering and theory
KW  - Mathematical model
KW  - Collaboration
KW  - MATLAB
KW  - Binary decision diagrams
KW  - Connectors
KW  - Embedded system
KW  - Joining processes
KW  - System testing
ER  - 

TY  - CONF
TI  - Model-based avionic systems testing for the airbus family
AU  - J. Peleska
T2  - 2018 IEEE 23rd European Test Symposium (ETS)
AB  - This paper is about practical verification of Airbus avionic systems during type certification, with special focus on automated testing. The material is based on test and verification services performed for Airbus by a spinoff company of the University of Bremen, as well as on consultancy services delivered by our research group to Airbus and its suppliers. In the context of model-based systems engineering, the test automation approach is currently shifting from manual test procedure programming to model-based testing (MBT), where test cases are automatically identified in models describing the application behavior, allowing for automated test data calculation and test procedure generation. We describe the situations where today's MBT technology is already adequate to increase the effectiveness of automated testing in industry. In addition, we describe some open challenges arising from practical avionic systems testing, where satisfactory solutions still require some research effort.
C3  - 2018 IEEE 23rd European Test Symposium (ETS)
DA  - 2018/06/28/May-1
PY  - 2018
DO  - 10.1109/ETS.2018.8400703
SP  - 1
EP  - 10
SN  - 1558-1780
KW  - model-based systems engineering
KW  - model-based testing
KW  - Standards
KW  - Testing
KW  - Biological system modeling
KW  - Atmospheric modeling
KW  - Aerospace electronics
KW  - avionic systems
KW  - Switches
KW  - test automation
ER  - 

TY  - CONF
TI  - Integration of domain-specific simulation models into descriptive system models by using SysML
AU  - M. Friedl
AU  - A. Kellner
AU  - L. Weingartner
T2  - 2017 IEEE International Systems Engineering Symposium (ISSE)
AB  - Several observations at industry examples have shown that there is a need to close an existing gap between system architect's model and domain experts' models. Therefore, a minimalistic approach is presented, which allows integrating executable domain models into a system model using a state of the art Model Based Systems Engineering (MBSE) authoring tool. Such MBSE approaches and tools offer possibilities to model requirements and interdependencies with respect to the system's structure, functions and behaviors. Domain architects use simulation models to study the system behavior and to verify specific system requirements. System architects can re-use such simulation models to keep track of the system validity in case of design changes.
C3  - 2017 IEEE International Systems Engineering Symposium (ISSE)
DA  - 2017/10/11/13
PY  - 2017
DO  - 10.1109/SysEng.2017.8088256
SP  - 1
EP  - 5
KW  - Unified modeling language
KW  - requirements
KW  - SysML
KW  - Tools
KW  - Analytical models
KW  - Mathematical model
KW  - Object oriented modeling
KW  - Solid modeling
KW  - design automation
KW  - Model Based systems Engineering
KW  - multi-criteria design optimization
ER  - 

TY  - CONF
TI  - An integrated systems engineering framework for supervisor synthesis, verification, and performance evaluation
AU  - J. Markovski
T2  - 2013 European Control Conference (ECC)
AB  - We propose a model-based systems engineering framework that enables supervisor synthesis of stochastic (nondeterministic) discrete-event systems, and post-synthesis validation of functional and quantitative properties of the supervised system. Supervisory control theory deals with synthesis of models of supervisory controllers that ensure safe and nonblocking behavior, based on discrete-event models of the uncontrolled system and the control requirements. Typically, neither more elaborated functional properties nor performance metrics can be guaranteed by the synthesis procedure for large systems, due to high computational complexity. Thus, the supervised system must be validated to ensure that intended behavior is present. The framework employs a single integrated model that denotes all relevant aspects of the system. We rely on state-of-the-art tools to implement the proposed framework. For supervisor synthesis we employ Supremica, which models we extend to denote stochastic behavior. For verification, we provide a consistent translation of the supervised system to the model checker UPPAAL. To evaluate quantitative supervised behavior, first we transform the denoted system model to a labeled Interactive Markov chain and couple it with the synthesized supervisor. Then, we derive the underlying labeled Markov process and feed it to the stochastic model checker MRMC. We illustrate the framework on an industrial case study of coordinating printing maintenance procedures.
C3  - 2013 European Control Conference (ECC)
DA  - 2013/07/17/19
PY  - 2013
DO  - 10.23919/ECC.2013.6669190
SP  - 650
EP  - 657
KW  - Modeling
KW  - Supervisory control
KW  - Automata
KW  - Maintenance engineering
KW  - Printing
KW  - Software
KW  - Stochastic processes
ER  - 

TY  - CONF
TI  - There's no âIâ in SEAMâAn Interim Report on the âSpacecraft Early Analysis Modelâ
AU  - J. Gregory
AU  - L. Berthoud
AU  - T. Tryfonas
AU  - L. Faure
T2  - 2020 IEEE Aerospace Conference
AB  - Model-Based Systems Engineering (MBSE) represents a move away from the traditional approach of Document-Based Systems Engineering (DBSE), and is used to promote consistency, communication, clarity and maintainability within systems engineering projects. In previous work, industry focus groups have indicated that one way this can be achieved is by performing early functional validation of elements of the spacecraft avionics. This paper presents an extended approach, introduced in a case study previously published by the authors, to enable early functional analysis of a spacecraft. The approach uses the `Spacecraft Early Analysis Model' (SEAM), a SysML-based model framework for the definition, development and analysis of a space-based mission and corresponding space system. This formal model-based representation of the system enables the high-level simulation of the design during Phase B of the spacecraft system lifecycle. The SEAM pulls together different, traditionally disparate, analysis tools and enables them to work together, producing an integrated system model spanning multiple tools. It facilitates the simulation of the mission using dedicated orbit modelling software, analysis of the completeness and accuracy of the system behaviour, and provides an indication of the appropriate logical architecture. The SEAM has been developed iteratively by applying it to Earth-observation case studies from the Biomass mission, refining the capabilities of the template accordingly, and subsequently generalising the model. The resulting interim version of the Spacecraft Early Analysis Model contains a series of MBSE patterns that will ultimately provide users with a comprehensive and consistent SysML-based structure that enables early functional definition and analysis of spacecraft. Next steps in the development of the SEAM include its application to a wider variety of use cases to develop and demonstrate its versatility, and the development of metrics to measure its perceived value among practitioners.
C3  - 2020 IEEE Aerospace Conference
DA  - 2020/03/07/14
PY  - 2020
DO  - 10.1109/AERO47225.2020.9172702
SP  - 1
EP  - 14
SN  - 1095-323X
ER  - 

TY  - CONF
TI  - Towards Configuration Support for Collaborative Simulator Development - A Product Line Approach in Model Based Systems Engineering
AU  - H. Andersson
AU  - M. Carlsson
AU  - J. Ãlvander
T2  - 2011 IEEE 20th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises
AB  - In development and support of complex products such as power plants, automotive vehicles, or aircrafts, modeling and simulation has become an important activity as a basis for knowledge capture. Simulation is used in several steps of the product lifecycle; for evaluation of early design, for system verification, and for user training. With emerging techniques such as tools for high-level modeling, multi-core computing, and visualization, the number of useful models is growing. This paper focuses on reuse of multipurpose models and configuration support in a product line context. A configurator prototype system is presented. The simulator set created from validated models is considered to be a secondary product line. The product set which the simulation models represent is considered to be the primary product line. The Saab Gripen fighter aircraft, together with simulators in which the aircraft behavior, performance, and handling qualities are represented, is used to exemplify application. Integration principles of the systems for simulator configuration, Software Configuration Management, and Product Data Management (PDM) are studied. Preliminary results show that a configurator tool can be used, but there is need to map structures between the simulation and PDM domains.
C3  - 2011 IEEE 20th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises
DA  - 2011/06/27/29
PY  - 2011
DO  - 10.1109/WETICE.2011.74
SP  - 185
EP  - 192
SN  - 1524-4547
KW  - MBSE
KW  - Simulation
KW  - Configurator
KW  - Product Line
KW  - Computer architecture
KW  - Aircraft
KW  - Atmospheric modeling
KW  - Aerospace electronics
KW  - Software
KW  - Computational modeling
ER  - 

TY  - CONF
TI  - Simulation of cyber physical models using SysML and numerical solvers
AU  - E. Palachi
AU  - C. Cohen
AU  - S. Takashi
T2  - 2013 IEEE International Systems Conference (SysCon)
AB  - We demonstrate a modeling and simulation technique that allows integrating controller/plant behavior specified in numerical solvers, such as Simulink and Modelica, within the SysML model. This allows the mixing of discrete and continuous behaviors in a context of a system model that can be simulated as a complete system level specification. Our approach involves code generation, rather than semantic mappings or model transformation of behaviors, combined with the capability to transform the interface and type specification from one modeling language to the other. Using such complementary languages/tools allows the specification of a complete design model that can be simulated for various purposes such as verification and validation and trade studies.
C3  - 2013 IEEE International Systems Conference (SysCon)
DA  - 2013/04/15/18
PY  - 2013
DO  - 10.1109/SysCon.2013.6549954
SP  - 671
EP  - 675
KW  - Unified modeling language
KW  - Cyber-Physical Systems
KW  - Simulation
KW  - Modelica
KW  - Simulink
KW  - Mathematical model
KW  - Object oriented modeling
KW  - Model-Based Systems Engineering (MBSE)
KW  - Software packages
KW  - Numerical models
KW  - Vehicles
ER  - 

TY  - CONF
TI  - Model-based requirement generation
AU  - B. London
AU  - P. Miotto
T2  - 2014 IEEE Aerospace Conference
AB  - Model-based systems engineering (MBSE) is intended to enhance productivity and quality through a paradigm shift from document-centric engineering. However, most MBSE development tools require the manual creation of requirement constructs. This time consuming step is vulnerable to human error, and must be repeated as high-level designs inevitably evolve. This paper describes a capability that uses SysML structure and behavior diagrams to automatically generate textual requirements. Using modified off-the-shelf MBSE software, information is extracted from SysML constructs (e.g., blocks, states, activities) and combined in SysML requirement objects. The requirement syntax conforms to NASA and DoD standards. Requirements are based on SysML construct relationships (e.g., allocations, control flows, object flows) commonly used in diagrams to describe system architectures and designs. Through the embedded error checker, designers can ensure that requirements are complete and consistent. When new requirement constructs are created, traceability to the âparentâ SysML constructs is automatically created to capture the rationale. As the architectural models evolve, the requirements are updated to ensure consistency with configuration management and other model-based tools. Such an approach allows designers to quickly assess the impact of requirement changes and reduces requirement management costs. The capability is demonstrated by comparing model generated requirements to a traditionally developed GPS receiver specification.
C3  - 2014 IEEE Aerospace Conference
DA  - 2014/03/01/8
PY  - 2014
DO  - 10.1109/AERO.2014.6836450
SP  - 1
EP  - 10
SN  - 1095-323X
KW  - Biological system modeling
KW  - Quality of service
KW  - Writing
ER  - 

TY  - CONF
TI  - Developing a CubeSat Model-Based System Engineering (MBSE) Reference Model - interim status
AU  - D. Kaslow
AU  - L. Anderson
AU  - S. Asundi
AU  - B. Ayres
AU  - C. Iwata
AU  - B. Shiotani
AU  - R. Thompson
T2  - 2015 IEEE Aerospace Conference
AB  - Model-Based Systems Engineering (MBSE) is a key practice to advance systems engineering that can benefit CubeSat missions. MBSE creates a system model that helps integrate other discipline specific engineering models and simulations. The system level model is initiated at the start of a project and evolves throughout development. It provides a cohesive and consistent source of system requirements, design, analysis, and verification. The International Council on Systems Engineering (INCOSE) Space Systems Working Group (SSWG) established the Space Systems MBSE Challenge team in 2007. The SSWG Challenge team has been investigating the applicability of MBSE for designing CubeSats since 2011. Our application of MBSE uses System Modeling Language (SysML), a graphical modeling language. SysML is used to model all aspects of a system either directly or through an interface with another model. SysML diagrams are used to describe requirements, structures, behaviors, and parametrics from the system down to the component level. The first phase of SSWG CubeSat project created a CubeSat reference model that was applied to the Radio Aurora Explorer (RAX), a three-unit CubeSat developed by SRI International and the Michigan Exploration Laboratory at the University of Michigan. The second phase focused on expanding the RAX CubeSat model to include modeling behaviors and interfacing with several Commercial Off the Shelf (COTS) simulation tools. The third phase was comprised of two activities. The first was the development of a CubeSat Enterprise Model to capture cost and product Iifecycle aspects for the mission spacecraft and problem domain. The second activity incorporated additional design and operational characteristics into the RAX model. The modeling effort starts anew in this fourth phase and has two objectives: 1) Develop a CubeSat Reference Model that other projects can use as a starting point for their mission specific CubeSat model. The space and ground systems, subsystems, and components are being modeled throughout the entire project Iifecycle. 2)Develop a CubeSat Project Model that models how CubeSat design and development are to be accomplished. The first objective is in response to: "Model-based systems enj!ineerinj! (MBSE) is the formalized application of modelinj! to support system requirements, desij!n, analysis, verification and validation activities bej!inninj! in the conceptual desij!n phase and continuing throughout development and later life cycle phases." The second objective is in response to: "A MBSE methodology is a collection of related processes, methods, and tools used to support the discipline of systems engineering in a 'modelbased' or 'model-driven' context." The effort to date has been focused on establishing nomenclature; the incorporation of the stakeholders and their needs, objectives, measures of effectiveness; and the architecture down to the logical subsystems. The next step is to determine the level of model definition at each of the Iifecycle stages and to create models for the concept and development phases. The CubeSat Reference Model will be rolled-out in a controlled fashion to make certain that model is understandable and useful. The requests and applications of the model have fallen into two categories: 1) Using the model within an aerospace engineering course and 2) evaluating the application of MBSE within an aerospace program.
C3  - 2015 IEEE Aerospace Conference
DA  - 2015/03/07/14
PY  - 2015
DO  - 10.1109/AERO.2015.7118965
SP  - 1
EP  - 16
SN  - 1095-323X
KW  - Unified modeling language
KW  - Analytical models
KW  - Biological system modeling
KW  - Satellites
KW  - Biographies
KW  - Group technology
KW  - Industries
ER  - 

TY  - CONF
TI  - Simulation-based verification of system requirements: An integrated solution
AU  - F. Aiello
AU  - A. Garro
AU  - Y. Lemmens
AU  - S. DutrÃ©
T2  - 2017 IEEE 14th International Conference on Networking, Sensing and Control (ICNSC)
AB  - Modeling of system properties deals with formally expressing constraints and requirements that influence and determine the structure and behavior of a system. System Property Models enable the verification of system properties through real or simulated experiments so as to support their evaluation during system design and their monitoring during system operation. However, several challenges should be addressed to effectively handle systems properties with the support of an integrated tool-chain. In this context, the paper presents the concrete experimentation of a promising solution that enables the formal modeling of requirements in Modelica and their subsequent simulation-based verification. The solution is applied to evaluate different design variants of a trailing-edge high-lift system. In particular, two ways to feed the requirements model are explored: in an early phase, data series are used to evaluate the requirements themselves; then a co-simulation of the requirements model with the 3D-model of the system is used to evaluate and identify what design variants best meet the system requirements.
C3  - 2017 IEEE 14th International Conference on Networking, Sensing and Control (ICNSC)
DA  - 2017/05/16/18
PY  - 2017
DO  - 10.1109/ICNSC.2017.8000180
SP  - 726
EP  - 731
KW  - Requirements Engineering
KW  - Model-Based Systems Engineering
KW  - Modelica
KW  - Analytical models
KW  - Mathematical model
KW  - Atmospheric modeling
KW  - Object oriented modeling
KW  - Data models
KW  - Formal Properties Modeling
KW  - Libraries
KW  - Modeling and Simulation
KW  - System Verification
ER  - 

TY  - CONF
TI  - Cross Lifecycle Modeling in MBSE
AU  - N. Waldram
AU  - S. Cornford
AU  - M. Piette
AU  - G. Plattsmier
T2  - 2019 IEEE Aerospace Conference
AB  - The Model Based Systems Engineering (MBSE) Infusion and Modernization Initiative (MIAMI) is a NASA-wide effort to lay the groundwork for an integrated framework of tools and technology to advance the objectives of Systems Engineering at NASA, with emphasis on efficiency, interconnectivity, and breadth of scope. Within the MIAMI effort, the Sounding Rocket Team, led by George Plattsmier (MSFC) and George Turner (GSFC), has implemented MBSE within the domain of NASA Sounding Rocket Operations Contract (NSROC)Sounding Rocket missions, using the Systems Modeling Language (SysML)to outline system architectures, requirements, mission assurance, stakeholders, events, and deliverables. The current team effort supports the Marshall Grazing Incidence X-Ray Spectrometer (MaGIXS) experiment. The rocket team, focused on the mission planning and execution domain, is working in tandem with a MIAMI Sounding Rocket MaGIXS experiment team, focused on the experiment domain, to model the mission, systems, experiment, and interfaces to produce and deploy an integrated mission model. Through communication and coordination between NASA and the Sounding Rocket Program Office (SRPO), the MIAMI Sounding Rocket team is tailoring their pilot efforts to specific deliverables identified as critical throughout the full mission lifecycle by Nathan Empson (Mission Operations Manager) and others at SRPO. These products, as part of an overall NASA MBSE pilot effort, will enable evaluation of the utility of MBSE for sounding rocket missions. The team coordinates their work through a spiral development process punctuated by âsprintsâ to seam together the advancements in defining architecture and behavior of the systems involved, with the various technologies and analyses used to bolster the modeling effort. For developing technologies and modeling patterns, the team continues to interface with the Computer Aided Engineering Systems Environment (CAESE) team at JPL to explore and expand the system âmodelâ from a MagicDraw server project to a nodal system of tools and services that delivers to stakeholders at various levels of cognizance. This environment is centered around an âauthoritative source of truthâ, known as the Integrated Mission Model upon which several interfaces are integrated such that users throughout all regions of the model see data, commits, updates, and structural changes in real time for a better collaboration workspace throughout the project. In the current instance of this modeling network, the Integrated Mission model uses the individual MagicDraw models for the rocket team and the experiment team, where modelers commit up to the master model, and use synchronized checkouts and updates. This allows for better version control, user permission allocation, and support for distributed work efforts to improve collaborative efficiency. The current state and future state of the team effort is to appropriate the tools and libraries available to meet the desired use-cases requested by NSROC. Throughout the process of MBSE integration, the larger goal through MIAMI is to project high-level modeling concepts and implementations into useable and tractable deliverables for small missions. Additionally, through support and development of the model as applied to MaGIXS, re-usability is achieved so that the efficiency of modeling itself is improved.
C3  - 2019 IEEE Aerospace Conference
DA  - 2019/03/02/9
PY  - 2019
DO  - 10.1109/AERO.2019.8741966
SP  - 1
EP  - 6
SN  - 1095-323X
KW  - Tools
KW  - Data models
KW  - Stakeholders
KW  - NASA
KW  - Rockets
ER  - 

TY  - CONF
TI  - Category Theoretic Based Formalization of the Verifiable Design Process
AU  - N. Kibret
AU  - W. Edmonson
AU  - S. Gebreyohannes
T2  - 2019 IEEE International Systems Conference (SysCon)
AB  - The verifiable design process (VDP) is a systems engineering methodology that integrates formal methods and model based systems engineering to achieve a correct-by-construction system. Formal methods are used in the design process to verify correct behavior of system as specified in the requirements. In order to aid development and analysis, the verifiable design process is organized in abstraction layers. The layers are represented using models that include requirements in natural language form, requirements in ontological form, specifications in logic form together with a proof process and interconnected models and their simulations. The models are intelligently coupled with each other to enable the formal verification and model-based validation of a system. In this work, we will show how to formalize the verifiable design process using category theory. We first show how to represent the different representations (models) of VDP as a category. Suitable categorical structures are employed to analyze them. Furthermore, we define each abstraction layer as a category (category of categories) with the models forming the objects and the relations among them forming the morphisms (functors). We then use pushout structure to represent the objects and their relations to provide analysis of the design process. The functors defined will formalize the relations between the different forms of representations.
C3  - 2019 IEEE International Systems Conference (SysCon)
DA  - 2019/04/08/11
PY  - 2019
DO  - 10.1109/SYSCON.2019.8836804
SP  - 1
EP  - 8
SN  - 2472-9647
KW  - Modeling
KW  - Cyber-physical systems
KW  - Ontologies
KW  - Mathematical model
KW  - Stakeholders
KW  - Natural languages
ER  - 

TY  - CONF
TI  - Applying model-based Co-Simulation on modular Production Units in Complex Automation Systems
AU  - C. Binder
AU  - A. Agic
AU  - C. Neureiter
AU  - A. LÃ¼der
T2  - 2021 IEEE International Symposium on Systems Engineering (ISSE)
AB  - Contemporary manufacturing systems face major challenges driven by the ongoing integration of intelligent manufacturing components, mainly caused by the emergence of the Industrial Internet of Things (IIoT). As the interplay of those Cyber-physical Systems (CPS) itself forms a System of Systems (SoS), engineering such a system becomes a difficult task. This is mainly attributed to the evolutionary development of its independently operating components, which results in some kind of unpredictable and often undesirable behavior. Considering this from a developerâs perspective, it is important to investigate the systemâs behaviors before its actual implementation. However, as methods applied in Model Based Systems Engineering (MBSE) have proven to be a major technology driver when it comes to developing the architecture of these industrial systems, their simulation is still not standardized. Thus, this paper introduces an Industry 4.0 specific tool-chain enabling the co-simulation of components within any developed industrial system architecture. This allows the investigation of varying industrial CPS and their interplay during run-time with the goal to detect undesired emergent behaviors. By doing so, the model is developed regarding the specifications of the Reference Architecture Industrie 4.0 (RAMI 4.0), while Mosaik is the tool of choice for creating the Co-Simulation environment. In order to validate the developed tool-chain, a case study utilizing modular production units within an industrial automation system is applied.
C3  - 2021 IEEE International Symposium on Systems Engineering (ISSE)
DA  - 2021/10/13/Sept.-13
PY  - 2021
DO  - 10.1109/ISSE51541.2021.9582531
SP  - 1
EP  - 6
SN  - 2687-8828
KW  - Tools
KW  - Modeling
KW  - Cyber-physical systems
KW  - Systems architecture
KW  - Industries
KW  - Co-Simulation
KW  - Industrial Internet of Things (IIoT)
KW  - Industrial Systems Engineering
KW  - Production
KW  - Reference Architecture Model Industrie 4.0 (RAMI 4.0)
KW  - System Architecture
KW  - Task analysis
ER  - 

TY  - CONF
TI  - Function model of train control system for unmanned operation of urban transit system
AU  - Y. Lee
T2  - ICCAS 2010
AB  - The train control system (TCS) plays the core role to secure the safety and punctuality for railway train operation. There are various systems applied to urban transit lines which are developed differently and independently from other countries. The national standard specifications and guidelines have been established and maintained for the TCS in Korea. As the requirements of the high-efficient and economic operation of the urban transit system is getting higher, the unmanned operation of the train is moving to the limelight. Lots of systems supporting unmanned operation are being applied to the new lines such as Yongin, Busan (3<sup>rd</sup> line), Incheon (2<sup>nd</sup> line) and so on. The standard of the TCS for urban transit supports the system for unmanned operation as requirements. The function model of TCS has been established on the basis of the standard specification to analyze the requirements and behavior of the TCS. The model is also to support the test and evaluation of the system to be operated with the unmanned through the standard.
C3  - ICCAS 2010
DA  - 2010/10/27/30
PY  - 2010
DO  - 10.1109/ICCAS.2010.5669712
SP  - 1129
EP  - 1133
KW  - model-based systems engineering
KW  - Modeling
KW  - Safety
KW  - Control systems
KW  - Biological system modeling
KW  - Maintenance engineering
KW  - Communication system signaling
KW  - Function model
KW  - Rail transportation
KW  - train control
KW  - urban transit
ER  - 

TY  - CONF
TI  - Developing a CubeSat Model-Based System Engineering (MBSE) reference model â Interim status #2
AU  - D. Kaslow
AU  - L. Hart
AU  - B. Ayres
AU  - C. Massa
AU  - M. J. Chonoles
AU  - R. Yntema
AU  - S. D. Gasster
AU  - B. Shiotani
T2  - 2016 IEEE Aerospace Conference
AB  - Model-Based Systems Engineering (MBSE) is a key practice to advance the systems engineering discipline. The International Council on Systems Engineering (INCOSE) established the MBSE Initiative to promote, advance, and institutionalize the practice of MBSE. As part of this effort, the INCOSE Space Systems Working Group (SSWG) Challenge Team has been investigating the applicability of MBSE for designing CubeSats since 2011. The goal of the team is to provide a sufficiently complete CubeSat Reference Model that can be adapted to any CubeSat project. The INCOSE Systems Engineering Vision 2020 defines MBSE as âthe formalized application of modeling to support system requirements, design, analysis, verification and validation activities beginning in the conceptual design phase and continuing throughout development and later life cycle phases.â At the core of MBSE is the development of the system model that helps integrate other discipline-specific engineering models and simulations. The team has been creating this system model by capturing all aspects of a CubeSat project using the Systems Modeling Language (SysML), which is a graphical modeling language for systems engineering. SysML diagrams are used to describe requirements, structures, behaviors, and parametrics from the system level down to the component level. Requirements and design are contained in the model rather than in a series of independent engineering artifacts. In the past three phases of the project, the team has created the initial iteration of the reference model, applied it to the Radio Aurora Explorer (RAX) mission, executed simulations of system behaviors, interfaced with commercial simulation tools, and demonstrated how behaviors and constraint equations can be executed to perform operational trade studies. The modeling effort starts anew in this fourth phase. The CubeSat Reference Model starts with an identification of potential stakeholders. A stakeholder is any entity that has an interest in the system including sponsor, end user, procurer, supplier, and regulatory agencies. The each stakeholder's needs, objectives, constraints, and measures of effectiveness are incorporated in the model. Constraints are those items fixed and not subject to trades such as mission budget and schedule. One of the stakeholders is the Cal Poly CubeSat project. The Cal Poly CubeSat Specification has been populated into its own SysML model to enable the content of the specification to be related to the CubeSat Reference Model. The CubeSat mission enterprise consists of the space system, ground system, launch services, launch vehicle interface system, and communication services. Since the reference model is being developed by a team effort, there is an obligation to protect the investment of time and knowledge of each team member. There also needs to be a licensing environment that is conducive to a user organization supporting the development of and use of the model. There will be a license that allows for non-commercial use and prohibits incorporating the model or model features into a commercial product.
C3  - 2016 IEEE Aerospace Conference
DA  - 2016/03/05/12
PY  - 2016
DO  - 10.1109/AERO.2016.7500592
SP  - 1
EP  - 16
KW  - Unified modeling language
KW  - Analytical models
KW  - Object oriented modeling
KW  - Stakeholders
KW  - Adaptation models
ER  - 

TY  - CONF
TI  - Formal Requirements and Constraints Modelling in FORM-L for the Engineering of Complex Socio-Technical Systems
AU  - T. Nguyen
T2  - 2019 IEEE 27th International Requirements Engineering Conference Workshops (REW)
AB  - Socio-technical systems combine behaviour and actions from human operators, physical processes (e.g., thermodynamic or electromagnetism), computing and data communication. One often uses expression "cyber-physical system", or "systems of systems" in the case of systems composed of socio-technical systems of their own that each have different stakeholders, owners and lifecycles, but that must cooperate in order to achieve what none can achieve independently. Complex systems are systems that require the cooperation and coordination of multiple individuals, multiple teams, multiple engineering disciplines and multiple stakeholders to be fully understood in all necessary aspects. This coordination must be ensured all along the lifetime of the system, from scoping studies that aim at determining the nature of the system needed, to deconstruction. For systems such as power plants or passenger aircrafts, this lifetime may cover several decades, during which the system needs to be operated, maintained, retrofitted and upgraded, by multiple successive generations. EDF has developed a FOrmal Requirements Modelling Language (FORM-L) to help address this issue for what concerns dynamic phenomena. This paper provides a brief introduction to FORM-L and its underlying methodology, illustrated with short examples.
C3  - 2019 IEEE 27th International Requirements Engineering Conference Workshops (REW)
DA  - 2019/09/23/27
PY  - 2019
DO  - 10.1109/REW.2019.00027
SP  - 123
EP  - 132
KW  - Atmospheric modeling
KW  - Stakeholders
KW  - Computational modeling
KW  - Model-Based Systems Engineering, Requirements engineering, Formal Requirements Modelling, Simulation, Formal Analysis, Verification & Validation, Socio-Technical Syystems, Systems of Systems, Cyber-Physical Systems, Complex systems, Justification Frameworks
KW  - Power generation
KW  - Sociotechnical systems
KW  - Time-domain analysis
ER  - 

TY  - CONF
TI  - Checking models based on an iterative co-specification process of a critical system
AU  - F. Bouffaron
AU  - P. Marange
AU  - G. Morel
T2  - 2014 12th IEEE International Conference on Industrial Informatics (INDIN)
AB  - Recurrent incident reports indicate that critical systems such as power plants exhibit unintended emergent behaviors outside of acceptable limits, despite of the increasing development of dependable automation technologies as well as of a lot of techniques related to dependability issues. Among many causes, the role of human for operating technical artefacts is of importance, but also for designing them from the early stages of specification in order to check the basic property of wholeness of any system. A mean is to ensure a continuum of compliant models to component integration through an iterative process between all the disciplines involved to engineer these systems as whole all along their life cycle. However, a human-based process to check the âright-system requirements-rightâ remains not fully adequate at the scale of real systems engineering projects and in any case to critical issues. This paper explores the formal checking compliance of architecting models with dependability requirements. These models are refined iteratively by specialist and specialty engineers interoperating with a system engineer through a co-specification process on a particular case study of a critical power-plant sub-system.
C3  - 2014 12th IEEE International Conference on Industrial Informatics (INDIN)
DA  - 2014/07/27/30
PY  - 2014
DO  - 10.1109/INDIN.2014.6945516
SP  - 248
EP  - 254
SN  - 2378-363X
KW  - Automation
KW  - model based systems engineering
KW  - Modeling
KW  - Process control
KW  - Aerospace electronics
KW  - Power generation
KW  - co-specification
KW  - dependability requirements
KW  - Knowledge engineering
KW  - model-checking
KW  - verification/validation
ER  - 

TY  - CONF
TI  - Formal requirement management for the Responsive and Formal Design process
AU  - S. Gebreyohannes
AU  - W. Edmonson
AU  - J. Chenou
AU  - N. Neogi
AU  - A. Esterline
T2  - 2015 IEEE International Symposium on Systems Engineering (ISSE)
AB  - In this paper, we present the formal requirement management of the Responsive and Formal Design (RFD) process that extracts a formal theory from requirements written in a natural language. The RFD process was developed as a procedure used in designing Cyber-Physical Systems (CPS) and represents an integration of Model-Based Systems Engineering (MBSE) with formal methods to ensure a âcorrect-by-constructionâ design. The extraction of a formal theory is based on Channel Theory as developed by Barwise and Seligman, which is established as a framework for the âflow of informationâ in terms of category theory. A system consists of components connected via channels. Each component is viewed as an information-flow network and mathematically modeled using a notion of a classification. A classification is a table representation of an information-flow network. Regularities (that represent global behavior of the system) of a classification are captured using a theory (a set of formulas or constraints). One goal of the RFD process is to insure that the requirements are formally consistent. In this paper, we develop a set of algorithms that extracts a theory from a classification, though the theory is not necessarily unique. This work is inclusive of an algorithm which checks whether a regular closure (based on structural rules) of a theory is a theory of a given classification. An example of this work is demonstrated through a satellite communication Store and Forward operation.
C3  - 2015 IEEE International Symposium on Systems Engineering (ISSE)
DA  - 2015/09/28/30
PY  - 2015
DO  - 10.1109/SysEng.2015.7302783
SP  - 364
EP  - 369
KW  - Modeling
KW  - Redundancy
KW  - Semantics
KW  - Satellites
KW  - Satellite communication
KW  - Silicon
ER  - 

TY  - CONF
TI  - Enabling the Digital Transformation of the Workforce: A Digital Engineering Competency Framework
AU  - A. Baker
AU  - K. Pepe
AU  - N. Hutchison
AU  - H. Y. S. Tao
AU  - R. Peak
AU  - M. Blackburn
AU  - R. Khan
AU  - C. Whitcomb
T2  - 2021 IEEE International Systems Conference (SysCon)
AB  - This paper describes the goals, approaches, initial results, and preliminary implementation of WRT-1006, a multiphase research task within the Systems Engineering Research Center (SERC). Evidence across the Services and industry has affirmed digital engineering is a critical practice necessary to support acquisition in an environment of increasing global challenges, dynamic threats, rapidly evolving technologies, and increasing life expectancy of our systems currently in operation. Digital engineering updates the systems engineering practices to take full advantage of computational technology, modeling, data analytics, and data sciences. The Department of Defense's vision for digital engineering is to modernize how the Department designs, develops, delivers, operates, and sustains systems, while continuing to practice systems engineering efficiently and effectively. Digital transformation is fundamentally changing the way acquisition and engineering are performed across a wide range of government agencies, industries, and academia. As the Department of Defense (DoD) transitions to digital engineering, there is a need to develop and maintain an acquisition workforce and culture that is literate in model-based engineering, competent in digital engineering models, methods, processes, tools, and understands digital artifacts across the acquisition lifecycle. One of the critical steps that was identified to enable this digital transformation is the development of a competency model that can be used to modernize the workforce. This paper outlines the results after completion of Phase 1 of WRT-1006, which concluded in the initial release of the Digital Engineering Competency Framework (DECF) by SERC, and the initial Phase 2 efforts of implementing the framework as a benchmark for the content of a digital engineering training curriculum. The purpose of the DECF is to provide clear guidance for the DoD acquisition workforce, in particular the engineering acquisition workforce, through clearly defined competencies that illuminate the knowledge, skills, abilities, and behaviors required for digital engineering professionals. The approach taken to develop the DECF drew from existing competency models in fields neighboring digital engineering and from the feedback of experienced practicing digital engineering community. The initial version of the DECF v.1.0 was released as a key WRT1006 Phase 1 result with confidence in the maturity of the structure and general content. The overarching structure of the DECF v.1.0 consists of competency areas, proficiency levels within the competency, and constituting knowledge, skills, abilities, and behaviors (KSABs). Now that this benchmark is established, the second phase of our project involves the comparison of the DECF to the existing Defense Acquisition University (DAU) curriculum to determine what elements of such existing curriculum already support the competencies in the model. This is a bidirectional analysis that will both identify gaps in the training curriculum and potentially identify curriculum content that should be incorporated into the competency model. Although this project is specifically applying the DECF to the acquisition process, the model has applications in any area that will implement Digital Engineering initiatives. Furthermore, this framework has additional use cases that will be explored further including hiring for Digital Engineering positions and ensuring the current work force has the necessary skillsets to adequately implement a digital transformation.
C3  - 2021 IEEE International Systems Conference (SysCon)
DA  - 2021/05/15/April-15
PY  - 2021
DO  - 10.1109/SysCon48628.2021.9447063
SP  - 1
EP  - 8
SN  - 2472-9647
KW  - Tools
KW  - Analytical models
KW  - Model-Based Systems Engineering (MBSE)
KW  - Industries
KW  - Knowledge engineering
KW  - acquisition and engineering workforce
KW  - Benchmark testing
KW  - competency model
KW  - Digital Engineering
KW  - digital transformation
KW  - Digital transformation
KW  - framework
KW  - Training
ER  - 

TY  - CONF
TI  - Modeling of system properties: Research challenges and promising solutions
AU  - A. Garro
AU  - A. Tundis
T2  - 2015 IEEE International Symposium on Systems Engineering (ISSE)
AB  - Modeling of system properties deals with formally expressing constraints and requirements that influence and determine the structure and behavior of a system. System Property Models enable the verification of system properties through real or simulated experiments so as to support their evaluation during system design and their monitoring during system operation. However, several research challenges should be addressed to effectively handle systems properties, ranging from conceptual properties representation to tracing and verification. The paper aims at discussing these main challenges and presenting some promising solutions by focusing on those resulting from recent Systems Engineering research efforts.
C3  - 2015 IEEE International Symposium on Systems Engineering (ISSE)
DA  - 2015/09/28/30
PY  - 2015
DO  - 10.1109/SysEng.2015.7302777
SP  - 324
EP  - 331
KW  - Model-Based Systems Engineering
KW  - Monitoring
KW  - Object oriented modeling
KW  - Context modeling
KW  - Software
KW  - Binding and Automated Model Composition
KW  - Context
KW  - System Properties Modeling
KW  - Tracing and Verification
ER  - 

TY  - CONF
TI  - Towards the Integration of Cybersecurity Risk Assessment into Model-based Requirements Engineering
AU  - D. Naouar
AU  - J. E. Hachem
AU  - J. -L. Voirin
AU  - J. Foisil
AU  - Y. Kermarrec
T2  - 2021 IEEE 29th International Requirements Engineering Conference (RE)
AB  - Engineering projects requires to consider the increasingly significant needs and constraints regarding expected behaviors, services, quality and security. These requirements are introduced into system and software engineering projects as functional and non-functional properties. Satisfying such properties implies rigorous processes that steer the project, from the requirements identification and definition to the system deployment and maintenance. Model-Based System Engineering (MBSE) is an effective approach to address security requirements and risk assessment at the early stages of the development life cycle, which enables cost-efficient fixes. The aim of this work is to investigate how cybersecurity risk assessment could be integrated into model-based requirement engineering. We propose a Model-based Cyberisk Assessment (MBCA) method, that comprises: (1) A semantic alignment between risk assessment concepts and system modeling concepts and (2) A modeling language extension to represent security concepts and metrics throughout the system modeling life cycle. To illustrate our approach, validate its applicability and evaluate its expressiveness, we applied it to an industrial in-flight entertainment system.
C3  - 2021 IEEE 29th International Requirements Engineering Conference (RE)
DA  - 2021/09/20/24
PY  - 2021
DO  - 10.1109/RE51729.2021.00037
SP  - 334
EP  - 344
SN  - 2332-6441
KW  - Model-Based Systems Engineering
KW  - Requirements engineering
KW  - Security requirements
KW  - Risk management
KW  - Semantics
KW  - Systems modeling
KW  - Maintenance engineering
KW  - Entertainment industry
KW  - Measurement
KW  - Risk assessment
KW  - System and security co-engineering
ER  - 

TY  - CONF
TI  - Simulating SysML transportation models
AU  - C. Kotronis
AU  - A. Tsadimas
AU  - G. Kapos
AU  - V. Dalakas
AU  - M. Nikolaidou
AU  - D. Anagnostopoulos
T2  - 2016 IEEE International Conference on Systems, Man, and Cybernetics (SMC)
AB  - Model-based Systems Engineering (MBSE) promises efficient and effective systems development, by providing integrated system model views and streamlining the transition between different development activities. For instance, system testing with simulation should be provided as a simple facility for the performance evaluation of complex systems. Transportation systems are complex and their behavior is determined by dynamic factors. However, research efforts define simulation models for transportation systems, using custom or simulation-specific notation. Additionally, model-based approaches for transportation systems emphasize peripheral issues, such as safety conditions and environmental impact. In this work, a framework that enables seamless performance evaluation of Railway Transportation System (RTS) models via simulation is proposed. The de facto standard for MBSE modeling, Systems Modeling Language (SysML), is selected as the modeling infrastructure, while other standards, like Query/View/Transformation (QVT), are used for the generation of executable simulation models. The latter can be simulated in Discrete Event System Specification (DEVS) simulators and the simulation results are returned in the RTS SysML model. Additionally, the application of the framework in the public RTS of Athens and the obtained simulation results are presented.
C3  - 2016 IEEE International Conference on Systems, Man, and Cybernetics (SMC)
DA  - 2016/10/09/12
PY  - 2016
DO  - 10.1109/SMC.2016.7844478
SP  - 001674
EP  - 001679
KW  - Model-based Engineering
KW  - Unified modeling language
KW  - SysML
KW  - DEVS
KW  - Simulation
KW  - Systems Modeling Language
KW  - Context modeling
KW  - Rail transportation
KW  - MDA
KW  - QVT
KW  - Transportation Systems
ER  - 

TY  - CONF
TI  - Towards Optimal Supervisory Control of Discrete-Time Stochastic Discrete-Event Processes with Data
AU  - J. Markovski
T2  - 2013 13th International Conference on Application of Concurrency to System Design
AB  - We propose a model-based systems engineering framework for supervisory control and probabilistic model checking of discrete-time stochastic discrete-event systems. Supervisory control theory deals with synthesis of models of supervisory controllers that ensure safe and nonblocking behavior, based on models of the uncontrolled system and the control requirements. However, guaranteeing only safety and nonblocking properties of the supervised system is not sufficient, and often performance measures must be taken into account. Unfortunately, treating optimality in the synthesis procedure is a costly undertaking. Therefore, we propose to decouple the synthesis of the supervisor that caters for functional aspects of the system from the performance evaluation that considers the quantitative aspects. We provide an appropriate abstraction of the stochastic behavior, which enables us to employ standard supervisory controller synthesis tools. The synthesized supervisor is, thereafter, coupled with the stochastic model of the unsupervised system, and abstracted to a discretetime Markov process, which is fed to a probabilistic model checker to validate the performance requirements.
C3  - 2013 13th International Conference on Application of Concurrency to System Design
DA  - 2013/07/08/10
PY  - 2013
DO  - 10.1109/ACSD.2013.29
SP  - 31
EP  - 40
SN  - 1550-4808
KW  - probabilistic model checking
KW  - controllability of probabilistic timed systems
KW  - probabilistic timed partial bisimulation
KW  - supervisory control theory
KW  - Controllability
KW  - Markov processes
KW  - Supervisory control
KW  - Standards
KW  - Automata
KW  - Delays
KW  - Probabilistic logic
ER  - 

TY  - CONF
TI  - Model-based engineering of autonomous systems using ontologies and metamodels
AU  - J. Bermejo-Alonso
AU  - C. HernÃ¡ndez
AU  - R. Sanz
T2  - 2016 IEEE International Symposium on Systems Engineering (ISSE)
AB  - Our research focuses on engineering processes for autonomous intelligent systems construction with a life-cycle holistic view, by means of a model-based framework. The conceptual core of the framework is ontologically-driven. Our ontological approach consists of two elements. The first one is a domain Ontology for Autonomous Systems (OASys) to capture the autonomous system structure, function and behaviour. The second element is an Ontology-driven Engineering Methodology (ODEM) to develop the target autonomous system. This methodology is based on Model-based Systems Engineering and produces models of the system as core assets. These models are used through the whole system life-cycle, from implementation or validation to operation and maintenance. On the application side, the ontological framework has been used to develop a metacontrol engineering technology for autonomous systems, the OM Engineering Process (OMEP), to improve their runtime adaptivity and resilience. OMEP has been applied to a mobile robot in the form of a metacontroller built on top of the robot's control architecture. It exploits a functional model of the robot (TOMASys Model) to reconfigure its control if required by the situation at runtime. The functional model is based on a metamodel about controller function and structure using concepts form the ontology. The metacontroller was developed using the ontology-driven methodology and a robot control reference architecture.
C3  - 2016 IEEE International Symposium on Systems Engineering (ISSE)
DA  - 2016/10/03/5
PY  - 2016
DO  - 10.1109/SysEng.2016.7753185
SP  - 1
EP  - 8
KW  - Unified modeling language
KW  - Ontologies
KW  - Analytical models
KW  - Robots
ER  - 

TY  - CONF
TI  - Performance evaluation with cost estimation for supervised systems
AU  - J. Markovski
T2  - 2012 IEEE International Conference on Systems, Man, and Cybernetics (SMC)
AB  - Supervisory control theory deals with automated synthesis of models of supervisory controllers that ensure safe and nonblocking behavior of the supervised system. Typically, (large) supervised systems cannot be guaranteed to meet elaborated performance requirements, as ensuring them during the synthesis procedure is a costly undertaking. We propose a model-based systems engineering framework that enables supervisor synthesis of stochastic (nondeterministic) discrete-event systems, and post-synthesis validation of quantitative properties of the supervised system by imposing a cost model. To this end, we develop several extension tools that interface with the supervisory controller synthesis tool Supremica. To illustrate our approach, we remodel an industrial case study involving coordination of maintenance procedures of a printing process and demonstrate how to obtain performance measures using Markovian reward model checking.
C3  - 2012 IEEE International Conference on Systems, Man, and Cybernetics (SMC)
DA  - 2012/10/14/17
PY  - 2012
DO  - 10.1109/ICSMC.2012.6377668
SP  - 6
EP  - 11
SN  - 1062-922X
KW  - Modeling
KW  - Markov processes
KW  - performance evaluation
KW  - Automata
KW  - Maintenance engineering
KW  - Printing
KW  - Delay
KW  - discrete-event systems
KW  - formal specification
KW  - supervisory control
ER  - 

TY  - CONF
TI  - Exporting Object-Process Methodology system models to the Semantic Web
AU  - S. Jacobs
AU  - N. Wengrowicz
AU  - D. Dori
T2  - 2014 IEEE International Conference on Systems, Man, and Cybernetics (SMC)
AB  - Model-Based Systems Engineering (MBSE) is gradually becoming an acceptable good practice, especially for large-scale complex systems. The variety of modeling languages enables detailed representation of domain-specific knowledge of different aspects of a system. Semantic Web concepts provide opportunities for easier and more efficient collaboration between design and verification teams using different modeling tools. IBM Semantic Mediation Container (SMC) is a tool interoperability platform, allowing mediation and synchronization among models in different languages based on their ontologies. We propose integrating into SMC the ability to translate Object-Process Methodology (OPM), the emerging ISO 19450 Standard, which provides a holistic view of the system's function, structure, and behavior. In this paper we describe the first integration stages - defining the OPM ontology in a way that conforms to Semantic Web specifications and developing a module for exporting OPM models from their visual representation to and back from Resource Description Framework (RDF). We discuss the scope of the ontology and different approaches of element representation. We portray the implementation of the export module as an extension to OPM CASE tool (OPCAT). The ontology and export module are validated by round-trip transformation of OPM models from their visual representation to RDF and back by experimenting with OPM experts.
C3  - 2014 IEEE International Conference on Systems, Man, and Cybernetics (SMC)
DA  - 2014/10/05/8
PY  - 2014
DO  - 10.1109/SMC.2014.6974046
SP  - 1014
EP  - 1019
SN  - 1062-922X
KW  - Conceptual modeling
KW  - Object-Process Methodology
KW  - Ontology design
KW  - RDF
KW  - Ontologies
KW  - Semantic Web
KW  - OWL
KW  - Data models
KW  - Load modeling
KW  - Mediation
KW  - Resource description framework
KW  - Semantic mediation
ER  - 

TY  - CONF
TI  - Defining Object-Process Methodology in Web Ontology Language for Semantic Mediation
AU  - S. Jacobs
AU  - N. Wengrowicz
AU  - D. Dori
T2  - 2014 IEEE International Conference on Software Science, Technology and Engineering
AB  - Model-Based Systems Engineering (MBSE) is gradually becoming an acceptable good practice, especially for large-scale complex systems. The variety of modeling languages allows detailed representation of domain-specific knowledge of different components and aspects of a system. Semantic Web concepts provide opportunities for easier and more efficient collaboration between design and verification teams using different modeling tools. IBM Semantic Mediation Container (SMC) is a tool interoperability platform, allowing mediation and synchronization among models in different languages based on their ontologies. We propose integrating into SMC the ability to translate Object-Process Methodology (OPM), the emerging ISO 19450 Standard, which provides a holistic view of the system's function, structure, and behavior. In this paper we describe the first integration stage - defining the OPM ontology in a way that conforms to Semantic Web specifications. We discuss different approaches of element representation and validate the ontology by round-trip transformation of OPM models from their visual representation to Resource Description Framework (RDF) and back.
C3  - 2014 IEEE International Conference on Software Science, Technology and Engineering
DA  - 2014/06/11/12
PY  - 2014
DO  - 10.1109/SWSTE.2014.14
SP  - 87
EP  - 95
KW  - Conceptual modeling
KW  - Object-Process Methodology
KW  - Ontology design
KW  - RDF
KW  - Semantic Web Semantic mediation
KW  - Ontologies
KW  - OWL
KW  - Semantics
KW  - Data models
KW  - Mediation
KW  - Resource description framework
ER  - 

TY  - CONF
TI  - Object-oriented model validation for single bowden power window system development
AU  - S. Patalano
AU  - F. Vitolo
AU  - A. Lanzotti
T2  - 2015 IEEE International Symposium on Systems Engineering (ISSE)
AB  - The paper deals with automotive power window systems and, in particular, tackles the problem of validating the object-oriented model of a single bowden system, to be used within a Model-Based System Engineering (MBSE) approach. Therefore, the paper tackles the problem of increasing accuracy of object-oriented models by defining model refinements i.e. by identifying objects whose modelling has to be improved. Firstly, the role of object-oriented modelling and the main characteristics of the power window system are summarized. Then, the object-oriented model of an automotive single bowden power window system is presented. Finally, the experimental phase, performed to characterize the behavior of the real system is summarised and the validation of simulation model, as well as the identification of model refinement, are accomplished.
C3  - 2015 IEEE International Symposium on Systems Engineering (ISSE)
DA  - 2015/09/28/30
PY  - 2015
DO  - 10.1109/SysEng.2015.7302748
SP  - 150
EP  - 154
KW  - mechatronic systems
KW  - Mechatronics
KW  - Mathematical model
KW  - Object oriented modeling
KW  - Solid modeling
KW  - DC motors
KW  - Integrated circuit modeling
KW  - model validation
KW  - object-oriented modeling
KW  - single bowden power window system
KW  - Voltage measurement
ER  - 

TY  - CONF
TI  - Developing a CubeSat Model-Based System Engineering (MBSE) reference model â Interim status #3
AU  - D. Kaslow
AU  - B. Ayres
AU  - P. T. Cahill
AU  - L. Hart
AU  - R. Yntema
T2  - 2017 IEEE Aerospace Conference
AB  - Model-Based Systems Engineering (MBSE) is the formalized application of modeling to support key systems engineering tasks for addressing requirements, design, analysis, validation, and verification. The International Council on Systems Engineering (INCOSE) established the MBSE Initiative to promote, advance, and institutionalize the practice of MBSE. As part of this effort, the INCOSE Space Systems Working Group (SSWG) has been investigating the applicability of MBSE for designing CubeSats. Our application of MBSE is enabled by the graphical modeling language Systems Modeling Language (SysML). SysML is used to model all aspects of a system either directly or through interfaces with other models. SysML diagrams are used to describe requirements, structures, behaviors, and parametrics from the system down to the component level. Requirements and design are contained in the model rather than in a series of independent engineering artifacts. The CubeSat Reference Model provides the logical architecture. The logical elements can be reused as a starting point for a mission-specific CubeSat logical architecture, followed by the physical architecture and the CubeSat development. Our prior work established the CubeSat Reference Model domain as consisting of the stakeholders, CubeSat enterprise, external environment, and external constraints, with the CubeSat enterprise consisting of space and ground segments. The CubeSat enterprise architecture has been refined to accommodate an external service providing CubeSat transportation to a launch site, integration into a launch vehicle, launch, and deployment. It has also been refined to accommodate a CubeSat project developing its own ground station or operating with an existing ground station that provides uplink and downlink services. Space and ground subsystems had been identified in our prior work. Use cases have now been established to further define the subsystem capabilities. It has been recognized that there are two modeling efforts. One is the SSWG developing a CubeSat Reference Model with its logical architecture. The other is a team eventually taking the CubeSat Reference Model as a basis for its mission-specific logical and physical architectures. Therefore, there are two categories of stakeholders. A stakeholder is any entity that has an interest in the system. The stakeholders for the CubeSat Reference Model include INCOSE, the Object Management Group (OMG), regulatory agencies, and the university teams that will be using the CubeSat Reference Model. We are exploring having NASA, NOAA, and FCC regulations contained within their own SysML models and connecting those models to our CubeSat Reference Model. The stakeholders for the mission-specific CubeSat model are those with an interest in the mission-specific CubeSat space and ground system. Typical stakeholders for a space and ground system include sponsor, user, operator, project manager, project engineer, developer, and tester. The list of stakeholders for a university CubeSat project is much smaller. We are collaborating with OMGs Space Domain Task Force (SDTF) to adopt the CubeSat Reference Model as an OMG specification.
C3  - 2017 IEEE Aerospace Conference
DA  - 2017/03/04/11
PY  - 2017
DO  - 10.1109/AERO.2017.7943691
SP  - 1
EP  - 15
KW  - Space stations
ER  - 

TY  - CONF
TI  - Towards Security as a Service (SecaaS): On the modeling of Security Services for Cloud Computing
AU  - A. Furfaro
AU  - A. Garro
AU  - A. Tundis
T2  - 2014 International Carnahan Conference on Security Technology (ICCST)
AB  - The security of software services accessible via the Internet has always been a crosscutting non-functional requirement of uttermost importance. The recent advent of the Cloud Computing paradigm and its wide diffusion has given birth to new challenges towards the securing of existing Cloud services, by properly accounting the issues related to their delivery models and their usage patterns, and has opened the way to the new concept of Security as a Service(SecaaS), i.e. the ability of developing reusable software services which can be composed with standard Cloud services in order to offer them the suitable security features. In this context, there is a strong need for methods and tools for the modeling of security concerns, as well as for evaluation techniques, for supporting both the comparison of different design choices and the analysis of their impact on the behavior of new services before their actual realization. This paper proposes a meta-model for supporting the modeling of Security Services in a Cloud Computing environment as well as an approach for guiding the identification and the integration of security services within the standard Cloud delivery models. The proposal is exemplified through a case study.
C3  - 2014 International Carnahan Conference on Security Technology (ICCST)
DA  - 2014/10/13/16
PY  - 2014
DO  - 10.1109/CCST.2014.6986995
SP  - 1
EP  - 6
SN  - 2153-0742
KW  - Model-Based Systems Engineering
KW  - Computational modeling
KW  - Modeling and Simulation
KW  - Context
KW  - Authentication
KW  - Cloud computing
KW  - Cloud Computing
KW  - Cyber-Security
KW  - Security Engineering
ER  - 

TY  - CONF
TI  - System architecture optimization with runtime reconfiguration of simulation models
AU  - A. Wichmann
AU  - S. JÃ¤ger
AU  - T. Jungebloud
AU  - R. Maschotta
AU  - A. Zimmermann
T2  - 2015 Annual IEEE Systems Conference (SysCon) Proceedings
AB  - The development of complex systems often leads to delays in integration and roll-out, massive cost overruns, and in many cases to sub-optimal solutions regarding system performance and robustness. In order to overcome these issues, model-based systems engineering methodologies can be employed. The application of simulation models in addition to system specifications increase the engineers' understanding of complex system behavior. The approach also allows the detection of incomplete or inconsistent functional requirements as well as other design failures.
C3  - 2015 Annual IEEE Systems Conference (SysCon) Proceedings
DA  - 2015/04/13/16
PY  - 2015
DO  - 10.1109/SYSCON.2015.7116826
SP  - 660
EP  - 667
KW  - Unified modeling language
KW  - Optimization
KW  - Computational modeling
KW  - discrete event simulation
KW  - global optimization
KW  - model reconfiguration
KW  - Performance evaluation
KW  - Ports (Computers)
KW  - probabilistic metaheuristic
KW  - Sensors
KW  - simulated annealing
KW  - Wireless sensor networks
ER  - 

TY  - CONF
TI  - Towards Simulation of CubeSat Operational Scenarios under a Cyber-Physical Systems View
AU  - D. P. de Almeida
AU  - B. Graics
AU  - R. A. J. Chagas
AU  - F. L. de Sousa
AU  - F. Mattiello-Francisco
T2  - 2021 10th Latin-American Symposium on Dependable Computing (LADC)
AB  - In the development of academic CubeSat-based space missions, it is common to skip or rush many practices of the Systems Engineering Process due to time and cost constraints, which may lead to issues later on in the mission and failures. Mission concept analyses are often in these practices, including the analysis of the in-orbit behavior of the satellite with respects to power consumption and data generation. With the purpose of supporting these analyses, this article introduces a workflow based on a Cyber-Physical abstraction of CubeSat mission operation scenarios, which uses architectural models based on SysML Class Diagrams and automatic model transformation to support the simulation of these operational scenarios in an open source Model-Based System Engineering (MBSE) tool. These simulations can be used in mission concept analyses in Phase-0 studies to verify initial operations requirements and drive further design implementations.
C3  - 2021 10th Latin-American Symposium on Dependable Computing (LADC)
DA  - 2021/11/22/26
PY  - 2021
DO  - 10.1109/LADC53747.2021.9672594
SP  - 1
EP  - 4
KW  - MBSE
KW  - simulation
KW  - Cyber-physical systems
KW  - Analytical models
KW  - Satellites
KW  - Software
KW  - code generation
KW  - Codes
KW  - CubeSat-based space mission
KW  - Power demand
KW  - Space missions
ER  - 

TY  - JOUR
TI  - ESE Framework Verification by MBSE
AU  - M. Sitton
AU  - Y. Reich
T2  - IEEE Systems Journal
AB  - Enterprise system engineering (ESE) is a practice emerging in the last decades, aiming to support the enterprise systems engineers in generating and developing enterprise architecture and improving enterprise operational processes. However, ESE differs significantly from systems engineering (SE) due to the enterprise's unique property as a system of unsynchronized arrays of systems. This property might lead to severe issues, such as cross-enterprise failures, lack of decision-support information for cross-enterprise decisions, long delays in integration tests, and unexpected emergent behavior. Enterprise Processes Integrative Collaboration (EPIC) framework is an ESE framework, aims to address this property by generating better coordination between unsynchronized arrays of systems within the enterprise and even further across several enterprises. Previous research dealt with the validation of this framework by implementation in two large-scale enterprises from the aerospace and transportation disciplines. The objective of this study was to verify the EPIC framework completeness and integrity, as an example of ESE framework verification. A model-based SE methodology was used to encapsulate EPIC, defining the ESE activities, required resources, and products. This encapsulation allows tracing the engineering activities, verifying the model completeness, traceability, integrity, and interoperability of the ESE processes collaboration.
DA  - 2019/09//
PY  - 2019
DO  - 10.1109/JSYST.2018.2877667
VL  - 13
IS  - 3
SP  - 2108
EP  - 2117
J2  - IEEE Systems Journal
SN  - 1937-9234
KW  - Tools
KW  - Ontologies
KW  - Standards
KW  - Object oriented modeling
KW  - Business
KW  - Complex systems
KW  - enterprise systems engineering (ESE)
KW  - model-based system engineering (SE)
KW  - processes collaboration
ER  - 

TY  - CONF
TI  - Driver Stress Level Change Detection Using Model-Based System Engineering Method
AU  - B. S. Ongul
AU  - M. A. Ongun
T2  - 2020 4th International Symposium on Multidisciplinary Studies and Innovative Technologies (ISMSIT)
AB  - This paper intends to develop a method for the nervous system changes and driving style modifications as a response to incremental stressing level during driving or as continuous driver behavior and driving style analysis and detection with the perspective of the model-based system engineering framework. Thus, this problem started to be investigated from the requirement level analysis in line with designing a model that fulfills the requirements and development of the model. Finally, the verification of the model is executed. In this paper, detecting the driver type is investigated in terms of acceleration pedal usage along with timely responses and the quantity of the events. The investigation aims to detect the possibilities for unique driver identification and the possible effects and preventive actions of this behavior.
C3  - 2020 4th International Symposium on Multidisciplinary Studies and Innovative Technologies (ISMSIT)
DA  - 2020/10/22/24
PY  - 2020
DO  - 10.1109/ISMSIT50672.2020.9255072
SP  - 1
EP  - 5
KW  - MBSE
KW  - Safety
KW  - Analytical models
KW  - Systems engineering and theory
KW  - Mathematical model
KW  - Brakes
KW  - Vehicles
KW  - Acceleration
KW  - aggressive driver
KW  - angry driver
KW  - driver type evaluation
KW  - driver types
KW  - driving style detection
KW  - nervous driver
KW  - style
KW  - transmission systems
ER  - 

TY  - CONF
TI  - Model-based System Architecture for Event-triggered Wireless Control of Bio-analytical Devices
AU  - K. Ashraf
AU  - Y. L. Moullec
AU  - T. Pardy
AU  - T. Rang
T2  - 2021 24th Euromicro Conference on Digital System Design (DSD)
AB  - Bio-analytical devices have gained importance over the past few years because of their application in rapid diagnostics and biochemical analysis. The integration of the Cyber-Physical System (CPS) concept with bio-analytical devices is essential to enable automation of the device. Modeling of CPS-based bio-analytical devices can provide a deeper understanding of system behavior at early design stages and avoid costly iterations. In this paper, a model-based system architecture enabling wireless control of bio-analytical devices is proposed using the extended timed automata-based formal technique. Using this formal technique, a study case "A droplet flow cytometer for antibiotic susceptibility testing of bacteria" is modeled and verified using the UPPAAL tool. The synchronized operation of the modeled system under defined constraints was confirmed. In addition, the case study shows the implications of formal techniques for the design and verification of wireless automation of high-throughput laboratory setups in Model-Based System Engineering (MBSE).
C3  - 2021 24th Euromicro Conference on Digital System Design (DSD)
DA  - 2021/09/01/3
PY  - 2021
DO  - 10.1109/DSD53832.2021.00076
SP  - 465
EP  - 471
KW  - Automation
KW  - Tools
KW  - Cyber-physical systems
KW  - Biological system modeling
KW  - Systems architecture
KW  - Automata
KW  - Biochemical analysis
KW  - Fault detection
KW  - Formal Verification
KW  - Microorganisms
KW  - Net-worked control systems
KW  - Wireless networks
ER  - 

TY  - CONF
TI  - Synthesis and analysis of supervisory controllers for time-abstracted discrete-event systems
AU  - J. Markovski
T2  - 2013 IEEE International Conference on Automation Science and Engineering (CASE)
AB  - We synthesize supervisory controllers for timed discrete-event systems by employing data-based control requirements and by abstracting from the timing aspects of the original system. This enables us to employ standard synthesis tools, like Supremica, whereas the timing behavior of the supervised system can be analyzed by using model checking tools, like UPPAAL. We cast our proposal in a synthesis-centric modelbased systems engineering framework that is supported by a process-theoretic treatment of supervisory control theory for timed discrete-event systems with data. The theory provides for the appropriate abstractions of the timed behavior of the original system and for compositional model transformation from Supremica to UPPAAL. To this end, we develop a suitable model transformation tool that interfaces the employed synthesis and verification tools. Finally, we illustrate the proposed framework on a case study dealing with movement coordination of automated guided vehicles in pipeless chemical plants.
C3  - 2013 IEEE International Conference on Automation Science and Engineering (CASE)
DA  - 2013/08/17/20
PY  - 2013
DO  - 10.1109/CoASE.2013.6653906
SP  - 1075
EP  - 1082
SN  - 2161-8089
KW  - Modeling
KW  - Controllability
KW  - Automata
KW  - Delays
KW  - Clocks
KW  - Cost accounting
ER  - 

TY  - CONF
TI  - Model-based off-nominal state isolation and detection system for autonomous fault management
AU  - K. Kolcio
AU  - L. Fesq
T2  - 2016 IEEE Aerospace Conference
AB  - This paper presents a model-based fault management (FM) system designed to provide off-nominal state detection and isolation capabilities that are key components to assessing spacecraft state awareness. The ability to autonomously isolate spacecraft failures to component levels will enable faster and more targeted responses and recovery thereby reducing down time. The use of model-based systems and practices is being explored by the FM community as a viable approach to developing more capable, autonomous systems in order to meet mission objectives. Model-based systems can provide better fault identification than traditional methods of fault detection such as limit-checking. They also lend themselves to more straight-forward approaches to verification and validation. We have chosen a particular model-based technique called Constraint Suspension for autonomous fault detection and isolation that does not require explicit fault modeling. The system is composed of a diagnostic engine and nominal system models of the target application, for example sensors and actuators. Sensed data are propagated through models of nominal system behavior. Faults are diagnosed when inconsistencies arise between sensed and modeled data. Several benefits result from this choice. First, because knowledge of faulty behavior is not required, it is possible to detect unanticipated and unforeseen faults. In fact, anomalous, degraded, and failed states all can be detected. Second, the same models used for nominal analyses and operations can be re-used for fault management, saving development resources and time. Third, the core diagnostic engine algorithm is complete and requires no additions to accommodate a potentially growing number of faults over time resulting in a relatively compact software footprint. Related to the second and third points is that the core algorithm and, potentially, models can be reused from mission to mission. Finally, the system can be used early in the design phase as a tool for sensor placement analyses and model verification. Health information produced by the FM system can be used to make resource allocation and planning and scheduling decisions by ground operations or by other on-board autonomy agents. Autonomous fault detection, isolation, and recovery (FDIR) on board space vehicles will provide protection and increased mission availability and reliability. On the ground such systems enable lights-out monitoring as well as training and support for operators. This paper presents the development of fault detection and isolation algorithms and models. Application of the system to a spacecraft attitude control system is discussed. Finally we apply Model-Based Systems Engineering (MBSE) modeling patterns to the fault management system models as a way to facilitate the development of the models through the use of SysML.
C3  - 2016 IEEE Aerospace Conference
DA  - 2016/03/05/12
PY  - 2016
DO  - 10.1109/AERO.2016.7500793
SP  - 1
EP  - 13
KW  - Hardware
KW  - Monitoring
KW  - Data models
KW  - Sensors
KW  - Frequency modulation
KW  - Space vehicles
ER  - 

TY  - CONF
TI  - State Machines Consistency between Model Based System Engineering and Safety Assessment Models
AU  - J. Vidalie
AU  - M. -S. Kendel
AU  - F. Mhenni
AU  - M. Batteux
AU  - J. -Y. Choley
T2  - 2021 IEEE International Symposium on Systems Engineering (ISSE)
AB  - Nowadays with the development of industrial systems, engineers are having more difficulties to design complex systems, meaning that they have to conduct several simulations to design system models. In the case of safety assessment, this creates a need for the safety model to be consistent with the system engineering model, since both models are supposed to represent the same architecture. In this work we present a methodology for synchronisation of two kinds of state machines, Harelâs Statecharts and Guarded Transition Systems. These formalisms are used to model system behavior respectively in MBSE (Model Based System Engineering) and MBSA (Model Based Safety Assessment) tools. This methodology, based on the SmartSync framework [1] that aims at asserting structural consistency between MBSE and MBSA, is composed of 3 steps: abstraction to a pivot formalism, comparison and concretization. We compare two mappings of concepts used for translation from our state machines to the S2ML language.
C3  - 2021 IEEE International Symposium on Systems Engineering (ISSE)
DA  - 2021/10/13/Sept.-13
PY  - 2021
DO  - 10.1109/ISSE51541.2021.9582470
SP  - 1
EP  - 8
SN  - 2687-8828
KW  - SysML
KW  - MBSE
KW  - Tools
KW  - Modeling
KW  - MBSA
KW  - Safety
KW  - Computer architecture
KW  - Complex systems
KW  - Abstraction
KW  - AltaRica
KW  - Comparison
KW  - Concretization
KW  - Guarded Transition System
KW  - Harel StateChart
KW  - S2ML
KW  - State Machine
KW  - Synchronization
ER  - 

TY  - CONF
TI  - Civil aircraft landing gear brake system development and evaluation using model based system engineering
AU  - X. Hai
AU  - S. Zhang
AU  - X. Xu
T2  - 2017 36th Chinese Control Conference (CCC)
AB  - Civil aircraft landing gear brake system development and evaluation using model based system engineering is proposed in this paper. This paper describes the process of civil aircraft landing gear brake system development by model based system engineering (MBSE), and implementation using IBM Rational Rhapsody, a SysML Language Software Environment. Use case, function flow, and state-machine of system are set up by model and to describe the requirement analysis and architecture design of highly complex system in civil aircraft. It demonstrates how to integrate a SysML modeling tool with Simulink to validate system specification. The integration enables users to validate the behavior by simulating the overall composition.
C3  - 2017 36th Chinese Control Conference (CCC)
DA  - 2017/07/26/28
PY  - 2017
DO  - 10.23919/ChiCC.2017.8028981
SP  - 10192
EP  - 10197
SN  - 1934-1768
KW  - SysML
KW  - Simulation
KW  - Aircraft Landing Gear Brake System
KW  - Erbium
KW  - Model-based System Engineering
ER  - 

TY  - CONF
TI  - Electric Circuit- and Wiring Harness-Aware Behavioral Simulation of Model-Based E/E-Architectures at System Level
AU  - H. Bucher
AU  - J. Becker
T2  - 2018 IEEE International Systems Engineering Symposium (ISSE)
AB  - To cope with the rising complexity of automotive electric/electronic architectures (EEA), model-based development at system level is well-established and typically realized in architecture description languages (ADLs) and high-level tools. In this paper, we extend a previously developed approach for automated cross-domain simulation synthesis of model-based EEA descriptions enabling system-level evaluation by a behavioral specification layer. The key contributions of this work are modeling extensions applied to a state-of-the-art EEA ADL to refine specified behavior during synthesis with electric circuits including wiring harness details modeled at the hardware layer. Preliminary experiments show that the novel combination of quantization- and SPICE-based synthesized circuit simulation, conducted in a discrete-event manner and applied to a buck converter, a typical device in an automotive EEA, increases simulation efficiency up to a factor of 2.0 compared to other state-of-the-art tools while preserving accuracy. Finally, another example EEA hardware network, modeling the dynamic current consumption of an Electric Power Steering actuator, applied to a realistic vehicle topology model demonstrates the impact of wiring harness refinements.
C3  - 2018 IEEE International Systems Engineering Symposium (ISSE)
DA  - 2018/10/01/3
PY  - 2018
DO  - 10.1109/SysEng.2018.8544434
SP  - 1
EP  - 8
KW  - MBSE
KW  - Tools
KW  - PREEvision
KW  - Ptolemy II
KW  - Automotive
KW  - Computer architecture
KW  - Hardware
KW  - Mathematical model
KW  - Data models
KW  - Modeling and Simulation
KW  - Integrated circuit modeling
KW  - ADL
KW  - E/E-Architectures
KW  - QSS
KW  - SPICE
KW  - Wiring
KW  - Wiring Harness
ER  - 

TY  - CONF
TI  - Systems architecture in failure analysis (Applications of architecture modeling to system failure analysis)
AU  - A. Rambikur
AU  - K. Giammarco
AU  - B. O'Halloran
T2  - 2017 12th System of Systems Engineering Conference (SoSE)
AB  - This paper describes research into the applicability and value of architecture modeling techniques in conducting failure analysis on a system that is currently in service. Many Systems of Systems (SoS) currently in service did not include architecture modeling in their design and integration phases. In the absence of architectural models, knowledge of critical items, interfaces, and interactions, is difficult to learn, communicate, and maintain. Failure analysis, particularly for SoS, requires comprehensive system knowledge to produce accurate and timely results. This paper contributes specifically by summarizing existing model-based failure analysis research in terms of applicability to in-service systems and by focusing on Fault Tree Analysis (FTA) and Failure Modes Effects Analysis (FMEA). Much of the existing research in this area is either specific to design or development phases of system lifecycle, or presupposes that architectural models exist, and does not approach the topic from the perspective of value and practicality to an in-service system. Firstly, a general analysis of the commonality of principles, methods, and resources used for failure analysis with those of system architecture modeling is presented. The second contribution is a review of system and SoS modeling techniques and current research as applied to these failure analysis methods. The paper concludes with a summary of model applicability to FTA and FMEA, and a brief analysis of the studied methods, which will guide future research and evaluation of architecture modeling-based methods for failure analysis.
C3  - 2017 12th System of Systems Engineering Conference (SoSE)
DA  - 2017/06/18/21
PY  - 2017
DO  - 10.1109/SYSOSE.2017.7994966
SP  - 1
EP  - 6
KW  - MBSE
KW  - Fault trees
KW  - FMEA
KW  - FTA
KW  - Analytical models
KW  - Systems architecture
KW  - NASA
KW  - behavior modeling
KW  - Cognition
KW  - failure analysis
KW  - Failure analysis
KW  - failure modes
ER  - 

TY  - CONF
TI  - Towards a Model-Based Method for Resilient Critical Infrastructure Engineering How to model Critical Infrastructures and evaluate its Resilience? : How to model Critical Infrastructures and evaluate its Resilience?
AU  - V. CHAPURLAT
AU  - N. DACLIN
AU  - A. Bony-Dandrieux
AU  - J. TIXIER
AU  - D. KAMISSOKO
AU  - F. BENABEN
AU  - B. NASTOV
T2  - 2018 13th Annual Conference on System of Systems Engineering (SoSE)
AB  - This article introduces a tool-equipped method for modeling and simulating behaviors of a Critical Infrastructure (CI) considered here as System of Systems, then evaluating its resilience. The method is based on modelling concepts, languages and tools from Model Based System Engineering (MBSE), System of Systems Engineering (SoSE) and non-functional Properties management domains. It proposes an evaluation technique to evaluate nonfunctional properties, and particularly here considered resilience for which a metric is proposed. Simulation and evaluation are done by using a Multi Agent Systems (MAS).
C3  - 2018 13th Annual Conference on System of Systems Engineering (SoSE)
DA  - 2018/06/19/22
PY  - 2018
DO  - 10.1109/SYSOSE.2018.8428773
SP  - 561
EP  - 567
KW  - Tools
KW  - Analytical models
KW  - Measurement
KW  - Critical infrastructure
KW  - Model Based System Engineering
KW  - Non-functional property
KW  - Resilience
KW  - Resilience Evaluation
KW  - System of Systems Engineering
ER  - 

TY  - JOUR
TI  - Model-based Design Process for the Early Phases of Manufacturing System Planning using SysML
AU  - Steimer, Chantal
AU  - Fischer, Jan
AU  - Aurich, Jan C.
T2  - Complex Systems Engineering and Development Proceedings of the 27th CIRP Design Conference Cranfield University, UK 10th â 12th May 2017
AB  - This paper presents an approach for a model-based planning process for the early phases of manufacturing system planning (MSP). The goals are a better integration of MSP with product development (PD) in the early design phases and an improvement of the coordination of the MSP-related planning disciplines. The presented approach is based on model-based systems engineering (MBSE) and is supported by a modeling scheme which uses the systems modeling language (SysML). The approach consists of a process description of the MSP and of different so called SysML views which describe the information artifacts of each MSP step. It is divided into four different modeling levels that describe the manufacturing system's structure and behavior from different points of view. In order to validate the approach, an exemplary cylinder head production was modeled. Extractions from this example are shown as SysML-diagrams. To conclude the paper, the advantages and disadvantages of using a model-based planning approach with SysML for MSP are discussed.
DA  - 2017/01/01/
PY  - 2017
DO  - 10.1016/j.procir.2017.01.036
VL  - 60
SP  - 163
EP  - 168
J2  - Procedia CIRP
SN  - 2212-8271
UR  - https://www.sciencedirect.com/science/article/pii/S2212827117300379
KW  - MBSE
KW  - Modelling
KW  - Design
KW  - Manufacturing
KW  - Method
KW  - Planning
KW  - System
ER  - 

TY  - JOUR
TI  - Model checking reveals design issues leading to spurious actuation of nuclear instrumentation and control systems
AU  - Pakonen, Antti
AU  - Buzhinsky, I
AU  - BjÃ¶rkman, K
T2  - Reliability Engineering & System Safety
AB  - A spurious actuation of an industrial instrumentation and control (I&C) system is a failure mode where the system or its component inadvertently produces an operation without a justified reason to do so. Design issues leading to spurious failures are difficult to analyse, but pose a high risk for safety. Model checking is a formal verification method that can be used for exhaustive analysis of I&C systems. In this paper, we explain how formal properties that address spurious failures can be specified, and how model checking can then be used to verify I&C application logic designs based on vendor-specific function block diagrams. Based on over ten years of successful practical projects in the Finnish nuclear industry, we present 21 real-world design issues (representing 37% of all detected issues), each involving a systemic failure that could lead to spurious actuation of nuclear safety I&C. We then describe how random failures of the underlying hardware architectureâanother cause for spurious actuationâcan also be included in the models. With an experimental evaluation based on real-world nuclear industry models, we demonstrate that our method can be effectively used for the verification of single failure tolerance.
DA  - 2021/01/01/
PY  - 2021
DO  - 10.1016/j.ress.2020.107237
VL  - 205
SP  - 107237
J2  - Reliability Engineering & System Safety
SN  - 0951-8320
UR  - https://www.sciencedirect.com/science/article/pii/S0951832020307377
KW  - Model checking
KW  - I&c
KW  - Model-based system engineering
KW  - Spurious failure
ER  - 

TY  - JOUR
TI  - Mercury: A modeling, simulation, and optimization framework for data stream-oriented IoT applications
AU  - CÃ¡rdenas, RomÃ¡n
AU  - Arroba, Patricia
AU  - Blanco, Roberto
AU  - MalagÃ³n, Pedro
AU  - Risco-MartÃ­n, JosÃ© L.
AU  - Moya, JosÃ© M.
T2  - Modeling and Simulation of Fog Computing
AB  - The Internet of Things is transforming our society by monitoring users and infrastructuresâ behavior to enable new services that will improve life quality and resource management. These applications require a vast amount of localized information to be processed in real-time so, the deployment of new fog computing infrastructures that bring computing closer to the data sources is a major concern. In this context, we present Mercury, a Modeling, Simulation, and Optimization (M&S&O) framework to analyze the dimensioning and the dynamic operation of real-time fog computing scenarios. Our research proposes a location-aware solution that supports data stream analytics applications including FaaS-based computation offloading. Mercury implements a detailed structural and behavioral simulation model, providing fine-grained simulation outputs, and is described using the Discrete Event System Specification (DEVS) mathematical formalism, helping to validate the modelâs implementation. Finally, we present a case study using real traces from a driver assistance scenario, offering a detailed comparison with other state-of-the-art simulators.
DA  - 2020/05/01/
PY  - 2020
DO  - 10.1016/j.simpat.2019.102037
VL  - 101
SP  - 102037
J2  - Simulation Modelling Practice and Theory
SN  - 1569-190X
UR  - https://www.sciencedirect.com/science/article/pii/S1569190X19301686
KW  - MBSE
KW  - 5G
KW  - Data stream
KW  - Edge federation
KW  - Fog computing
KW  - IoT
ER  - 

TY  - JOUR
TI  - Electric Drive Vehicle Development and Evaluation Using System Simulation
AU  - Rousseau, A.
AU  - Halbach, S.
AU  - Michaels, L.
AU  - Shidore, N.
AU  - Kim, Na.
AU  - Kim, N.
AU  - Karbowski, D.
AU  - Kropinski, M.
T2  - 19th IFAC World Congress
AB  - To reduce development time and introduce technologies faster to the market, many companies have been moving to Model-based System Engineering (MBSE). In MBSE, the development process centers around a multi-physics model of the complete system being developed, from requirements to design, implementation and test. Engineers can avoid a generation of system design processes based on hand coding, and use graphical models to design, analyze, and implement the software that determines system performance and behavior. This paper describes the process implemented in Autonomie, a Plug-and-Play Software Environment, to design and evaluate electric drive powertrain and component technologies in a multi-physics environment. We will discuss best practices and provide examples of the different steps of the V-diagram including model-in-the-loop, software-in-the-loop and component-in-the-loop simulation.
DA  - 2014/01/01/
PY  - 2014
DO  - 10.3182/20140824-6-ZA-1003.02832
VL  - 47
IS  - 3
SP  - 7886
EP  - 7891
J2  - IFAC Proceedings Volumes
SN  - 1474-6670
UR  - https://www.sciencedirect.com/science/article/pii/S1474667016428557
KW  - Simulation
KW  - Control
KW  - Model Based System Engineering
KW  - Electric Drive Vehicles
KW  - System Engineering
ER  - 

TY  - JOUR
TI  - Extending SysML for Engineering Designers by Integration of the Contact & Channel â Approach (C&C2-A) for Function-Based Modeling of Technical Systems
AU  - Albert, Albers
AU  - Christian, Zingel
T2  - 2013 Conference on Systems Engineering Research
AB  - Model-Based Systems Engineering (MBSE) is advancing rapidly in the domains of software and embedded systems. In contrast, mechanical engineers still have trouble in application of MBSE. SysML has established as the leading modeling language for multidisciplinary systems, but some limitations still hinder mechanical engineers from its application. The provided behavioral and structural diagrams seem to not being sufficiently capable to represent all relevant information regarding mechanical systems. This paper presents an extending profile which aims to overcome some of those limitations. The profile is based on the Contact & Channel â Approach (C&C2-A), which is well-proven in function-based modeling of technical systems comprising function-relevant structural properties. The goals of the C&C2-A are to retain a maximal solution space, to overcome component- afflicted thinking and to provide an adequate modeling approach for mechanical relevant information. A prototypic tool implementation of the extending SysML-profile, complemented by some automatisms in form of a plugin, is evaluated at the example of a small gearbox.
DA  - 2013/01/01/
PY  - 2013
DO  - 10.1016/j.procs.2013.01.037
VL  - 16
SP  - 353
EP  - 362
J2  - Procedia Computer Science
SN  - 1877-0509
UR  - https://www.sciencedirect.com/science/article/pii/S1877050913000380
KW  - SysML
KW  - Engineering design
KW  - C&C-A
KW  - Contact & Channel - Approach
KW  - Function-based modeling
KW  - state-based structure modeling
ER  - 

TY  - JOUR
TI  - An MBSE Approach to Pass from Requirements to Functional Architecture
AU  - Lemazurier, L.
AU  - Chapurlat, V.
AU  - GrossetÃªte, A.
T2  - 20th IFAC World Congress
AB  - With systems being more and more complex, especially in the case of Nuclear Power Plant design, Systems Engineering (SE) has seen an increasing interest in the industrial world. Although SE concepts and processes have become well-known, passing from Requirements to Functional Architectures has not been a fully addressed issue. This paper proposes a tooled method that offers three different design perspectives: a Requirement View, a Context View and a Behavioural View. Those views mainly help the designers to express requirements, structure their architecture design, work together, verify and partially validate their design by means of five interconnected Design Specific Modelling Languages (DSML).
DA  - 2017/07/01/
PY  - 2017
DO  - 10.1016/j.ifacol.2017.08.1376
VL  - 50
IS  - 1
SP  - 7260
EP  - 7265
J2  - IFAC-PapersOnLine
SN  - 2405-8963
UR  - https://www.sciencedirect.com/science/article/pii/S2405896317319183
KW  - Modelling
KW  - Complex systems
KW  - Model-Driven Systems Engineering Model Validation
ER  - 

TY  - JOUR
TI  - Toward the tools selection in model based system engineering for embedded systemsâA systematic literature review
AU  - Rashid, Muhammad
AU  - Anwar, Muhammad Waseem
AU  - Khan, Aamir M.
T2  - Journal of Systems and Software
AB  - Model based system engineering (MBSE) is a systematic approach of modeling which is frequently used to support requirement specification, design, verification and validation activities of system development. However, it is difficult to customize MBSE approach for the development of embedded systems due to their diverse behavioral aspects. Furthermore, appropriate tools selection to perform particular MBSE activities is always challenging. This paper focuses on the identification and classification of recent research practices pertaining to embedded systems development through MBSE approach. Consequently, a comprehensive analysis of various MBSE tools has been presented. Systematic literature review (SLR) has been used to identify 61 research practices published during 2008â2014. The identified researches have been classified into six different categories to analyze various aspects of MBSE approach for embedded systems. Consequently, 39 preliminary tools are identified that have been used in recent researches. Furthermore, classification and evaluation of tools have been presented. This research highlights important trends and approaches of MBSE to support development of embedded systems. A comprehensive investigation of tools in this article facilitates researchers, practitioners and developers to select appropriate tools according to their requirements.
DA  - 2015/08/01/
PY  - 2015
DO  - 10.1016/j.jss.2015.04.089
VL  - 106
SP  - 150
EP  - 163
J2  - Journal of Systems and Software
SN  - 0164-1212
UR  - https://www.sciencedirect.com/science/article/pii/S016412121500103X
KW  - MBSE
KW  - Embedded systems
KW  - Tools
ER  - 

TY  - JOUR
TI  - Innovative Digital Manufacturing Curriculum for Industry 4.0
AU  - Promyoo, Rapeepan
AU  - Alai, Shashank
AU  - El-Mounayri, Hazim
T2  - 47th SME North American Manufacturing Research Conference, NAMRC 47, Pennsylvania, USA.
AB  - Manufacturing companies across all major industries are facing serious challenges trying to competitively design and manage modern products, which are becoming increasingly complex multi-domain systems or âsystems of systemsâ. Model-based systems driven product development (or SDPD, for Systems Driven Product Development) has been proposed as a solution based on driving the product lifecycle from the systems requirements and tracing back performance to stakeholdersâ needs through a RFLP (Requirement, Functional, Logical, Physical) traceability process. The SDPD framework integrates system behavioral modeling with downstream product design and manufacturing process practices to support the verification/validation of the systems behavior as products progress through all phases of the lifecycle, as well as the optimization of trade-offs decisions by maintaining the cross-product digital twin and thread for global decision optimization in an efficient and effective way. We have developed an innovative digital manufacturing curriculum (designed around the SDPD paradigm) that is based on the digitalization of the SE (Systems Engineering) process through the integration of modelling and simulation continuum, in the form of Model-based Systems Engineering (MBSE), with Product lifecycle management (PLM). At the core of this curriculum is a shift of focus from theory to implementation and practice, through an applied synthesis of engineering fundamentals and systems engineering, that is driven by a state-of-the-art digital innovation platform for product (or system) development consisting of integrated software (digital) tools spanning the complete lifecycle. The curriculum consists of three key components, namely, modelling and simulation continuum, traceability, and digital thread. The curriculum provides a foundation for implementing the digital twin and supports the training of the next generation of engineers for Industry 4.0. The digital manufacturing (or SDPD) framework is applied in the design and optimization of an electric skateboard. The implementation demonstrates: 1) The benefits of digitalization/model-based engineering when developing complex multi-domain products or systems; 2) The ability of students to effectively complete a real-life modern product development within the time line of one semester; 3) The provision of MBSE curriculum for Engineering Education 4.0, characterized by key, integrated skills for the digital enterprise and Industry 4.0.
DA  - 2019/01/01/
PY  - 2019
DO  - 10.1016/j.promfg.2019.06.092
VL  - 34
SP  - 1043
EP  - 1050
J2  - Procedia Manufacturing
SN  - 2351-9789
UR  - https://www.sciencedirect.com/science/article/pii/S2351978919308194
KW  - Industry 4.0
KW  - Digital manufacturing
KW  - Digital thread
KW  - SDPD
ER  - 

TY  - JOUR
TI  - Multi-domain simulation utilizing SysML: state of the art and future perspectives
AU  - Nigischer, Christian
AU  - Bougain, SÃ©bastien
AU  - Riegler, Rainer
AU  - Stanek, Heinz Peter
AU  - Grafinger, Manfred
T2  - 31st CIRP Design Conference 2021 (CIRP Design 2021)
AB  - Increasing system complexity requires adapted methodologies to tackle the challenges that come along with multi-domain systems development. Model-Based Systems Engineering (MBSE) provides significant support by using models to describe different aspects of an examined system already in the early stages of the development process. The Systems Modeling Language (SysML) can be utilized to establish a common system information basis on a comparatively abstract level for all participating stakeholders. Although SysML models are able to encompass system information like requirements, structure, behaviour and parametrics, in many cases additional specialized simulation or computation models are needed, especially for early design decision-making and verification activities. Ideally, the input data and the calculated results are automatically exchanged between the SysML modelling editor and the involved simulation tools. Hence, tool chain integration is a crucial factor to provide the necessary interconnectivity to achieve multi-domain simulation. In general, the integration of simulation environments with SysML tools is mainly limited by two factors. First, as the tools available for modelling with SysML are legion, interface solutions are usually developed for a specific tool and therefore, their usage is restricted to that particular software. Second, evolving standards like the Functional Mock-up Interface (FMI) provide capabilities to ease model data exchange and co-simulation, but the implementation of different versions of various standards in the tools causes incompatibilities. In this work a state of the art of the integration between simulation environments and available SysML modelling tools with respect to utilized standards and their implementation maturity is presented. Additionally, the capabilities of the reviewed tools to support co-simulation are evaluated. Furthermore, existing challenges are highlighted, and potential improvements are discussed.
DA  - 2021/01/01/
PY  - 2021
DO  - 10.1016/j.procir.2021.05.073
VL  - 100
SP  - 319
EP  - 324
J2  - Procedia CIRP
SN  - 2212-8271
UR  - https://www.sciencedirect.com/science/article/pii/S2212827121005382
KW  - Functional Mock-up Interface
KW  - Systems Modeling Language
KW  - Multi-Domain Simulation
ER  - 

TY  - JOUR
TI  - AADL-Based safety analysis using formal methods applied to aircraft digital systems
AU  - Stewart, Danielle
AU  - Liu, Jing (Janet)
AU  - Cofer, Darren
AU  - Heimdahl, Mats
AU  - Whalen, Michael W.
AU  - Peterson, Michael
T2  - Reliability Engineering & System Safety
AB  - Model-based engineering tools are increasingly being used for system-level development of safety-critical systems. Architectural and behavioral models provide important information that can be leveraged to improve the system safety analysis process. Model-based design artifacts produced in early stage development activities can be used to perform system safety analysis, reducing costs, and providing accurate results throughout the system life-cycle. In this paper we describe an extension to the Architecture Analysis and Design Language (AADL) that supports modeling of system behavior under failure conditions. This safety annex enables the independent modeling of component failures and allows safety engineers to weave various types of fault behavior into the nominal system model. The accompanying tool support uses model checking to verify safety properties in the presence of faults and comprehensively enumerate all applicable fault combinations leading to failure conditions under quantitative objectives as part of the safety assessment process. The approach allows exploration of the effects of faulty component behavior on system level failure conditions without requiring explicit propagation specifications. It also supports a shared system model, a modeling language that can describe real-time embedded systems, and usable safety analysis artifacts.
DA  - 2021/09/01/
PY  - 2021
DO  - 10.1016/j.ress.2021.107649
VL  - 213
SP  - 107649
J2  - Reliability Engineering & System Safety
SN  - 0951-8320
UR  - https://www.sciencedirect.com/science/article/pii/S0951832021001903
KW  - Model-based systems engineering
KW  - Model-based safety analysis
KW  - AADL
KW  - Fault analysis
KW  - Fault injection
KW  - Safety engineering
ER  - 

TY  - JOUR
TI  - Ontology-based requirement verification for complex systems
AU  - Chen, Ruirui
AU  - Chen, Chun-Hsien
AU  - Liu, Yusheng
AU  - Ye, Xiaoping
T2  - Advanced Engineering Informatics
AB  - Verification is a necessary part of Model-based systems engineering (MBSE) which is becoming a mainstream methodology for the design of complex systems. Verification in the early design stage has aroused widespread attention for its efficiency and cost-saving. Although there are numbers of researches on verification, some deficiencies still exist, such as the integration of design and verification needs to improve, the design problems are hard to trace and the behavior verification in the early design stage is often omitted. In this study, a novel ontology-based requirement verification method for complex systems is proposed to solve the above-mentioned problems. First, a requirement formalization method is proposed to avoid the ambiguousness of natural language, to make requirements easier to verify, and to make design problems easier to trace. Second, some transformation rules are defined to realize the automatic design ontology and rule generation. Based on these two steps, automated verification can be done through reasoning with ontology models and rules. This verification method is fully integrated with design tools and no additional expertise is needed for designers. To validate its feasibility and advantages, an example of a smart traffic light system is provided.
DA  - 2020/10/01/
PY  - 2020
DO  - 10.1016/j.aei.2020.101148
VL  - 46
SP  - 101148
J2  - Advanced Engineering Informatics
SN  - 1474-0346
UR  - https://www.sciencedirect.com/science/article/pii/S1474034620301191
KW  - Reasoning
KW  - Ontology
KW  - Verification
KW  - Systems design
ER  - 

TY  - JOUR
TI  - Managing the use of simulation in systems engineering: An industrial state of practice and a prioritization method
AU  - Bemmami, K.E.
AU  - David, P.
T2  - Computers in Industry
AB  - Model-based systems engineering (MBSE) has been proposed as an approach to manage the complexity of modern product development through the continuous use of models. The use of model simulation is a core principle of the MBSE approach. In the early stages of projects, it for example supports defining the expected system features, when in the later phases it can be used to estimate the dynamic behavior. Simulation is pushed to obtain results earlier and cheaper than with testing and prototyping. However, the development of simulation can be a very tedious and expensive task. Simulation opportunities are numerous, but the project managers must identify the more relevant for their project. This paper aims at documenting the current state of practice on the usage of simulation in MBSE processes. Then it aims at exploring decision support opportunities for simulation use in MBSE projects. The paper presents a survey conducted amongst French companies, on how they apply MBSE, Verification Validation & Testing (VVT), and simulation. The perceived benefits, barriers, and the parameters influencing VVT strategies, and the use of simulation are alternately analyzed. The results of the survey are used to propose a Prioritization of Simulation Efforts Methodology (PSEM) to assists managers in choosing the right functions, or systemsâ elements to be simulated.
DA  - 2021/10/01/
PY  - 2021
DO  - 10.1016/j.compind.2021.103486
VL  - 131
SP  - 103486
J2  - Computers in Industry
SN  - 0166-3615
UR  - https://www.sciencedirect.com/science/article/pii/S0166361521000932
KW  - Simulation
KW  - Analytic hierarchy process (AHP)
KW  - Decision support
KW  - Model-based systems engineering (MBSE)
ER  - 

TY  - JOUR
TI  - System-level model integration of design and simulation for mechatronic systems based on SysML
AU  - Cao, Yue
AU  - Liu, Yusheng
AU  - Paredis, Christiaan J.J.
T2  - Mechatronics
AB  - The design of a mechatronic system (MTS) is not a trivial task due to the complexity of the systems. The evaluation of various design scenarios for the given requirements of a specific MTS is also difficult. Currently, model-based systems engineering (MBSE) and the modeling language SysML provide a novel means for the systematic design of MTSs. However, the specific requirements of MTS behavior modeling, i.e., continuous dynamics or even discrete/continuous hybrid behavior modeling, and automatic simulation and evaluation of the behavior models, are not supported by SysML which intends to create descriptive static design models. Therefore, extension should be made for SysML to support detailed hybrid behavior modeling and the transformation between hybrid models in SysML and executable simulation models in certain simulation environment. For this study, a meta-model based method is proposed to integrate the system design and simulation models of MTSs. First, a set of stereotypes is defined to facilitate the designer to explicitly model hybrid dynamic behavior based on SysML. The necessary simulation information is also formalized in SysML to support an analysis of the system dynamic behavior with the aid of simulations. Finally, the SysML-based system dynamic behavior, and the related simulation information are integrated with the platform-specific simulation model through a bidirectional model transformation approach based on a triple graph grammar (TGG), which facilitates the automatic model consistency and traceability between system design and simulation. The proposed method is implemented and illustrated by using an Inverted Pendulum System (IPS).
DA  - 2011/09/01/
PY  - 2011
DO  - 10.1016/j.mechatronics.2011.05.003
VL  - 21
IS  - 6
SP  - 1063
EP  - 1075
J2  - Mechatronics
SN  - 0957-4158
UR  - https://www.sciencedirect.com/science/article/pii/S095741581100095X
KW  - SysML
KW  - Model transformation
KW  - Simulation
KW  - Model-based systems engineering
KW  - Simulink
KW  - Simscape
KW  - System dynamics
ER  - 

TY  - JOUR
TI  - Rapid-Control-Prototyping as part of Model-Based Development of Heat Pump Dryers
AU  - HoltkÃ¶tter, Jens
AU  - Michael, Jan
AU  - Henke, Christian
AU  - TrÃ¤chtler, Ansgar
AU  - Bockholt, Marcos
AU  - MÃ¶hlenkamp, Andreas
AU  - Katter, Michael
T2  - 4th International Conference on System-Integrated Intelligence: Intelligent, Flexible and Connected Systems in Products and Production
AB  - Todayâs products are characterized by a highly interdisciplinary level. Likewise, household appliances are affected to this evolution. Mechanical structures, actuators, sensors and distributed control units can be found in modern tumble dryers, as well as in other mechatronic systems. The main challenge in the development process of such systems is to ensure the functionality which contains the proper interaction within the components of the tumble dryer. Mechanical knowledge, thermodynamical expertise, control-engineering competence and knowledge in software have to be managed and brought together. Apart from the interdisciplinary challenge, the rising functionality of modern tumble dryers leads to a further challenge, which appears in the development. Intelligent processes within their components have to be tested intensively, to ensure the benefit they promise. Time-consuming iterations during the development are inacceptable, to guarantee a specified start of production. To face the mentioned challenges in the development process, Miele already applies model-based systems engineering in its development [1]. Using simulation models enables Miele to analyze a lot of different and complex concepts of tumble dryers, to consider innovative and novel ways to dry clothes. As part of these Model-in-the-Loop simulations in early phases of the development, holistic system simulation-models are established. These models basically contain physical and control behavior. Immediately after different concepts are analyzed by the virtual systems, the concepts have to be validated. This work focusses the Rapid-Control-Prototyping (RCP) technology to validate novel innovative heating concepts for tumble dryers. Evaluation different concepts and the integration into home appliance processes is a formidable challenge, accepted in this paper. The RCP technology enables to test first component setups of heating systems, which are controlled by the simulation model of the controller. To set up the Rapid-Control-Prototyping scenario, a testing bench is built up, including equally the software-environment. The controller models are elaborated and simulated within the MathWorksÂ® environment, in detail SimulinkÂ®/StateflowÂ®. This model contains the logical procedure and several safety aspects of a drying process. The simulation model is subsequent integrated into the software environment of National Instruments, to connect the virtual controller with existing and prototypical hardware components of a prototypically heat pump dryer. Within the test bench and the software periphery, the integration of the approach into the development process of Miele is described in this work.
DA  - 2018/01/01/
PY  - 2018
DO  - 10.1016/j.promfg.2018.06.033
VL  - 24
SP  - 235
EP  - 242
J2  - Procedia Manufacturing
SN  - 2351-9789
UR  - https://www.sciencedirect.com/science/article/pii/S235197891830550X
KW  - Model-Based Systems Engineering
KW  - Simulation
KW  - Heat Pump
KW  - Laundry Dryer
KW  - Model-Based Development
KW  - Model-in-the-Loop
KW  - Object-oriented Modelling of Control Units
KW  - Rapid-Control-Prototyping
ER  - 

TY  - JOUR
TI  - Improving the precision of model parameters using model based signal enhancement and the linear minimal model following an IVGTT in the healthy man
AU  - Fernandez, Margarita
AU  - Acosta, Dionisio
AU  - Quiroz, Adolfo
T2  - Applied Mathematics and Computation
AB  - The problem of signal enhancement has been addressed by several authors in the past and continues to be of particular interest in many applications. In this respect, the present authors have been exploring the effect of the model based signal enhancement (MBSE) approach to recover the signal of blood glucose dynamics from noise contaminated measurements collected from seven healthy patients after an intravenous glucose tolerance test (IVGTT). These observations correspond to a system with an impulseâresponse behaviour for which it is often hypothesized that a sum of exponential signals can be used for modeling the data. The exponential model order has been derived from the singular value decomposition analysis of these data set. A linear version of the classic minimal model, known as the linear minimal model (LMM), has been used to model the patientâs behaviour. After fitting the LMM first to the experimental data and then to the MBSE signal obtained from the exponential modelling approximation, the effect on the precision of the LMM parameters has been statistically assessed. A non-parametric test has been devised to evaluate the significance of the differences between the precision obtained when no MBSE is applied and the precision after MBSE is performed. The results obtained suggest that the precision of the LMM parameters can be improved by more than 50% (p-value<0.01) for all the model parameters. In particular, the insulin sensitivity SI and glucose effectiveness SG parameters that are useful diagnostic indices in Type 2 Diabetes Mellitus are improved by 50% and 62% respectively.
DA  - 2008/02/15/
PY  - 2008
DO  - 10.1016/j.amc.2007.05.044
VL  - 196
IS  - 1
SP  - 185
EP  - 192
J2  - Applied Mathematics and Computation
SN  - 0096-3003
UR  - https://www.sciencedirect.com/science/article/pii/S0096300307006571
KW  - Glucose
KW  - Insulin
KW  - Intravenous glucose tolerance test
KW  - Minimal model
KW  - Non-parametric testing
KW  - Sensitivity index
KW  - Signal processing
ER  - 

TY  - JOUR
TI  - State-of- practice survey in industry on the deployment of simulation in systems engineering
AU  - Bemmami, K.E.
AU  - David, P.
T2  - 17th IFAC Symposium on Information Control Problems in Manufacturing INCOM 2021
AB  - Model-based systems engineering (MBSE) has been proposed as an approach to manage the complexity of modern product development through the continuous use of models. The use of model simulation is a core principle of the MBSE approach. In the first stages of projects, it supports defining the expected system features, when in the later stages it estimates the dynamic behavior. Simulation is pushed to obtain results earlier and cheaper than with testing and prototyping. However, the development of simulation can be a very tedious and expensive task. The use of simulation is a specific part of an MBSE approach that is crucial in an efficient project management since it might be the source of high cost and skills needs but also a source of precious knowledge on the future system. Simulation opportunities are numerous, but the project manager must identify the more relevant for their project. This paper aims at documenting the current state of practice in industry on the usage of simulation in MBSE processes. The paper presents a survey conducted amongst French companies, on how they apply MBSE, Verification Validation & Testing VVT, and simulation. The perceived benefits and barriers, and the parameters influencing VVT strategies and the use of simulation are alternately analyzed.
DA  - 2021/01/01/
PY  - 2021
DO  - 10.1016/j.ifacol.2021.08.133
VL  - 54
IS  - 1
SP  - 1132
EP  - 1137
J2  - IFAC-PapersOnLine
SN  - 2405-8963
UR  - https://www.sciencedirect.com/science/article/pii/S2405896321008946
KW  - Simulation
KW  - Model-based Systems engineering (MBSE)
KW  - State of practice
ER  - 

TY  - JOUR
TI  - Unified modeling for digital twin of a knowledge-based system design
AU  - Wang, Haoqi
AU  - Li, Hao
AU  - Wen, Xiaoyu
AU  - Luo, Guofu
T2  - Robotics and Computer-Integrated Manufacturing
AB  - While Model-Based Systems Engineering (MBSE) improves the ambiguity problem of the conventional document-based way, it brings management complexity. Faced with the complexity, one of the core issues that companies care about is how to effectively evaluate, predict, and manage it in the early system design stage. The inaccuracy of contemporary complexity measurement approaches still exits due to the inconsistency between the actual design process in physical space and the theoretical simulation in virtual space. Digital Twin (DT) provides a promising way to alleviate the problem by bridging the physical space and virtual space. Aiming to integrate DT with MBSE for the system design complexity analysis and prediction, based on previous work, an integration framework named System Design Digital Twin in 5 Dimensions was introduced from a knowledge perspective. The framework provides services for design complexity measurement, effort estimation, and change propagation prediction. Then, to represent the system design digital twin in a unified way, a modeling profile is constructed through SysML stereotypes. The modeling profile includes System design digital model in virtual space profile, system services profile, relationships profile and digital twin data profile. Finally, the system design of a cube-satellite space mission demonstrates the proposed unfiled modeling approach.
DA  - 2021/04/01/
PY  - 2021
DO  - 10.1016/j.rcim.2020.102074
VL  - 68
SP  - 102074
J2  - Robotics and Computer-Integrated Manufacturing
SN  - 0736-5845
UR  - https://www.sciencedirect.com/science/article/pii/S0736584520302842
KW  - System design
KW  - Model-based systems engineering
KW  - Digital twin
KW  - Systems modeling language
KW  - Unified modeling
ER  - 

TY  - JOUR
TI  - Extraction of aroma compounds in a HFMC: Dynamic modelling and simulation
AU  - Younas, M.
AU  - Bocquet, S. Druon
AU  - Sanchez, J.
T2  - Journal of Membrane Science
AB  - In the present work the dynamic behaviour of hollow-fiber membrane contactors (HFMCs) used for the recovery of aroma compounds from an aqueous feed phase with the help of a conventional solvent has been studied. Many aroma compounds play a significant role in the production of flavorants, which are used in the food industry to flavor, improve and increase the appeal of their products. Various aroma compounds with different physico-chemical characteristics have been chosen for this study. A real dynamic model of membrane-based solvent extraction (MBSE) process was developed. In the studied system, the aqueous feed and solvent phases are re-circulated to their respective storage tanks after contacting in a hollow fibres membrane contactor. The developed dynamic model was verified with experimental data from the literature and good level of agreement was found. It has been used as a tool to simulate and conclude about the influence of various module configurations, membrane characteristics and hydrodynamic conditions on the extraction of various aroma compounds. It was noted that transient models of membrane-based separation need attention to improve the simulation studies and experimental validity to encourage it at larger scales.
DA  - 2008/10/15/
PY  - 2008
DO  - 10.1016/j.memsci.2008.06.045
VL  - 323
IS  - 2
SP  - 386
EP  - 394
J2  - Journal of Membrane Science
SN  - 0376-7388
UR  - https://www.sciencedirect.com/science/article/pii/S0376738808005875
KW  - Simulation
KW  - Aroma extraction
KW  - Dynamic modelling
KW  - Hollow-fibers module
KW  - Membrane contactor
ER  - 

TY  - CHAP
TI  - 3 - Collaborative modelling and co-simulation for Transportation Cyber-Physical Systems
AU  - Fitzgerald, John
AU  - Gamble, Carl
AU  - Mansfield, Martin
AU  - Ouy, Julien
AU  - Palacin, Roberto
AU  - Pierce, Ken
AU  - Larsen, Peter G.
T2  - Transportation Cyber-Physical Systems
A2  - Deka, Lipika
A2  - Chowdhury, Mashrur
AB  - Model-based design techniques are key to the understanding and development of cyber-physical systems, and their benefits have been demonstrated within many of the disciplines relevant to transportation systems engineering. However, the challenges of transportation systems engineering necessitate breaking down the barriers between monodisciplinary models in order to understand holistically the consequences of technical and policy design decisions. In this chapter we review the need for multidisciplinary model-based systems engineering approaches in the transport sector and identify some emerging techniques enabling the linking of monodisciplinary semantically heterogeneous models. Simulations of such collaborative models (co-models) allow stakeholders to study system behaviour through the life cycle. Given the criticality of some transport applications, we also identify the need for advancing verification techniques in such multidisciplinary models. We illustrate our approach with an industry example in which the integration of diverse design models facilitates analysis of a new distributed rail interlocking system.
DA  - 2018/01/01/
PY  - 2018
SP  - 51
EP  - 79
PB  - Elsevier
SN  - 978-0-12-814295-0
UR  - https://www.sciencedirect.com/science/article/pii/B9780128142950000034
KW  - Cyber-physical systems
KW  - Simulation
KW  - Model-based systems engineering
KW  - Collaborative modelling
KW  - Mobility as a service
KW  - OpenModelica
KW  - VDM
ER  - 

TY  - JOUR
TI  - Model-based Dependability Analysis of Fault-tolerant Inertial Navigation System: A Practical Experience Report
AU  - Steurer, Mikael
AU  - Morozov, Andrey
AU  - Janschek, Klaus
AU  - Neitzke, Klaus-Peter
T2  - 21st IFAC Symposium on Automatic Control in Aerospace ACA 2019
AB  - Model-based systems engineering approaches are commonly used to develop safetycritical mechatronic systems. Recently, a new SysML-based method for the dependability analysis of Unmanned Aerial Vehicles (UAVs) has been introduced. The method consists of three main steps: (i) creation of a structural SysML model using building blocks from the underlying UAV dependability profile that extends the model with block-level reliability and time properties, (ii) transformation of the semi-formal SysML model into a formal Dual-Graph Error Propagation Model (DEPM) that captures relevant structural and behavioral properties of the system, (iii) DEPM-based evaluation of system dependability metrics using Markov chain models and state-of-the-art probabilistic model checking techniques. This paper describes the practitioner experiences and lessons learned after the application of the aforementioned method to a sophisticated real-world embedded fault-tolerant inertial navigation system. The case study revealed two particular limitations that have been overcome by the optimization of the method against the state-space explosion of underlying Markov chain models and the introduction of a new computation algorithm for DEPMs with realistic extremely low fault activation probabilities.
DA  - 2019/01/01/
PY  - 2019
DO  - 10.1016/j.ifacol.2019.11.275
VL  - 52
IS  - 12
SP  - 394
EP  - 399
J2  - IFAC-PapersOnLine
SN  - 2405-8963
UR  - https://www.sciencedirect.com/science/article/pii/S2405896319312285
KW  - SysML
KW  - dependability
KW  - design
KW  - Markov chains
KW  - microsensors
KW  - reliability engineering
KW  - space technology
KW  - system analysis
KW  - systems architecture
ER  - 

TY  - JOUR
TI  - Extending a Synthesis-Centric Model-Based Systems Engineering Framework with Stochastic Model Checking
AU  - Markovski, J.
AU  - Estens Musa, E.S.
AU  - Reniers, M.A.
T2  - Proceedings the Sixth International Workshop on the Practical Application of Stochastic Modelling (PASM) and the Eleventh International Workshop on Parallel and Distributed Methods in Verification (PDMC).
AB  - We propose to integrate performance evaluation with supervisory control synthesis to bring higher confidence in the control design. Supervisory control theory deals with automatic synthesis of supervisory controllers that ensure safe behavior of the supervised system, based on the models of the uncontrolled system and the (safety) control requirements. For the purpose of performance evaluation, we turn to stochastic model checking of continuous-time Markov chains, which requires an extension of the model of the uncontrolled system with Markovian delays. We cast our proposal as an extension of a model-based systems engineering framework that relies on supervisor synthesis. We treat the Markovian delays syntactically, exploiting their equivalent interleaving behavior with uniquely-named uncontrollable transitions. In this way, we can employ already available synthesis tools, while preserving the stochastic behavior. To this end, we develop model transformation tools to extract the underlying Markov process from the stochastic discrete-event model of the supervised system. We illustrate the approach by modeling a pipeless plant that employs automated guided vehicles instead of fixed piping in order to ensure greater flexibility of the plant. The control problem that we solve is safe high-level movement coordination of the vehicles, ensured by the supervisory controller. We show how to seamlessly introduce stochastic behavior in the supervised system and we evaluate several performance and reliability aspects of the plant. We implement the framework by interfacing two state-of-the-art tools: Supremica for supervisory controller synthesis and MRMC for Markovian model checking. To this end, we improve previous attempts by providing support for data-based observers, which greatly improve the modeling capabilities of the framework.
DA  - 2013/08/16/
PY  - 2013
DO  - 10.1016/j.entcs.2013.07.011
VL  - 296
SP  - 163
EP  - 181
J2  - Electronic Notes in Theoretical Computer Science
SN  - 1571-0661
UR  - https://www.sciencedirect.com/science/article/pii/S157106611300042X
KW  - supervisory control theory
KW  - Markov processes
KW  - performance evaluation
ER  - 

TY  - JOUR
TI  - Construction method of shop-floor digital twin based on MBSE
AU  - Liu, Juan
AU  - Liu, Jianhua
AU  - Zhuang, Cunbo
AU  - Liu, Ziwen
AU  - Miao, Tian
T2  - Journal of Manufacturing Systems
AB  - Digital twin (DT) technology is essential for achieving the fusion of virtual-real cyber-physical systems. Academics and companies have made great strides in the theoretical research and case studies of constructing the shop-floor digital twin (SDT), which is the premise of applying DT technology on the shop floor. A shop floor is a large complex system that involves many elements including people, machines, materials, methods, and the environment and processes, such as the technical flow, business process, logistics, and control flow. However, most of the developed cases lack a hierarchical, structured and modularized implementation framework for the development of an SDT system, which leads to problems such as a low reuse rate of the system blocks, lack of scalability, and high upgrade and maintenance costs. In response to these issues, we propose a construction method of the DT for the shop floor based on model-based systems engineering from the perspective of the system. In this method, a comprehensive DT model for the shop floor is gradually constructed by using system modeling language, the modeling method âMagicGrid,â and the âV modelâ of systems engineering. The model includes four dimensions of the shop-floor requirements, structure, behavior, and parameters, as well as three stages (the problem domain, solution domain, and implementation domain), and connects nine steps of the âV model,â including the system requirements, system architecture, subsystem implementation, subsystem integration, and system verification. Then, based on an example of a real NC machining shop floor, subsystems including a visualization system, synchronization system, and simulation system, are discussed. Finally, the functions of the integrated systems are verified based on the requirements, including the real-time synchronization of âman, machine, material, and methodâ and the transient simulation in real time. The numerical indicators of the integrated system are verified, including the model completeness and synchronization timeliness.
DA  - 2021/07/01/
PY  - 2021
DO  - 10.1016/j.jmsy.2021.05.004
VL  - 60
SP  - 93
EP  - 118
J2  - Journal of Manufacturing Systems
SN  - 0278-6125
UR  - https://www.sciencedirect.com/science/article/pii/S0278612521001011
KW  - Model-based systems engineering
KW  - Digital twin
KW  - Cyber-physical production system
KW  - MagicGrid
KW  - Shop-floor digital twin
KW  - System modeling language
ER  - 

TY  - JOUR
TI  - Implementation of Human System Integration (HSI) and âNon-functional Characteristicsâ into the Systems Engineering Lifecycle - A Practical Approach at Airbus Defence and Space
AU  - Sharples, Robert A.
T2  - 6th International Conference on Applied Human Factors and Ergonomics (AHFE 2015) and the Affiliated Conferences, AHFE 2015
AB  - This paper provides an overview of the process, practices, developments and synergies that Airbus Defence and Space are implementing Human System Integration (HSI) into the Continuous Engineering /Model Based System Engineering (MBSE) throughout the company. The paper highlights these developments, which include internal research programmes, European Union funded research projects, Airbus internal Synergy project. This research includes an EU funded 3 year project HoliDes - Holistic Human Factors and System Design of Adaptive Cooperative Human Machine Systems. Continuous engineering within Airbus has included various corporate and divisional Synergy programs and lean and agile initiatives. As our business is defined by Multiple Portfolio products, supplied from multi countries, the MBSE process had to speed up delivery and reduce overall cost. The Airbus process models needed significant amendment due to products supplied via multiple business lines throughout the company. This problem is exacerbated by varying requirements of four national defence requirements, who impose restrictions on the use of Architectural Frameworks (NAF/MODAF/DODAF) and supporting tools. Our Human System Integration (HSI) is continuing from the initial Human View Architectural Framework research to include the nine HSI domains. These nine domains overlap with our current Human factors research and will now allow us to pull in our Non-functional work into our Systems Engineering lifecycle. This paper highlights the research projects Airbus Space and Defence are incorporating in to our overall strategy, these include internal R&D funding and European Union funded research programs. These research projects have highlighted several areas of interest these include, stochastic modelling with respect to Human System Integration and Human views, verification and analysis of emergent behaviour and non-functional properties, which conforms with our own work on non-functional requirements and finally the use of System of System Formal Methods for parts of the lifecycle.
DA  - 2015/01/01/
PY  - 2015
DO  - 10.1016/j.promfg.2015.07.232
VL  - 3
SP  - 1896
EP  - 1902
J2  - Procedia Manufacturing
SN  - 2351-9789
UR  - https://www.sciencedirect.com/science/article/pii/S2351978915002334
KW  - Architecture frameworks
KW  - Human Factors
KW  - Human System Integration (HSI)
KW  - Human views
KW  - Model Based System Engineering (MBSE)
KW  - Non functional charactertics
KW  - Systems Of Systems (SoS)
ER  - 

TY  - JOUR
TI  - SysML-based uniform behavior modeling and automated mapping of design and simulation model for complex mechatronics
AU  - Cao, Yue
AU  - Liu, Yusheng
AU  - Fan, Hongri
AU  - Fan, Bo
T2  - Computer-Aided Design
AB  - Model-based systems engineering (MBSE) is becoming a promising solution for the design of mechatronic systems with the increasing of complexity. To facilitate system design engineers to express their various behavioral requirements, a uniform behavior modeling approach is proposed based on SysML. A set of new constructs are proposed which compose the uniform behavior modeling profile. Based on the profile, the hybrid behavior of the mechatronic system can be uniformly represented in a multi-view and hierarchical way. Moreover, the language- and tool-dependent simulation related information is also described based on SysML as the complement part of the uniform behavior model, which can be transformed to different simulation platforms based on the triple graph grammar (TGG). In this way, the system-level design of the mechatronic system is simulated and verified automatically in the early design stage. Finally, the method is implemented and an example is given to illustrate the whole process.
DA  - 2013/03/01/
PY  - 2013
DO  - 10.1016/j.cad.2012.05.001
VL  - 45
IS  - 3
SP  - 764
EP  - 776
J2  - Computer-Aided Design
SN  - 0010-4485
UR  - https://www.sciencedirect.com/science/article/pii/S0010448512000991
KW  - SysML
KW  - Model transformation
KW  - Hybrid behavior modeling
KW  - Mechatronic system
KW  - System-level behavior
ER  - 

TY  - JOUR
TI  - Can Wymoreâs Mathematical Framework Underpin SysML? An Initial Investigation of State Machines
AU  - Wach, Paul
AU  - Salado, Alejandro
T2  - 17th Annual Conference on Systems Engineering Research (CSER)
AB  - Model-based system engineering (MBSE) has been suggested to have significant benefits to include early verification and validation cycles and predictive analytics. Multiple languages for modeling the engineering of systems exist; the most widely used being Systems Modeling Language (SysML). SysML is descriptive in nature, meaning it contextualizes the relationships in the system model. While this is useful, it lacks a rigorously established mathematical framework that would allow for understanding of emergent behavior, pattern recognition, vulnerability assessment, and a scientific approach to modeling of systems among other capabilities. An internally consistent mathematical framework for MBSE was proposed by Wayne Wymore in 1993, which may provide what is necessary to overcome the descriptive limitation of SysML. In this article, we perform an initial assessment of the feasibility of underpinning Wymore mathematical system construct to SysML by comparing Wymoreâs Moore-based state machines to SysML state machine diagrams. Specifically, we focus on the mathematical capturing of orthogonality through system coupling.
DA  - 2019/01/01/
PY  - 2019
DO  - 10.1016/j.procs.2019.05.076
VL  - 153
SP  - 242
EP  - 249
J2  - Procedia Computer Science
SN  - 1877-0509
UR  - https://www.sciencedirect.com/science/article/pii/S1877050919307355
KW  - Model-Based Systems Engineering
KW  - System Modeling
KW  - Architecting Patterns
KW  - Emergent Behavior
KW  - Theory of System Engineering
ER  - 

TY  - CHAP
TI  - Chapter 15 - Water Distiller Example Using Functional Analysis
AU  - Friedenthal, Sanford
AU  - Moore, Alan
AU  - Steiner, Rick
T2  - Practical Guide to SysML
A2  - Friedenthal, Sanford
A2  - Moore, Alan
A2  - Steiner, Rick
AB  - Publisher Summary
This chapter contains an example that describes the application of SysML to the design of a water distiller system using a traditional functional analysis method. This example shows how SysML can be used to model a system with a traditional functional analysis approach. The problem also illustrates the application of modeling physical systems with limited software functionality. Examples of each SysML diagram are used to support the specification, design, and analysis, with fundamental SysML language concepts such as the distinction between definition and use. The method is familiar and intuitive to many practicing systems engineers. The example was originally developed by the International Council on Systems Engineering (INCOSE) to support the initial evaluation of the SysML specification. The following approach is used to address the problem: stating the problem, defining the model-based systems engineering approach, organizing the model, establishing requirements, modeling behavior, modeling structure, analyzing performance, and modifying the original design.
CY  - Burlington
DA  - 2008/01/01/
PY  - 2008
SP  - 357
EP  - 396
PB  - Morgan Kaufmann
SN  - 978-0-12-374379-4
UR  - https://www.sciencedirect.com/science/article/pii/B9780123743794000151
ER  - 

TY  - BOOK
TI  - Continuous Behavior Modeling for SoS Simulation
AU  - Jing, Z.
T2  - Lecture Notes in Electrical Engineering
AB  - Behavior models are key models in SoS (System of Systems) modeling and simulation in aircraft top-level demonstration. After architecture modeling to comprehensively describe the SoS, it is essential to transform the models for SoS mission simulation to achieve the virtual verification and validation in MBSE (Model-Based System Engineering). With the analysis of behavior modeling, two methods are introduced. Driving the entities in mission simulation system directly by the state machine models in SoS architecture after the interface definition is a proven method. Through the format conversion of the SoS architecture outputs, the operational/system state diagrams can be transformed to the corresponding organizations/systems behavior models in the mission simulation system. A sample case is provided to illustrate the continuous behavior modeling by format conversion in an air-to-surface attack mission. Compared to the traditional manual behavior modeling, the format conversion method leaves out the repeated behavior modeling and saves the corresponding working load. Â© 2022, The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.
DA  - 2022///
PY  - 2022
VL  - 644 LNEE
SP  - 3523
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85120623708&doi=10.1007%2f978-981-15-8155-7_294&partnerID=40&md5=cd6fac4da0c9e89700e3e87033183ccf
DB  - Scopus
KW  - Model transformation
KW  - System of systems
KW  - Behavior modeling
ER  - 

TY  - CONF
TI  - Integration of modeling and verification for system model based on KARMA language
AU  - Ding, J.
AU  - Reniers, M.
AU  - Lu, J.
AU  - Wang, G.
AU  - Feng, L.
AU  - Kiritsis, D.
T2  - DSM 2021 - Proceedings of the 18th ACM SIGPLAN International Workshop on Domain-Specific Modeling, co-located with SPLASH 2021
AB  - Model-based systems engineering (MBSE) enables to verify the system performance using system behavior models, which can identify design faults that do not meet the stakeholders' requirements as early as possible, thus reducing the R&D cost and error risks. Currently, different domain engineers make use of different modeling languages to create their own behavior models. Different behavior models are verified by different approaches. It is difficult to adopt a unified integrated platform to support the modeling and verification of heterogeneous behavior models during the conceptual design phase. This paper proposes a unified modeling and verification approach supporting system formalisms and verification. The KARMA language is used to support the unified formalisms across MBSE models and dynamic simulations for different domain specific models. In order to describe the behavior model more precisely and to facilitate verification, the syntax of hybrid automata is integrated into KARMA. We implemented behavior models and their verification in MetaGraph, a multi-architecture modeling tool. Finally, the effectiveness of the proposed approach is validated by two cases: 1) the scenario of booking railway tickets using BPMN models; 2) the behavior performance simulation of unmanned vehicles using a SysML state machine diagram. Â© 2021 ACM.
DA  - 2021///
PY  - 2021
DO  - 10.1145/3486603.3486775
SP  - 41
EP  - 50
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85118849422&doi=10.1145%2f3486603.3486775&partnerID=40&md5=56db5e817226856c9540d8d976ae744a
DB  - Scopus
KW  - model-based systems engineering
KW  - behavior model
KW  - KARMA language
KW  - modeling and verification
ER  - 

TY  - JOUR
TI  - Managing the use of simulation in systems engineering: An industrial state of practice and a prioritization method
AU  - Bemmami, K.E.
AU  - David, P.
T2  - Computers in Industry
AB  - Model-based systems engineering (MBSE) has been proposed as an approach to manage the complexity of modern product development through the continuous use of models. The use of model simulation is a core principle of the MBSE approach. In the early stages of projects, it for example supports defining the expected system features, when in the later phases it can be used to estimate the dynamic behavior. Simulation is pushed to obtain results earlier and cheaper than with testing and prototyping. However, the development of simulation can be a very tedious and expensive task. Simulation opportunities are numerous, but the project managers must identify the more relevant for their project. This paper aims at documenting the current state of practice on the usage of simulation in MBSE processes. Then it aims at exploring decision support opportunities for simulation use in MBSE projects. The paper presents a survey conducted amongst French companies, on how they apply MBSE, Verification Validation & Testing (VVT), and simulation. The perceived benefits, barriers, and the parameters influencing VVT strategies, and the use of simulation are alternately analyzed. The results of the survey are used to propose a Prioritization of Simulation Efforts Methodology (PSEM) to assists managers in choosing the right functions, or systemsâ elements to be simulated. Â© 2021 Elsevier B.V.
DA  - 2021///
PY  - 2021
DO  - 10.1016/j.compind.2021.103486
VL  - 131
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85106366823&doi=10.1016%2fj.compind.2021.103486&partnerID=40&md5=5ed8d27fb41ef12390298663046ca24d
DB  - Scopus
KW  - Simulation
KW  - Analytic hierarchy process (AHP)
KW  - Decision support
KW  - Model-based systems engineering (MBSE)
ER  - 

TY  - JOUR
TI  - Construction method of shop-floor digital twin based on MBSE
AU  - Liu, J.
AU  - Liu, J.
AU  - Zhuang, C.
AU  - Liu, Z.
AU  - Miao, T.
T2  - Journal of Manufacturing Systems
AB  - Digital twin (DT) technology is essential for achieving the fusion of virtual-real cyber-physical systems. Academics and companies have made great strides in the theoretical research and case studies of constructing the shop-floor digital twin (SDT), which is the premise of applying DT technology on the shop floor. A shop floor is a large complex system that involves many elements including people, machines, materials, methods, and the environment and processes, such as the technical flow, business process, logistics, and control flow. However, most of the developed cases lack a hierarchical, structured and modularized implementation framework for the development of an SDT system, which leads to problems such as a low reuse rate of the system blocks, lack of scalability, and high upgrade and maintenance costs. In response to these issues, we propose a construction method of the DT for the shop floor based on model-based systems engineering from the perspective of the system. In this method, a comprehensive DT model for the shop floor is gradually constructed by using system modeling language, the modeling method âMagicGrid,â and the âV modelâ of systems engineering. The model includes four dimensions of the shop-floor requirements, structure, behavior, and parameters, as well as three stages (the problem domain, solution domain, and implementation domain), and connects nine steps of the âV model,â including the system requirements, system architecture, subsystem implementation, subsystem integration, and system verification. Then, based on an example of a real NC machining shop floor, subsystems including a visualization system, synchronization system, and simulation system, are discussed. Finally, the functions of the integrated systems are verified based on the requirements, including the real-time synchronization of âman, machine, material, and methodâ and the transient simulation in real time. The numerical indicators of the integrated system are verified, including the model completeness and synchronization timeliness. Â© 2021 The Society of Manufacturing Engineers
DA  - 2021///
PY  - 2021
DO  - 10.1016/j.jmsy.2021.05.004
VL  - 60
SP  - 93
EP  - 118
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85106942746&doi=10.1016%2fj.jmsy.2021.05.004&partnerID=40&md5=ca359128cfe84a36c370bd07bad2a408
DB  - Scopus
KW  - Model-based systems engineering
KW  - Digital twin
KW  - Cyber-physical production system
KW  - MagicGrid
KW  - Shop-floor digital twin
KW  - System modeling language
ER  - 

TY  - JOUR
TI  - Comparative analysis of a model-based systems engineering approach to a traditional systems engineering approach for architecting a robotic space system through knowledge categorization
AU  - Younse, P.J.
AU  - Cameron, J.E.
AU  - Bradley, T.H.
T2  - Systems Engineering
AB  - This study compares the types and quantities of knowledge that are captured by a model-based systems engineering (MBSE) approach and a traditional architecting approach to measure the benefits of the MBSE approach in managing the complexity of a robotic space system. The MBSE approach was implemented with Cameo Systems Modeler using Systems Modeling Language (SysML) and applied to architecting an orbiting sample Capture and Orient Module (COM) system concept for a Capture, Containment, and Return System payload concept for potential Mars Sample Return. An architecture framework was established, covering system, subsystem, and assembly levels, along with structure, behavior, data, and requirements perspectives. The COM system architecture was captured in parallel using both the MBSE and non-MBSE approaches in order to provide a side-by-side comparison of the approaches. The approaches were evaluated based on how well each represented the information content of the COM system architecture. A total of 4389 knowledge elements were classified using the Revised Bloom's Taxonomy knowledge dimension and used to quantitatively compare the two approaches. The MBSE approach more completely captured architectural knowledge than the non-MBSE approach. Limitations to the SysML-based MBSE approach were also identified, including its ability to fully represent certain high-level conceptual, procedural, and metacognitive knowledge such as design principles, design approaches and rationales, risks, development strategies and rationales, organizational core competencies, and requirement verification methods. The overall results demonstrate the benefits of MBSE in managing the complexity of robotic space systems and strengthen the case for adopting MBSE within the systems engineering community. Â© 2021 Wiley Periodicals LLC
DA  - 2021///
PY  - 2021
DO  - 10.1002/sys.21573
VL  - 24
IS  - 3
SP  - 177
EP  - 199
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85104253564&doi=10.1002%2fsys.21573&partnerID=40&md5=77e515bdb61da911ba1d49ff910b9f39
DB  - Scopus
KW  - model-based systems engineering (MBSE)
KW  - system architecture
KW  - cognitive psychology
KW  - knowledge management
KW  - robotic space systems
ER  - 

TY  - JOUR
TI  - Mbse testbed for rapid, cost-effective prototyping and evaluation of system modeling approaches
AU  - Madni, A.M.
T2  - Applied Sciences (Switzerland)
AB  - Model-based systems engineering (MBSE) has made significant strides in the last decade and is now beginning to increase coverage of the system life cycle and in the process generating many more digital artifacts. The MBSE community today recognizes the need for a flexible frame-work to efficiently organize, access, and manage MBSE artifacts; create and use digital twins for verification and validation; facilitate comparative evaluation of system models and algorithms; and assess system performance. This paper presents progress to date in developing a MBSE experimentation testbed that addresses these requirements. The current testbed comprises several compo-nents, including a scenario builder, a smart dashboard, a repository of system models and scenarios, connectors, optimization and learning algorithms, and simulation engines, all connected to a private cloud. The testbed has been successfully employed in developing an aircraft perimeter security system and an adaptive planning and decision-making system for autonomous vehicles. The testbed supports experimentation with simulated and physical sensors and with digital twins for verifying system behavior. A simulation-driven smart dashboard is used to visualize and conduct comparative evaluation of autonomous and human-in-the-loop control concepts and architectures. Key findings and lessons learned are presented along with a discussion of future directions. Â© 2021 by the author. Licensee MDPI, Basel, Switzerland.
DA  - 2021///
PY  - 2021
DO  - 10.3390/app11052321
VL  - 11
IS  - 5
SP  - 1
EP  - 19
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85102682847&doi=10.3390%2fapp11052321&partnerID=40&md5=42fa66724a25fbe7276459b5054e8139
DB  - Scopus
KW  - MBSE
KW  - Ontologies
KW  - Simulation
KW  - Model-based systems engineering
KW  - Digital twin
KW  - Digital engineering
KW  - Testbed
ER  - 

TY  - JOUR
TI  - State-based safety analysis method for dynamic evaluation of failure effect
AU  - Wu, Y.
AU  - Xiao, G.
AU  - Wang, M.
T2  - Aerospace Systems
AB  - System state that represents a combined influence of internal and external system parameters on the overall failure effect plays a significant role in failure effect analysis. The traditional safety analysis methods can hardly evaluate the overall failure impact due to the dynamic failure behaviors in diverse system interaction situations. To overcome this problem, this paper proposes a state-based safety analysis method for dynamic evaluation of the failure effect combining the situation factor. First, a hierarchical modeling framework that includes functional logic, physical architecture, and the failure mode is constructed, and then the cross-linking relationships between items are characterized by the state machines. Particularly, the event transmission mechanism and the global attribute updating mechanism are designed to realize the state synchronization of various systems, thus enabling the global propagation of failure. The feasibility of the proposed method is verified by simulations. The Enterprise Architect platform is used to model the aircraft integrated surveillance system and analyze the effects of different failure modes in typical situations. The proposed method complements the failure effect evaluation accuracy considering the dynamic interaction situations, thus realizing the global perception of the safety state, enhancing the dynamics and integrity of the failure effect analysis process. Â© 2020, The Author(s).
DA  - 2021///
PY  - 2021
DO  - 10.1007/s42401-020-00073-8
VL  - 4
IS  - 1
SP  - 49
EP  - 65
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85096287777&doi=10.1007%2fs42401-020-00073-8&partnerID=40&md5=4152fa85bef73ef5594b41a1f7c735fa
DB  - Scopus
KW  - Failure effect analysis
KW  - Model-based safety analysis (MBSA)
KW  - Model-based system engineering (MBSE)
KW  - System simulation
ER  - 

TY  - CONF
TI  - Model-based System Architecture for Event-triggered Wireless Control of Bio-analytical Devices
AU  - Ashraf, K.
AU  - Le Moullec, Y.
AU  - Pardy, T.
AU  - Rang, T.
T2  - Proceedings - 2021 24th Euromicro Conference on Digital System Design, DSD 2021
AB  - Bio-analytical devices have gained importance over the past few years because of their application in rapid diagnostics and biochemical analysis. The integration of the Cyber-Physical System (CPS) concept with bio-analytical devices is essential to enable automation of the device. Modeling of CPS-based bio-analytical devices can provide a deeper understanding of system behavior at early design stages and avoid costly iterations. In this paper, a model-based system architecture enabling wireless control of bio-analytical devices is proposed using the extended timed automata-based formal technique. Using this formal technique, a study case âA droplet flow cytometer for antibiotic susceptibility testing of bacteriaâ is modeled and verified using the UPPAAL tool. The synchronized operation of the modeled system under defined constraints was confirmed. In addition, the case study shows the implications of formal techniques for the design and verification of wireless automation of high-throughput laboratory setups in Model-Based System Engineering (MBSE). Â© 2021 IEEE.
DA  - 2021///
PY  - 2021
DO  - 10.1109/DSD53832.2021.00076
SP  - 465
EP  - 471
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85125759951&doi=10.1109%2fDSD53832.2021.00076&partnerID=40&md5=a7b2b832746a31e2ecbc2d6b1aabc63e
DB  - Scopus
KW  - Cyber-physical systems
KW  - Biological system modeling
KW  - Automata
KW  - Biochemical analysis
KW  - Formal verification
KW  - Networked control systems
ER  - 

TY  - CONF
TI  - SoS Behavior Model Transformation for Aircraft Top-level Demonstration
AU  - Zang, J.
AU  - Zhu, J.
T2  - 32nd Congress of the International Council of the Aeronautical Sciences, ICAS 2021
AB  - The model continuum is necessary in aircraft top-level demonstration for continuous virtual verification and validation. The architecture models may not be directly executed in the SoS simulation system with the misunderstanding risks and longer iteration cycle of verification and validation. To partly achieve the single truth source required in MBSE, a SoS behavior model transformation method is proposed. The sequence diagrams can be mapped to partly fulfill the scenario for SoS simulation. The state diagrams can transformed to the behavior models in SoS simulation system though format conversion of the SoS architecture outputs. A sample case is provided to illustrate a specific scenario of air-surface attack with behavior models transformation. Â© 2021 32nd Congress of the International Council of the Aeronautical Sciences, ICAS 2021. All rights reserved.
DA  - 2021///
PY  - 2021
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85124465930&partnerID=40&md5=49c644dacb1b931f102a72f1a47afe48
DB  - Scopus
KW  - System of systems
KW  - Aircraft
KW  - Behavior model
KW  - Top-level demonstration
ER  - 

TY  - BOOK
TI  - Framework for Integration of Virtual Reality into Model Based Systems Engineering Approach
AU  - Lutfi, M.
AU  - Valerdi, R.
T2  - Lecture Notes in Networks and Systems
AB  - Model Based Systems Engineering (MBSE) is an ever-growing philosophy in order to develop, manage and sustain the increasingly complex systems. In present practice, MBSE is overwhelmingly replacing document centric approach by model centric approach. Most widely used MBSE language is the âSystems Modeling Language (SysML)â, which follows Object Oriented Systems Engineering Methodology (OOSEM). Most MBSE approaches including SysML leverages static viewpoints and limited simulation capability to create and analyze a system model. Now, SysML as a MBSE language is matured enough to incorporate widespread dynamic modeling and simulation into MBSE practices. Virtual Reality can play an important role on creating dynamic MBSE approaches. This research work has proposed a framework for incorporating Virtual Reality (VR) tools into MBSE practices in order to develop âtrueâ model centric approach. The framework consists of a System Model built using SysML, VR tool (Unity 3D), scripting languages and System data sources. SysML diagrams can represent Requirements, Use Cases, Concept of Operations, System Architecture, System Behaviors, Parametric analysis of a System of Interest (SOI) in the System Model. The framework will facilitate dynamic simulation of the system being described in the System model. VR tools can visualize the use case scenarios and simulate the behaviors of the system described in the Model. This framework will also facilitate automatic requirements verification through interactive VR environment. The system model is fed into the VR environment for the analysis of the proposed system architecture, use cases and requirements. Based on the VR environment simulation results, modifications are incorporated into the System Model. The integration of VR tool with the SysML System Model (which acts as a source of truth) is performed with the aid of scripting languages. Moreover, a System Data source will support both the model and VR environment simulation. Finally, the research paper has mentioned few implications to implement the framework and proposed possible solutions. Â© 2021, The Author(s), under exclusive license to Springer Nature Switzerland AG.
DA  - 2021///
PY  - 2021
VL  - 275
SP  - 131
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85112196851&doi=10.1007%2f978-3-030-80091-8_16&partnerID=40&md5=1c7a346feb322e8322d243ce6113e116
DB  - Scopus
KW  - SysML
KW  - Model based systems engineering
KW  - Virtual reality
ER  - 

TY  - CONF
TI  - Towards the formal modeling methodology of WSN through the transformation of SysML into DSPNs
AU  - Berrachedi, A.
AU  - Ioualalen, M.
AU  - Hammad, A.
T2  - Proceedings of the 11th International Conference on Simulation and Modeling Methodologies, Technologies and Applications, SIMULTECH 2021
AB  - When developing critical and complex systems, the requirement of the systems design verification is paramount. We address the problem of how to design these ones in order to satisfy their requirements. Wireless Sensor Networks (WSNs) are examples of such systems, which consist of a large amount of distributed and autonomous nodes. We aim to propose a Model-Based Systems Engineering specification and verification methodology for designing WSNs. The proposed approach uses SysML language to describe the WSNs requirements, behaviors and performance parameters. Then, it translates the SysML elements to a Deterministic Stochastic Petri Net (DSPNs) and integrates them into an analytic model. This allows designing WSNs and studying their behaviors and their performances, namely energy consumption. The current paper refines the first part of this project by transforming the activity diagram of SysML to a DSPN. To show the applicability of the mapping technique, a case study that presents a hierarchical WSN is used. Copyright Â© 2021 by SCITEPRESS â Science and Technology Publications, Lda. All rights reserved.
DA  - 2021///
PY  - 2021
DO  - 10.5220/0010549200830091
SP  - 83
EP  - 91
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85111725733&doi=10.5220%2f0010549200830091&partnerID=40&md5=6a370add28b7e3758fa68bc943914b1c
DB  - Scopus
KW  - SysML
KW  - Activity Diagram
KW  - Deterministic Stochastic Petri Nets
KW  - Mapping
KW  - Model-based Systems Engineering
ER  - 

TY  - CONF
TI  - Multi-domain simulation utilizing SysML: State of the art and future perspectives
AU  - Nigischer, C.
AU  - Bougain, S.
AU  - Riegler, R.
AU  - Stanek, H.P.
AU  - Grafinger, M.
T2  - Procedia CIRP
AB  - Increasing system complexity requires adapted methodologies to tackle the challenges that come along with multi-domain systems development. Model-Based Systems Engineering (MBSE) provides significant support by using models to describe different aspects of an examined system already in the early stages of the development process. The Systems Modeling Language (SysML) can be utilized to establish a common system information basis on a comparatively abstract level for all participating stakeholders. Although SysML models are able to encompass system information like requirements, structure, behaviour and parametrics, in many cases additional specialized simulation or computation models are needed, especially for early design decision-making and verification activities. Ideally, the input data and the calculated results are automatically exchanged between the SysML modelling editor and the involved simulation tools. Hence, tool chain integration is a crucial factor to provide the necessary interconnectivity to achieve multi-domain simulation. In general, the integration of simulation environments with SysML tools is mainly limited by two factors. First, as the tools available for modelling with SysML are legion, interface solutions are usually developed for a specific tool and therefore, their usage is restricted to that particular software. Second, evolving standards like the Functional Mock-up Interface (FMI) provide capabilities to ease model data exchange and co-simulation, but the implementation of different versions of various standards in the tools causes incompatibilities. In this work a state of the art of the integration between simulation environments and available SysML modelling tools with respect to utilized standards and their implementation maturity is presented. Additionally, the capabilities of the reviewed tools to support co-simulation are evaluated. Furthermore, existing challenges are highlighted, and potential improvements are discussed. Â© 2021 Elsevier B.V.. All rights reserved.
DA  - 2021///
PY  - 2021
DO  - 10.1016/j.procir.2021.05.073
VL  - 100
SP  - 319
EP  - 324
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85107895509&doi=10.1016%2fj.procir.2021.05.073&partnerID=40&md5=b6203297e62dea2a6bcd06a8bc8f7ed6
DB  - Scopus
KW  - Functional Mock-up Interface
KW  - Systems Modeling Language
KW  - Multi-Domain Simulation
ER  - 

TY  - CONF
TI  - State-of-practice survey in industry on the deployment of simulation in systems engineering
AU  - Bemmami, K.E.
AU  - David, P.
T2  - IFAC-PapersOnLine
AB  - Model-based systems engineering (MBSE) has been proposed as an approach to manage the complexity of modern product development through the continuous use of models. The use of model simulation is a core principle of the MBSE approach. In the first stages of projects, it supports defining the expected system features, when in the later stages it estimates the dynamic behavior. Simulation is pushed to obtain results earlier and cheaper than with testing and prototyping. However, the development of simulation can be a very tedious and expensive task. The use of simulation is a specific part of an MBSE approach that is crucial in an efficient project management since it might be the source of high cost and skills needs but also a source of precious knowledge on the future system. Simulation opportunities are numerous, but the project manager must identify the more relevant for their project. This paper aims at documenting the current state of practice in industry on the usage of simulation in MBSE processes. The paper presents a survey conducted amongst French companies, on how they apply MBSE, Verification Validation & Testing VVT, and simulation. The perceived benefits and barriers, and the parameters influencing VVT strategies and the use of simulation are alternately analyzed. Â© 2021 The Authors. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0)
DA  - 2021///
PY  - 2021
DO  - 10.1016/j.ifacol.2021.08.133
VL  - 54
SP  - 1132
EP  - 1137
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85106376017&doi=10.1016%2fj.ifacol.2021.08.133&partnerID=40&md5=fb32b6101fb30abbe007259af2e9302d
DB  - Scopus
KW  - Simulation
KW  - Model-based Systems engineering (MBSE)
KW  - State of practice
ER  - 

TY  - CONF
TI  - Digital-twin enabled experimentation testbed for mbse
AU  - Madni, A.M.
AU  - Erwin, D.
AU  - Purohit, S.
AU  - Madni, C.C.
T2  - AIAA Scitech 2021 Forum
AB  - As Model Based Systems Engineering (MBSE) continues to advance in terms of system life cycle coverage, modeling languages, methods, and tools, there is a growing need for an overarching framework to organize MBSE artifacts and facilitate their rapid retrieval and use by MBSE researchers. Also, researchers need a simulation environment that supports exploration, experimentation with different modeling constructs and algorithms, and performance data collection over a broad range of conditions and with different assumptions. To address these requirements, this paper presents progress to date in developing a MBSE research testbed for modeling, experimentation, and verification and validation, and exploration of system behaviors over a wide range of operational scenarios and operating conditions. The testbed is intended to help researchers analyze data to uncover patterns and trends, reuse models and components as applicable, and serve as a repository for scenarios, system models, case studies, and lessons learned. Two different operational scenarios from different domains are used to convey the capabilities of the testbed. This paper presents findings and lessons learned from the prototype MBSE testbed implementation. Â© 2021, American Institute of Aeronautics and Astronautics Inc, AIAA. All rights reserved.
DA  - 2021///
PY  - 2021
SP  - 1
EP  - 12
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85100391650&partnerID=40&md5=d5dad5770a45505ff80f72605c8dc6de
DB  - Scopus
ER  - 

TY  - CONF
TI  - Driver Stress Level Change Detection Using Model-Based System Engineering Method
AU  - Ongul, B.S.
AU  - Ongun, M.A.
T2  - 4th International Symposium on Multidisciplinary Studies and Innovative Technologies, ISMSIT 2020 - Proceedings
AB  - This paper intends to develop a method for the nervous system changes and driving style modifications as a response to incremental stressing level during driving or as continuous driver behavior and driving style analysis and detection with the perspective of the model-based system engineering framework. Thus, this problem started to be investigated from the requirement level analysis in line with designing a model that fulfills the requirements and development of the model. Finally, the verification of the model is executed. In this paper, detecting the driver type is investigated in terms of acceleration pedal usage along with timely responses and the quantity of the events. The investigation aims to detect the possibilities for unique driver identification and the possible effects and preventive actions of this behavior. Â© 2020 IEEE.
DA  - 2020///
PY  - 2020
DO  - 10.1109/ISMSIT50672.2020.9255072
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097675906&doi=10.1109%2fISMSIT50672.2020.9255072&partnerID=40&md5=b68440c5a41cb60e25dc82a87b90e260
DB  - Scopus
KW  - MBSE
KW  - aggressive driver
KW  - angry driver
KW  - driver type evaluation
KW  - driver types
KW  - driving style detection
KW  - nervous driver
KW  - style
KW  - transmission systems
ER  - 

TY  - CONF
TI  - Transformation of non-standard nuclear IC logic drawings to formal verification models
AU  - Pakonen, A.
AU  - Biswas, P.
AU  - Papakonstantinou, N.
T2  - IECON Proceedings (Industrial Electronics Conference)
AB  - Model checking methods have been proven to be a valuable asset for identifying undesired behaviour of safety-critical Instrumentation and Control (IC) logics. Their application in the nuclear domain has been very successful and has triggered significant interest from the safety community. Creating formal models from the diagrams found on paper or from digital formats without the needed semantics is one bottleneck that hinders the adoption of model checking due to costs in time and may introduce errors. This paper proposes a methodology for the creation of formal models from IC diagrams drawn in generic modelling tools (lacking specific IC semantics). The generic IC logic diagram is transformed into an intermediate UML model that in turn can be transformed to other target formats like IEC 61131 PLCopen XML IC software or NuSMV formal model code. This methodology is demonstrated with a typical example of a trip signal generator application logic. This application logic is drawn in MS Visio, it is transformed to an IC model in UML with the needed properties for model checking, then to IEC 61131 PLCopen XML and to an input file for the NuSMV model checker. Â© 2020 IEEE.
DA  - 2020///
PY  - 2020
DO  - 10.1109/IECON43393.2020.9255176
VL  - 2020-October
SP  - 697
EP  - 704
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85097766067&doi=10.1109%2fIECON43393.2020.9255176&partnerID=40&md5=2a8f43c9f40835cff04b79ed3781508e
DB  - Scopus
KW  - Model-Based System Engineering
KW  - function block diagram
KW  - IC
KW  - IEC61131
KW  - nuclear energy
KW  - PLCOpen XML
ER  - 

TY  - JOUR
TI  - Ontology-based requirement verification for complex systems
AU  - Chen, R.
AU  - Chen, C.-H.
AU  - Liu, Y.
AU  - Ye, X.
T2  - Advanced Engineering Informatics
AB  - Verification is a necessary part of Model-based systems engineering (MBSE) which is becoming a mainstream methodology for the design of complex systems. Verification in the early design stage has aroused widespread attention for its efficiency and cost-saving. Although there are numbers of researches on verification, some deficiencies still exist, such as the integration of design and verification needs to improve, the design problems are hard to trace and the behavior verification in the early design stage is often omitted. In this study, a novel ontology-based requirement verification method for complex systems is proposed to solve the above-mentioned problems. First, a requirement formalization method is proposed to avoid the ambiguousness of natural language, to make requirements easier to verify, and to make design problems easier to trace. Second, some transformation rules are defined to realize the automatic design ontology and rule generation. Based on these two steps, automated verification can be done through reasoning with ontology models and rules. This verification method is fully integrated with design tools and no additional expertise is needed for designers. To validate its feasibility and advantages, an example of a smart traffic light system is provided. Â© 2020
DA  - 2020///
PY  - 2020
DO  - 10.1016/j.aei.2020.101148
VL  - 46
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85089344185&doi=10.1016%2fj.aei.2020.101148&partnerID=40&md5=43a890218902027e6bdb67b77dfe4531
DB  - Scopus
KW  - Reasoning
KW  - Ontology
KW  - Verification
KW  - Systems design
ER  - 

TY  - CONF
TI  - Applying model-based systems engineering to the development of a test and evaluation tool for unmanned autonomous systems
AU  - Gebreyohannes, S.
AU  - Karimoddini, A.
AU  - Homaifar, A.
T2  - SYSCON 2020 - 14th Annual IEEE International Systems Conference, Proceedings
AB  - In this paper, we apply the Model-Based Systems Engineering (MBSE) concepts and approaches to the early phases of the development of a Test & Evaluation (T&E) tool for Unmanned Autonomous Systems (UASs). This helps meet the design requirements and maintain traceability (of design requirements and decisions for satisfying stakeholder's needs). UAS development is driving toward increasing levels of autonomy for unmanned systems. The dynamic, non-deterministic behavior of intelligent autonomous systems presents the testers with a significant challenge. The ability to predict the behavior and evaluate performance of increasingly intelligent systems, especially those that employ vision-based behaviors, is seen as a critical T&E shortfall. To address this challenge, we propose, in this paper, to use a high-fidelity simulation environment. This can significantly aid in the evaluation of UAS behaviors and their perception mechanisms. Such a high-fidelity simulator enables the testes to safely conduct a wide variety of mission scenarios to test an autonomous system by providing truth data to compare with the UAS's perceptions. A major challenge here is to manage the system modeling complexity and maintain traceability of design decisions made at each level of the development to meet stakeholder's needs. In this paper, we follow MBSE methodology and use Systems Modeling Language (SysML - a domain-specific modeling language for systems engineering used to specify, analyze, design, optimize, and verify systems) to establish a systematic framework for designing a T&E tool for UASs and to transform stakeholder's needs into design requirements to maintain traceability. Â© 2020 IEEE
DA  - 2020///
PY  - 2020
DO  - 10.1109/SysCon47679.2020.9275894
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85098919585&doi=10.1109%2fSysCon47679.2020.9275894&partnerID=40&md5=b174fd3890182f59240265041b54d6e1
DB  - Scopus
KW  - Model-Based Systems Engineering
KW  - Test & Evaluation
KW  - Unmanned Autonomous Systems
ER  - 

TY  - CONF
TI  - Modeling and verification method for an early evaluation of systems of systems interactions
AU  - Baduel, R.
AU  - Ober, I.
AU  - Bruel, J.-M.
T2  - Proceedings of the ACM Symposium on Applied Computing
AB  - This paper presents the results achieved while pursuing the verification and validation of a train system behavior at the first steps of development in an industrial context. At this stage, and at least from the industrial point of view, the train can be considered as a System of Systems (SoS). A method is proposed, supported by preliminary results through the definition and verification of constrained states and preconditions to use cases, as well as a structure for the behavior. Â© 2020 ACM.
DA  - 2020///
PY  - 2020
DO  - 10.1145/3341105.3373944
SP  - 1798
EP  - 1805
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083038471&doi=10.1145%2f3341105.3373944&partnerID=40&md5=721f465061491dc49014284e868e8e30
DB  - Scopus
KW  - Model-based systems engineering
KW  - Early validation
KW  - States and modes
KW  - Systems of systems
ER  - 

TY  - CONF
TI  - There's no 'I' in SEAM - An Interim Report on the 'Spacecraft Early Analysis Model'
AU  - Gregory, J.
AU  - Berthoud, L.
AU  - Tryfonas, T.
AU  - Faure, L.
T2  - IEEE Aerospace Conference Proceedings
AB  - Model-Based Systems Engineering (MBSE) represents a move away from the traditional approach of Document-Based Systems Engineering (DBSE), and is used to promote consistency, communication, clarity and maintainability within systems engineering projects. In previous work, industry focus groups have indicated that one way this can be achieved is by performing early functional validation of elements of the spacecraft avionics. This paper presents an extended approach, introduced in a case study previously published by the authors, to enable early functional analysis of a spacecraft. The approach uses the 'Spacecraft Early Analysis Model' (SEAM), a SysML-based model framework for the definition, development and analysis of a space-based mission and corresponding space system. This formal model-based representation of the system enables the high-level simulation of the design during Phase B of the spacecraft system lifecycle. The SEAM pulls together different, traditionally disparate, analysis tools and enables them to work together, producing an integrated system model spanning multiple tools. It facilitates the simulation of the mission using dedicated orbit modelling software, analysis of the completeness and accuracy of the system behaviour, and provides an indication of the appropriate logical architecture. The SEAM has been developed iteratively by applying it to Earth-observation case studies from the Biomass mission, refining the capabilities of the template accordingly, and subsequently generalising the model. The resulting interim version of the Spacecraft Early Analysis Model contains a series of MBSE patterns that will ultimately provide users with a comprehensive and consistent SysML-based structure that enables early functional definition and analysis of spacecraft. Next steps in the development of the SEAM include its application to a wider variety of use cases to develop and demonstrate its versatility, and the development of metrics to measure its perceived value among practitioners. Â© 2020 IEEE.
DA  - 2020///
PY  - 2020
DO  - 10.1109/AERO47225.2020.9172702
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85092599881&doi=10.1109%2fAERO47225.2020.9172702&partnerID=40&md5=3b80ea4648f3155f4b8351b986323c65
DB  - Scopus
ER  - 

TY  - CONF
TI  - Unit testing platform to verify devs models
AU  - Henares, K.
AU  - Risco-MartÃ­n, J.L.
AU  - Ayala, J.L.
AU  - Hermida, R.
T2  - Simulation Series
AB  - The natural progression from classic Model-Based Systems Engineering (MBSE) methodologies to Modeling and Simulation-Based Systems Engineering (M&SBSE) brings the need for more flexible and powerful validation tools. Completing the structure and descriptions of static models with self-diagnosis greatly facilitates the development, implementation, and validation of complex models. However, current simulation development environments and libraries often lack providing complete tools to validate these complex models straightforwardly and with the proper level of detail. In this article, we tackle this issue transferring one of the traditional software testing methods, unit testing, to the modeling and simulation field. To this end, we integrate a unit-testing method to the DEVS methodology, allowing the specification of expected states, outcomes, and behaviors of the simulation modules in an XML-based syntax, in all the levels of the hierarchical design. As a result, this methodology enables the generation of powerful and easy-readable verification files. Â©2020 Society for Modeling & Simulation International (SCS)
DA  - 2020///
PY  - 2020
VL  - 52
SP  - 186
EP  - 196
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099319449&partnerID=40&md5=18e4a293131c0c17394075d726f6d399
DB  - Scopus
KW  - DEVS
KW  - Verification
KW  - Unit Testing
KW  - Validation
ER  - 

TY  - CONF
TI  - A co-simulation approach for the evaluation of multi-core embedded platforms in cyber-physical systems
AU  - Vanommeslaeghe, Y.
AU  - van Acker, B.
AU  - Vanherpen, K.
AU  - de Meulenaere, P.
T2  - Simulation Series
AB  - The increasing complexity of Cyber-Physical Systems (CPS) causes a shift from traditional single-core embedded platforms to complex multi-core or even heterogeneous platforms to meet the performance requirements. However, the deployment of control or monitoring algorithms on such platforms is not straightforward as the temporal behaviour of the embedded platform can affect the functional behaviour of these algorithms. In this paper, we propose a co-simulation strategy for multi-core embedded platforms. This allows us to evaluate the impact of the deployment on the behaviour of the algorithm early on in the design process, reducing the risk of costly re-engineering and allowing for a more agile design process. Our approach is validated using an example case in different deployment scenarios, after which its applicability is demonstrated using a real-world use case. Â©2020 Society for Modeling & Simulation International (SCS)
DA  - 2020///
PY  - 2020
VL  - 52
SP  - 266
EP  - 277
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099299710&partnerID=40&md5=384468d0c05d583b3eb7b974d101b572
DB  - Scopus
KW  - Model-Based Systems Engineering
KW  - Cyber-Physical Systems
KW  - Co-Simulation
KW  - Control Embedded Co-Design
KW  - Multi-core Embedded Platforms
ER  - 

TY  - CONF
TI  - Integrated system model of district cooling for energy consumption optimization
AU  - Dalvi, A.S.
AU  - Razban, A.
AU  - El-Mounyari, H.
AU  - El-Mekkawy, T.
AU  - Promyoo, R.
T2  - ECOS 2020 - Proceedings of the 33rd International Conference on Efficiency, Cost, Optimization, Simulation and Environmental Impact of Energy Systems
AB  - The successful modeling of a multi-plant district cooling (DC) system presents several challenges in integrating system level requirements with engineering analysis for verification and optimization. Currently, the ability to predict the behavior and performance parameters such as chilled water temperature difference, annual energy consumption, and central chiller plant coefficient of performance (COP) of the dynamic system is limited. Effective modeling and efficient simulation are required when it comes to complex physical systems. This paper presents an integrated model that combines system architecture with physical modeling to represent and simulate a multi-plant district cooling system (DCS). We refer to this model as model-based systems engineering (MBSE) model of the DC system. A systems modeling language (SysML) model is created to develop a multi-domain architecture of the DC system that will satisfy stakeholder needs and requirements. This model is capable of executing behavior and parametric aspects (or "views") of the system. A closed-loop of information flow was developed to map SysML constructs with their respective Modelica models to support the integration of simulated experiments with SysML construct. The integrated MBSE model is successfully implemented and the results show that the IPLV.SI value of the chiller model was 6.4157, which is in the acceptable range. Based on the initial conditions provided by the actual plant, the simulation results show that the chilled water temperature predictions by Modelica as 4.8 Â°C verify the corresponding stakeholders' requirements captured in the SysML model. Â© ECOS 2020.All right reserved.
DA  - 2020///
PY  - 2020
SP  - 1722
EP  - 1732
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85095751692&partnerID=40&md5=fc7d2333c806a0f81e28d3be0023caa5
DB  - Scopus
KW  - MBSE
KW  - Chiller
KW  - District Cooling Plant
KW  - Dynamic Modeling
KW  - SysML-Modelica Integration
ER  - 

TY  - CONF
TI  - Chaining model transformations for system model verification: Application to verify capella model with simulink
AU  - Duhil, C.
AU  - Babau, J.-P.
AU  - Lepicier, E.
AU  - Voirin, J.-L.
AU  - Navas, J.
T2  - MODELSWARD 2020 - Proceedings of the 8th International Conference on Model-Driven Engineering and Software Development
AB  - In the context of Model-Based System Engineering (MBSE), Thales has developed a method called Arcadia, and its dedicated workbench Capella. This approach provides engineer generic practices and tools to design system models in a coherent way. While models grew in complexity, the need emerged for model Simulation and verification. In this paper, a model based approach is proposed to provide an interpretation of the Capella dynamic behavior description of modeled systems. The approach allows targeting different semantics and facilitating reuse of legacy semantics. The idea is to enforce separation of concerns of semantics definition by defining a chain of five transformations. The approach ensures traceability between Capella source models and target models, facilitating interpretation of the verification results. We apply our approach to analyze dataflow diagrams of a Capella "clock radio" model. For this purpose we transform the Capella dataflow model to a Simulink model. The experimentation on the use case demonstrates the ability of the tool to catch model inconsistency problems. Copyright Â© 2020 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.
DA  - 2020///
PY  - 2020
SP  - 279
EP  - 286
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85082994857&partnerID=40&md5=8e14eb0ff803182ecd82623fdf5ff7ed
DB  - Scopus
KW  - Cyber Physical System
KW  - Model Simulation
KW  - Model Transformation
KW  - Model Verification
ER  - 

TY  - JOUR
TI  - A model-driven framework for design and verification of embedded systems through SystemVerilog
AU  - Anwar, M.W.
AU  - Rashid, M.
AU  - Azam, F.
AU  - Kashif, M.
AU  - Butt, W.H.
T2  - Design Automation for Embedded Systems
AB  - The demands of system complexity and design productivity for embedded systems can be managed by simplifying and reusing the design. Furthermore, these systems should be verified as early as possible in the development process to reduce the cost and effort. The rationale of the proposed framework in this article is to simplify the design and verification process of embedded systems in the context of Model Based System Engineering (MBSE). To achieve this, UML profile for SystemVerilog (UMLSV) is proposed to model the design and verification requirements. Particularly, we introduce various UMLSV stereotypes to model the system design (structure and behavior). Furthermore, a temporal extension of Object Constraint Language is used to capture the verification requirements (properties/constraints) in UMLSV. Consequently, the proposed framework allows the modeling of system design (structure and behavior) along with the verification aspects at higher abstraction level. Following the MBSE process, the high-level models and the verification constraints are transformed into synthesizable SystemVerilog Register Transfer Level and SystemVerilog Assertions code. This leads to perform the Assertions Based Verification of system design in the early development phases by using state-of-the-art simulators. The effectiveness of the proposed framework is demonstrated with the help of multiple case studies including Traffic Lights Controller, Unmanned Aerial Vehicle, Elevator and Car Collision Avoidance System. Â© 2019, Springer Science+Business Media, LLC, part of Springer Nature.
DA  - 2019///
PY  - 2019
DO  - 10.1007/s10617-019-09229-y
VL  - 23
IS  - 3-4
SP  - 179
EP  - 223
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074870646&doi=10.1007%2fs10617-019-09229-y&partnerID=40&md5=019029cd628248e83ffed695e6bbe3ed
DB  - Scopus
KW  - Embedded systems
KW  - Model-driven framework
KW  - SystemVerilog
KW  - UMLSV
ER  - 

TY  - CONF
TI  - Formal requirements and constraints modelling in FORM-L for the engineering of complex socio-technical systems
AU  - Nguyen, T.
T2  - Proceedings - 2019 IEEE 27th International Requirements Engineering Conference Workshops, REW 2019
AB  - Socio-technical systems combine behaviour and actions from human operators, physical processes (e.g., thermodynamic or electromagnetism), computing and data communication. One often uses expression 'cyber-physical system', or 'systems of systems' in the case of systems composed of socio-technical systems of their own that each have different stakeholders, owners and lifecycles, but that must cooperate in order to achieve what none can achieve independently. Complex systems are systems that require the cooperation and coordination of multiple individuals, multiple teams, multiple engineering disciplines and multiple stakeholders to be fully understood in all necessary aspects. This coordination must be ensured all along the lifetime of the system, from scoping studies that aim at determining the nature of the system needed, to deconstruction. For systems such as power plants or passenger aircrafts, this lifetime may cover several decades, during which the system needs to be operated, maintained, retrofitted and upgraded, by multiple successive generations. EDF has developed a FOrmal Requirements Modelling Language (FORM-L) to help address this issue for what concerns dynamic phenomena. This paper provides a brief introduction to FORM-L and its underlying methodology, illustrated with short examples. Â© 2019 IEEE.
DA  - 2019///
PY  - 2019
DO  - 10.1109/REW.2019.00027
SP  - 123
EP  - 132
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85077974723&doi=10.1109%2fREW.2019.00027&partnerID=40&md5=ee2088ca44d83ec3275b6ed9d54bd37b
DB  - Scopus
KW  - Model-Based Systems Engineering
KW  - Cyber-Physical Systems
KW  - Requirements engineering
KW  - Simulation
KW  - Complex systems
KW  - Formal Analysis
KW  - Formal Requirements Modelling
KW  - Justification Frameworks
KW  - Socio-Technical Syystems
KW  - Systems of Systems
KW  - Verification & Validation
ER  - 

TY  - JOUR
TI  - ESE Framework Verification by MBSE
AU  - Sitton, M.
AU  - Reich, Y.
T2  - IEEE Systems Journal
AB  - Enterprise system engineering (ESE) is a practice emerging in the last decades, aiming to support the enterprise systems engineers in generating and developing enterprise architecture and improving enterprise operational processes. However, ESE differs significantly from systems engineering (SE) due to the enterprise's unique property as a system of unsynchronized arrays of systems. This property might lead to severe issues, such as cross-enterprise failures, lack of decision-support information for cross-enterprise decisions, long delays in integration tests, and unexpected emergent behavior. Enterprise Processes Integrative Collaboration (EPIC) framework is an ESE framework, aims to address this property by generating better coordination between unsynchronized arrays of systems within the enterprise and even further across several enterprises. Previous research dealt with the validation of this framework by implementation in two large-scale enterprises from the aerospace and transportation disciplines. The objective of this study was to verify the EPIC framework completeness and integrity, as an example of ESE framework verification. A model-based SE methodology was used to encapsulate EPIC, defining the ESE activities, required resources, and products. This encapsulation allows tracing the engineering activities, verifying the model completeness, traceability, integrity, and interoperability of the ESE processes collaboration. Â© 2019 IEEE.
DA  - 2019///
PY  - 2019
DO  - 10.1109/JSYST.2018.2877667
VL  - 13
IS  - 3
SP  - 2108
EP  - 2117
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85058175380&doi=10.1109%2fJSYST.2018.2877667&partnerID=40&md5=a6066ef31d8834d62fead60d62588e1d
DB  - Scopus
KW  - Complex systems
KW  - enterprise systems engineering (ESE)
KW  - model-based system engineering (SE)
KW  - processes collaboration
ER  - 

TY  - JOUR
TI  - Integrating SOTIF and agile systems engineering
AU  - Post, K.
AU  - Davey, C.K.
T2  - SAE Technical Papers
AB  - Autonomous vehicles and advanced driver assistance systems have functionality realized across numerous distributed systems that interact with a dynamic cyber-physical environment. This complexity raises the potential for emergent behaviours which are not intended for the system's operational use. The need to analyze the intended functionality of these emergent behaviours for potential hazards, which may occur in absence of faults, are aspects of the ISO PAS 21448, Safety of the Intended Functionality (SOTIF) [1]. The Safety of the Intended Functionality or SOTIF is a framework for developing systems which are free from unreasonable risk due to the intended functionality or performance limitations of a system which is free from faults. This is meant to complement Functional Safety which is covered in ISO 26262 [2]. The major focus of SOTIF is to aid in the functional development of a system. The major areas are focused on analyzing the system as specified, verify that any known hazardous scenarios meet the expected behaviour, identify any hazardous scenarios which were previously not known, and iterate the functional design accordingly. This paper describes a methodology for applying SOTIF, within the context of the systems engineering pipeline, to facilitate higher levels of automated systems. By using an agile systems engineering framework, along with the System-Theoretic Process Analysis (STPA) method [3], system developers can identify potential hazards and identify previously unknown hazardous scenarios before system testing. This facilitates functional and technical improvements during the development process which can be traced back to the system design when using model based system engineering techniques. In addition, verification and validation results of the system can be fed into the analysis to aid in addressing technical limitations. Â© 2019 Ford Motor Company. All rights reserved.
DA  - 2019///
PY  - 2019
DO  - 10.4271/2019-01-0141
VL  - 2019-April
IS  - April
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85064634353&doi=10.4271%2f2019-01-0141&partnerID=40&md5=7bb4754b52ae0219a891e8b0e4c0a524
DB  - Scopus
ER  - 

TY  - CONF
TI  - Category theoretic based formalization of the verifiable design process
AU  - Kibret, N.
AU  - Edmonson, W.
AU  - Gebreyohannes, S.
T2  - SysCon 2019 - 13th Annual IEEE International Systems Conference, Proceedings
AB  - The verifiable design process (VDP) is a systems engineering methodology that integrates formal methods and model based systems engineering to achieve a correct-by-construction system. Formal methods are used in the design process to verify correct behavior of system as specified in the requirements. In order to aid development and analysis, the verifiable design process is organized in abstraction layers. The layers are represented using models that include requirements in natural language form, requirements in ontological form, specifications in logic form together with a proof process and interconnected models and their simulations. The models are intelligently coupled with each other to enable the formal verification and model-based validation of a system. In this work, we will show how to formalize the verifiable design process using category theory. We first show how to represent the different representations (models) of VDP as a category. Suitable categorical structures are employed to analyze them. Furthermore, we define each abstraction layer as a category (category of categories) with the models forming the objects and the relations among them forming the morphisms (functors). We then use pushout structure to represent the objects and their relations to provide analysis of the design process. The functors defined will formalize the relations between the different forms of representations. Â© 2019 IEEE.
DA  - 2019///
PY  - 2019
DO  - 10.1109/SYSCON.2019.8836804
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073152659&doi=10.1109%2fSYSCON.2019.8836804&partnerID=40&md5=d697fed6765af8ca59972686b3128910
DB  - Scopus
ER  - 

TY  - CONF
TI  - Cross Lifecycle Modeling in MBSE
AU  - Waldram, N.
AU  - Cornford, S.
AU  - Piette, M.
AU  - Plattsmier, G.
T2  - IEEE Aerospace Conference Proceedings
AB  - The Model Based Systems Engineering (MBSE) Infusion and Modernization Initiative (MIAMI) is a NASA-wide effort to lay the groundwork for an integrated framework of tools and technology to advance the objectives of Systems Engineering at NASA, with emphasis on efficiency, interconnectivity, and breadth of scope. Within the MIAMI effort, the Sounding Rocket Team, led by George Plattsmier (MSFC) and George Turner (GSFC), has implemented MBSE within the domain of NASA Sounding Rocket Operations Contract (NSROC)Sounding Rocket missions, using the Systems Modeling Language (SysML)to outline system architectures, requirements, mission assurance, stakeholders, events, and deliverables. The current team effort supports the Marshall Grazing Incidence X-Ray Spectrometer (MaGIXS) experiment. The rocket team, focused on the mission planning and execution domain, is working in tandem with a MIAMI Sounding Rocket MaGIXS experiment team, focused on the experiment domain, to model the mission, systems, experiment, and interfaces to produce and deploy an integrated mission model. Through communication and coordination between NASA and the Sounding Rocket Program Office (SRPO), the MIAMI Sounding Rocket team is tailoring their pilot efforts to specific deliverables identified as critical throughout the full mission lifecycle by Nathan Empson (Mission Operations Manager) and others at SRPO. These products, as part of an overall NASA MBSE pilot effort, will enable evaluation of the utility of MBSE for sounding rocket missions. The team coordinates their work through a spiral development process punctuated by 'sprints' to seam together the advancements in defining architecture and behavior of the systems involved, with the various technologies and analyses used to bolster the modeling effort. For developing technologies and modeling patterns, the team continues to interface with the Computer Aided Engineering Systems Environment (CAESE) team at JPL to explore and expand the system 'model' from a MagicDraw server project to a nodal system of tools and services that delivers to stakeholders at various levels of cognizance. This environment is centered around an 'authoritative source of truth', known as the Integrated Mission Model upon which several interfaces are integrated such that users throughout all regions of the model see data, commits, updates, and structural changes in real time for a better collaboration workspace throughout the project. In the current instance of this modeling network, the Integrated Mission model uses the individual MagicDraw models for the rocket team and the experiment team, where modelers commit up to the master model, and use synchronized checkouts and updates. This allows for better version control, user permission allocation, and support for distributed work efforts to improve collaborative efficiency. The current state and future state of the team effort is to appropriate the tools and libraries available to meet the desired use-cases requested by NSROC. Throughout the process of MBSE integration, the larger goal through MIAMI is to project high-level modeling concepts and implementations into useable and tractable deliverables for small missions. Additionally, through support and development of the model as applied to MaGIXS, re-usability is achieved so that the efficiency of modeling itself is improved. Â© 2019 IEEE.
DA  - 2019///
PY  - 2019
DO  - 10.1109/AERO.2019.8741966
VL  - 2019-March
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85068313607&doi=10.1109%2fAERO.2019.8741966&partnerID=40&md5=ce3db5876cddd6469461b4a96798da9f
DB  - Scopus
ER  - 

TY  - JOUR
TI  - Model-based systems engineering for life-sciences instrumentation development
AU  - Patou, F.
AU  - Dimaki, M.
AU  - Maier, A.
AU  - Svendsen, W.E.
AU  - Madsen, J.
T2  - Systems Engineering
AB  - Next-generation genome sequencing machines and Point-of-Care (PoC) in vitro diagnostics devices are precursors of an emerging class of Cyber-Physical Systems (CPS), one that harnesses biomolecular-scale mechanisms to enable novel âwet-technologyâ applications in medicine, biotechnology, and environmental science. Although many such applications exist, testifying the importance of innovative life-sciences instrumentation, recent events have highlighted the difficulties that designing organizations face in their attempt to guarantee safety, reliability, and performance of this special class of CPS. New regulations and increasing competition pressure innovators to rethink their design and engineering practices, and to better address the above challenges. The pace of innovation will be determined by how organizations manage to ensure the satisfaction of aforementioned constraints while also streamlining product development, maintaining high cost-efficiency and shortening time-to-market. Model-Based Systems Engineering provides a valuable framework for addressing these challenges. In this paper, we demonstrate that existing and readily available model-based development frameworks can be adopted early in the life-sciences instrumentation design process. Such frameworks are specifically helpful in describing and characterizing CPS including elements of a biological nature both at the architectural and performance level. We present the SysML model of a smartphone-based PoC diagnostics system designed for detecting a particular molecular marker. By modeling components and behaviors spanning across the biological, physical-nonbiological, and computational domains, we were able to characterize the important systemic relations involved in the specification of our system's Limit of Detection. Our results illustrate the suitability of such an approach and call for further work toward formalisms enabling the formal verification of systems including biomolecular components. Â© 2018 Wiley Periodicals, Inc.
DA  - 2019///
PY  - 2019
DO  - 10.1002/sys.21429
VL  - 22
IS  - 2
SP  - 98
EP  - 113
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85043686141&doi=10.1002%2fsys.21429&partnerID=40&md5=c77e4ea8de6912a18a6eaf60974e83c4
DB  - Scopus
KW  - SysML
KW  - model-based systems engineering
KW  - cyber-physical systems
KW  - life-sciences
KW  - model-based systems design
KW  - sensitivity analysis
ER  - 

TY  - CONF
TI  - The reuse of SysML behaviour models for creating product use cases in virtual reality
AU  - Mahboob, A.
AU  - Husung, S.
AU  - Weber, C.
AU  - Liebal, A.
AU  - KrÃ¶mker, H.
T2  - Proceedings of the International Conference on Engineering Design, ICED
AB  - An early evaluation of a product along with the consideration of life phase specific actor(s) and environment(s) can help greatly to gain an understanding of the product's behaviour and interactions. Virtual Reality (VR) can help designers to examine later life situations of a product by means of use case scenarios. However, preparing a VR-scene is still a time-consuming and cumbersome task. A model based approach that uses behaviour models of SysML to describe a VR-scene can reduce the preparation efforts. Such an approach is helpful if it allows the reuse of already described VR-scenes or their contents. This paper talks about the reusability of SysML behaviour models that constitute a VR-scene. This reusability can only be achieved by the generic definition of model interfaces. Therefore, a new modelling approach is presented to facilitate the reuse of SysML behaviour models to form different use cases of a product in VR. This approach also talks about the interface definitions and the management of variants of SysML models. The presented approach is elaborated by an example model that contains variants and uses instances to build different use cases. Â© 2019 Design Society. All rights reserved.
DA  - 2019///
PY  - 2019
DO  - 10.1017/dsi.2019.208
VL  - 2019-August
SP  - 2021
EP  - 2030
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85079770406&doi=10.1017%2fdsi.2019.208&partnerID=40&md5=1a928897fa718e849a1a5736d5ed3c49
DB  - Scopus
KW  - Product modelling
KW  - Models
KW  - SysML/MBSE
KW  - Systems Engineering (SE)
KW  - Virtual Engineering (VE)
KW  - Virtual Reality (VR)
ER  - 

TY  - CONF
TI  - Tradespace exploration for offshore O&G developments - A model based systems engineering approach
AU  - da Nova, A.L.
T2  - Proceedings - SPE Annual Technical Conference and Exhibition
AB  - The objective of this paper is to explore the benefits of using the Interactive Epoch-Era Analysis (IEEA) methodology for evaluating architectural changes in a trade space exploration study. In this paper a subsea tieback offshore Brazil will be used as reference case to investigate this premise from a full field development perspective. An automated concept exploration tool is employed. It applies meta-heuristics to generate different offshore facilities concepts with varying building blocks. The interaction between reservoir behavior and facilities design is accounted for, meaning pressure and temperature losses throughout the system are taken into account in each concept differently. These concepts are ranked in terms of economic performance indicators (NPV, IRR, etc.), and each run with a given set of boundary conditions covers what is called an Epoch. This process is iterated for the whole life of field with a set of different boundary conditions, such as commercial aspects ($/bbl, $/MMBtu, market demand) and/or technological maturity aspects (TRL, novel technological concepts), generating what is called an Era. The whole data set is then evaluated in an interactive platform thru the Humans-In-the-Loop (HIL) process. Model Based Systems Engineering (MBSE) is being employed successfully in other engineering fields outside the O&G context such as the aerospace and automotive industries. While digital tools have been identified as a potential key contributor to the future of O&G performance enhancement and further cost reductions, that is yet to be shown. This work intends to provide backing for that argument in one of the potential applications during early concept exploration phases by showing that quick high value assessments following an MBSE approach may be carried out, once significant effort has been put into proper development, verification and validation (V&V) of such digital tools. While integrated models for asset development have long been a subject of interest for O&G operators, the application of Systems Engineering concepts to it has not yet been thoroughly explored. Systems Engineering provides a rigorous and proven method of dealing with complex systems that is highly applicable to offshore field developments. MBSE is the current State of the Art for capital intensive projects such as space exploration spacecrafts and rovers. Learning from these successful use cases and applying these methodologies in the development of digital technologies may provide a new set of tools in the belt of O&G operators Facilities Engineers and alike. The study case presented shows MBSE's capability of capturing intrinsic non-linearities and specificities of each O&G field/location while ensuring project wide functional requirements are successfully met. Â© 2019, Society of Petroleum Engineers
DA  - 2019///
PY  - 2019
VL  - 2019-September
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85079200331&partnerID=40&md5=3341cb11eb7509c126c5beeca374baf8
DB  - Scopus
ER  - 

TY  - CONF
TI  - Can Wymore's Mathematical Framework Underpin SysML? An Initial Investigation of State Machines
AU  - Wach, P.
AU  - Salado, A.
T2  - Procedia Computer Science
AB  - Model-based system engineering (MBSE) has been suggested to have significant benefits to include early verification and validation cycles and predictive analytics. Multiple languages for modeling the engineering of systems exist; the most widely used being Systems Modeling Language (SysML). SysML is descriptive in nature, meaning it contextualizes the relationships in the system model. While this is useful, it lacks a rigorously established mathematical framework that would allow for understanding of emergent behavior, pattern recognition, vulnerability assessment, and a scientific approach to modeling of systems among other capabilities. An internally consistent mathematical framework for MBSE was proposed by Wayne Wymore in 1993, which may provide what is necessary to overcome the descriptive limitation of SysML. In this article, we perform an initial assessment of the feasibility of underpinning Wymore mathematical system construct to SysML by comparing Wymore's Moore-based state machines to SysML state machine diagrams. Specifically, we focus on the mathematical capturing of orthogonality through system coupling. Â© 2019 The Author(s).
DA  - 2019///
PY  - 2019
DO  - 10.1016/j.procs.2019.05.076
VL  - 153
SP  - 242
EP  - 249
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074969043&doi=10.1016%2fj.procs.2019.05.076&partnerID=40&md5=6878bc0890b9731f9ba59e3fcdcfbf30
DB  - Scopus
KW  - Model-Based Systems Engineering
KW  - System Modeling
KW  - Architecting Patterns
KW  - Emergent Behavior
KW  - Theory of System Engineering
ER  - 

TY  - CONF
TI  - Innovative digital manufacturing curriculum for industry 4.0
AU  - Promyoo, R.
AU  - Alai, S.
AU  - El-Mounayri, H.
AB  - Manufacturing companies across all major industries are facing serious challenges trying to competitively design and manage modern products, which are becoming increasingly complex multi-domain systems or "systems of systems". Model-based systems driven product development (or SDPD, for Systems Driven Product Development) has been proposed as a solution based on driving the product lifecycle from the systems requirements and tracing back performance to stakeholders' needs through a RFLP (Requirement, Functional, Logical, Physical) traceability process. The SDPD framework integrates system behavioral modeling with downstream product design and manufacturing process practices to support the verification/validation of the systems behavior as products progress through all phases of the lifecycle, as well as the optimization of trade-offs decisions by maintaining the cross-product digital twin and thread for global decision optimization in an efficient and effective way. We have developed an innovative digital manufacturing curriculum (designed around the SDPD paradigm) that is based on the digitalization of the SE (Systems Engineering) process through the integration of modelling and simulation continuum, in the form of Model-based Systems Engineering (MBSE), with Product lifecycle management (PLM). At the core of this curriculum is a shift of focus from theory to implementation and practice, through an applied synthesis of engineering fundamentals and systems engineering, that is driven by a state-of-the-art digital innovation platform for product (or system) development consisting of integrated software (digital) tools spanning the complete lifecycle. The curriculum consists of three key components, namely, modelling and simulation continuum, traceability, and digital thread. The curriculum provides a foundation for implementing the digital twin and supports the training of the next generation of engineers for Industry 4.0. The digital manufacturing (or SDPD) framework is applied in the design and optimization of an electric skateboard. The implementation demonstrates: 1) The benefits of digitalization/model-based engineering when developing complex multi-domain products or systems; 2) The ability of students to effectively complete a real-life modern product development within the time line of one semester; 3) The provision of MBSE curriculum for Engineering Education 4.0, characterized by key, integrated skills for the digital enterprise and Industry 4.0. Â© 2019 The Authors. Published by Elsevier B.V.
DA  - 2019///
PY  - 2019
DO  - 10.1016/j.promfg.2019.06.092
VL  - 34
SP  - 1043
EP  - 1050
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072384670&doi=10.1016%2fj.promfg.2019.06.092&partnerID=40&md5=ef53cbbed44690dbce6ff08f5cb6a36c
DB  - Scopus
KW  - Industry 4.0
KW  - Digital manufacturing
KW  - Digital thread
KW  - SDPD
ER  - 

TY  - CONF
TI  - Electric circuit- And wiring harness-aware behavioral simulation of model-based e/e-architectures at system level
AU  - Bucher, H.
AU  - Becker, J.
T2  - 4th IEEE International Symposium on Systems Engineering, ISSE 2018 - Proceedings
AB  - To cope with the rising complexity of automotive electric/electronic architectures (EEA), model-based development at system level is well-established and typically realized in architecture description languages (ADLs) and high-level tools. In this paper, we extend a previously developed approach for automated cross-domain simulation synthesis of model-based EEA descriptions enabling system-level evaluation by a behavioral specification layer. The key contributions of this work are modeling extensions applied to a state-of-the-art EEA ADL to refine specified behavior during synthesis with electric circuits including wiring harness details modeled at the hardware layer. Preliminary experiments show that the novel combination of quantization- And SPICE-based synthesized circuit simulation, conducted in a discrete-event manner and applied to a buck converter, a typical device in an automotive EEA, increases simulation efficiency up to a factor of 2.0 compared to other state-of-the-art tools while preserving accuracy. Finally, another example EEA hardware network, modeling the dynamic current consumption of an Electric Power Steering actuator, applied to a realistic vehicle topology model demonstrates the impact of wiring harness refinements. Â© 2018 IEEE.
DA  - 2018///
PY  - 2018
DO  - 10.1109/SysEng.2018.8544434
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85059982698&doi=10.1109%2fSysEng.2018.8544434&partnerID=40&md5=fa091757cfd9c54667afa064fb91794a
DB  - Scopus
KW  - MBSE
KW  - PREEvision
KW  - Ptolemy II
KW  - Automotive
KW  - Modeling and Simulation
KW  - ADL
KW  - E/E-Architectures
KW  - QSS
KW  - SPICE
KW  - Wiring Harness
ER  - 

TY  - CONF
TI  - Towards a model-based method for resilient critical infrastructure engineering how to model critical infrastructures and evaluate its resilience? : How to model critical infrastructures and evaluate its resilience?
AU  - Chapurlat, V.
AU  - Daclin, N.
AU  - Bonydandrieux, A.
AU  - Tixier, J.
AU  - Kamissoko, D.
AU  - Benaben, F.
AU  - Nastov, B.
T2  - 2018 13th System of Systems Engineering Conference, SoSE 2018
AB  - This article introduces a tool-equipped method for modeling and simulating behaviors of a Critical Infrastructure (CI) considered here as System of Systems, then evaluating its resilience. The method is based on modelling concepts, languages and tools from Model Based System Engineering (MBSE), System of Systems Engineering (SoSE) and non-functional Properties management domains. It proposes an evaluation technique to evaluate nonfunctional properties, and particularly here considered resilience for which a metric is proposed. Simulation and evaluation are done by using a Multi Agent Systems (MAS). Â© 2018 IEEE.
DA  - 2018///
PY  - 2018
DO  - 10.1109/SYSOSE.2018.8428773
SP  - 561
EP  - 567
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85052296093&doi=10.1109%2fSYSOSE.2018.8428773&partnerID=40&md5=40bcf090f2ea74b259c417f38a0cde62
DB  - Scopus
KW  - Model Based System Engineering
KW  - Non-functional property
KW  - Resilience
KW  - Resilience Evaluation
KW  - System of Systems Engineering
ER  - 

TY  - CHAP
TI  - Collaborative modelling and co-simulation for Transportation Cyber-Physical Systems
AU  - Fitzgerald, J.
AU  - Gamble, C.
AU  - Mansfield, M.
AU  - Ouy, J.
AU  - Palacin, R.
AU  - Pierce, K.
AU  - Larsen, P.G.
T2  - Transportation Cyber-Physical Systems
AB  - Model-based design techniques are key to the understanding and development of cyber-physical systems, and their benefits have been demonstrated within many of the disciplines relevant to transportation systems engineering. However, the challenges of transportation systems engineering necessitate breaking down the barriers between monodisciplinary models in order to understand holistically the consequences of technical and policy design decisions. In this chapter we review the need for multidisciplinary model-based systems engineering approaches in the transport sector and identify some emerging techniques enabling the linking of monodisciplinary semantically heterogeneous models. Simulations of such collaborative models (co-models) allow stakeholders to study system behaviour through the life cycle. Given the criticality of some transport applications, we also identify the need for advancing verification techniques in such multidisciplinary models. We illustrate our approach with an industry example in which the integration of diverse design models facilitates analysis of a new distributed rail interlocking system. Â© 2018 Elsevier Inc. All rights reserved.
DA  - 2018///
PY  - 2018
SP  - 51
EP  - 79
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85082257847&doi=10.1016%2fB978-0-12-814295-0.00003-4&partnerID=40&md5=61b677f446d882236d42bd2479b6d9d5
DB  - Scopus
KW  - Cyber-physical systems
KW  - Simulation
KW  - Model-based systems engineering
KW  - Collaborative modelling
KW  - Mobility as a service
KW  - OpenModelica
KW  - VDM
ER  - 

TY  - JOUR
TI  - An interactive model-driven simulation approach for dynamic behavior analysis in armed conflicts
AU  - Li, M.
AU  - Xu, J.
AU  - Yang, K.
AU  - Ge, B.
T2  - IEEE Access
AB  - As system dynamic behaviors are difficult to capture and analyze in model-based systems engineering, executable architectures, and simulation methods are widely studied to understand the behaviors that result from interactions amongst system components. However, most current studies often strive for analyzing independently specific aspects of architecture rather than capturing simultaneously the structural, behavioral, and performance related features, leading to failures of understanding the whole system from a global perspective. Accordingly, an interactive model-driven simulation that includes meta-model mapping and collaborative engine capabilities specific to DoDAF, Rhapsody, and STK simulations is first proposed to integrate the full advantages of different analytical tools. Then, a synergic engine is developed to provide synchronized control between time-driven and event-driven execution through the dynamic analysis process. Two executable techniques communicate with each other throughout the entire execution cycle to provide complementary necessary process information. The events occurred in the STK simulation scenario are used as the trigger of the executable state machine model that describes only the logical procedure of system behaviors without time- and space-related constraints. Last, an illustrative example of the Russian-Turkish Plane Incident is carried out to demonstrate the feasibility of the foregoing approach. Â© 2013 IEEE.
DA  - 2018///
PY  - 2018
DO  - 10.1109/ACCESS.2018.2852803
VL  - 6
SP  - 36744
EP  - 36756
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049478998&doi=10.1109%2fACCESS.2018.2852803&partnerID=40&md5=dc9354a1c10941b25c716c40acd9697f
DB  - Scopus
KW  - Model-based systems engineering
KW  - dynamic behavior analysis
KW  - interactive validation
KW  - multi-modeling
KW  - systems simulation
ER  - 

TY  - CONF
TI  - Model-based avionic systems testing for the airbus family
AU  - Peleska, J.
T2  - Proceedings of the European Test Workshop
AB  - This paper is about practical verification of Airbus avionic systems during type certification, with special focus on automated testing. The material is based on test and verification services performed for Airbus by a spinoff company of the University of Bremen, as well as on consultancy services delivered by our research group to Airbus and its suppliers. In the context of model-based systems engineering, the test automation approach is currently shifting from manual test procedure programming to model-based testing (MBT), where test cases are automatically identified in models describing the application behavior, allowing for automated test data calculation and test procedure generation. We describe the situations where today's MBT technology is already adequate to increase the effectiveness of automated testing in industry. In addition, we describe some open challenges arising from practical avionic systems testing, where satisfactory solutions still require some research effort. Â© 2018 IEEE.
DA  - 2018///
PY  - 2018
DO  - 10.1109/ETS.2018.8400703
VL  - 2018-May
SP  - 1
EP  - 10
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049958473&doi=10.1109%2fETS.2018.8400703&partnerID=40&md5=4155fd2315175ff98c8a7c2096d3f44a
DB  - Scopus
KW  - model-based systems engineering
KW  - model-based testing
KW  - avionic systems
KW  - test automation
ER  - 

TY  - CONF
TI  - Tool suite to support model based systems engineering-enabled system-of-systems analysis
AU  - Guariniello, C.
AU  - Fang, Z.
AU  - Davendralingam, N.
AU  - Marais, K.
AU  - Delaurentis, D.
T2  - IEEE Aerospace Conference Proceedings
AB  - The complexity of aerospace systems requirements, analysis, design, and architecture puts these systems among those that can benefit the most from a Model-Based Systems Engineering approach. However, though there has been progress in connecting domain-based model specifications and simulation experiments, there is still a gap between Model-Based Systems Engineering and the implementation and use of tools and metrics for modeling and analysis of complex aerospace systems. Here, we build upon our prior System-of-System research to illustrate how a System-of-Systems Analytic Work Bench can be used in combination with Model-Based Systems Engineering to enhance the analysis and design of systems architectures. The Analytic Work Bench is a suite of tools for analysis of the behavior of complex systems and for comparison and evaluation of systems architectures. The tools in the Analytic Work Bench adopt a representation of Systems-of-Systems architecture as a network of interdependent systems, which lends itself to connection with various Model-Based Systems Engineering representations, for example, Functional Block Diagrams and SysML activity and parametric diagrams. For each method in the Analytic Work Bench we illustrate appropriate linking to Model-Based Systems Engineering representations, explaining how the methods can acquire part of the required information for their models from traditional Model-Based Systems Engineering methodology. We then show how results from the tools in the Analytic Work Bench enhance Model-Based Systems Engineering with quantitative analysis of complex systems and architectures, including evaluation of performance, criticalities, robustness, resilience, and evolution of the systems at various levels of abstraction. Â© 2018 IEEE.
DA  - 2018///
PY  - 2018
DO  - 10.1109/AERO.2018.8396642
VL  - 2018-March
SP  - 1
EP  - 16
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049853146&doi=10.1109%2fAERO.2018.8396642&partnerID=40&md5=b64b6aaf8fe0f117b34346deef75a38a
DB  - Scopus
ER  - 

TY  - CONF
TI  - Assurance of model-based fault diagnosis
AU  - Nikora, A.
AU  - Srivastava, P.
AU  - Fesq, L.
AU  - Chung, S.
AU  - Kolcio, K.
T2  - IEEE Aerospace Conference Proceedings
AB  - Autonomy is an increasingly important technology for robotic scientific and commercial spacecraft. An important motivation for developing onboard autonomy is to enable quick response to dynamic environment and situations, including fault conditions that a spacecraft may encounter. The reliability of such autonomous capabilities depends on the quality of their knowledge of a spacecraft's health state. Model-based approaches to fault management, i.e. model-based fault diagnosis (MBFD), is one approach to continuously verify correct behavior in addition to diagnosing symptoms to estimate the spacecraft's health state. The proper functioning of MBFD is dependent on 1) the quality of the model that is analyzed and compared to the outputs of onboard sensors to estimate the system's health state, and 2) the correct functioning of the diagnosis engine that interrogates the model and compares its analysis to observed system behavior. We are currently developing Verification and Validation (V&V) approaches to provide the necessary confidence that MBFD systems are correctly estimating the health of on-board spacecraft components and systems. Our work is intended to narrow the gap between the rapidly maturing field of Model-Based System Engineering (including MBFD) and the less-well understood area of identifying and applying appropriate V&V techniques to MBFD. Our effort is investigating three areas: 1) developing V&V techniques for the diagnostic model, 2) developing V&V techniques for the diagnostic engine in isolation, and 3) developing V&V techniques for the diagnostic engine and model in combination. This paper describes the work we have completed in the first area. We describe our approach to selecting a system to be represented by a model, the approach to modeling the system, the verification approach we developed for the model, and the results of the verification activity. We conclude with a description of the work remaining in the last two areas, which will be addressed over the next two years. Â© 2018 IEEE.
DA  - 2018///
PY  - 2018
DO  - 10.1109/AERO.2018.8396550
VL  - 2018-March
SP  - 1
EP  - 14
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049850830&doi=10.1109%2fAERO.2018.8396550&partnerID=40&md5=47d1e0533b78e0e904eb58b885493557
DB  - Scopus
ER  - 

TY  - JOUR
TI  - Compositional approach to distributed system behavior modeling and formal validation of infrastructure operations with finite state automata: Application to viewpoint-driven verification of functionality in waterways
AU  - Austin, M.A.
AU  - Johnson, J.
T2  - Systems
AB  - Now that modern infrastructure systems are moving toward an increased use of automation in their day-to-day operations, there is an emerging need for new approaches to the formal analysis and validation of system functionality with respect to correctness of operations. This paper describes a compositional approach to the multi-level behavior modeling and formal validation of large-scale distributed system operations with hierarchies and networks of finite state automata. To avoid the well-known state explosion problem, we develop a new procedure for viewpoint-action-process traceability, thereby allowing parts of a behavior model not relevant to a specific decision to be removed from consideration. Key features of the methodology are illustrated through the development of behavior models and validation procedures for polite conversation between two individuals, and lockset-and system-level concerns for ships traversing a large-scale waterway system. Â© 2018, MDPI AG. All rights reserved.
DA  - 2018///
PY  - 2018
DO  - 10.3390/systems6010002
VL  - 6
IS  - 1
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083069356&doi=10.3390%2fsystems6010002&partnerID=40&md5=5af6e9fc33eca042ee68b0b175ae08b7
DB  - Scopus
KW  - Automation
KW  - Modeling
KW  - Model-based systems engineering
KW  - Formal verification
KW  - Behavior model
KW  - Distributed system
KW  - Infrastructure
KW  - Waterways operations
ER  - 

TY  - CONF
TI  - 19th International Conference on New Trends in Civil Aviation, NTCA 2017
T2  - New Trends in Civil Aviation - Proceedings of the 19th International Conference on New Trends in Civil Aviation, NTCA 2017
AB  - The proceedings contain 56 papers. The special focus in this conference is on New Trends in Civil Aviation. The topics include: Reaction time measurement device for flight crew testing; risk in air transport and its minimisation; communication in civil aviation companies through social networks; a configuration and optimization method for civil aircraft maintenance resources; Usability and credibility of Czech TAF reports; Operational requirement capture of civil aircraft based on the DoDAF scenario; identification of mitigations for the prevention of serious incidents in the Air Traffic Management in Europe; the most useless messages emitted by on-board secondary surveillance radar transponders; Principle and method of integrating reliability design in the MBSE process; adjustment of the KoÅ¡ice International Airport area for large-capacity aircraft; aircraft flight efficiency improvement; virtual simulation in training for enhancing safety in aviation; air transport and tourism indicators: Their information option; reaction to directional vibrations applied on a joystick; fatigue life analysis of aging aircraft based on previous service usage; the use of zigzag dialogue technique in improving the aviation staffsâ English language proficiency level; aircraft motion impact on secondary surveillance radar identification; pilot errors during landing manoeuvres and possible ways to reduce them; identification and evaluation of safety risks on aprons; airport audit component as an integral part of the safety data processing system; achieving behaviour detection in aviation security detection procedure; simulation model of the system of mass control; Recent changes of ICAO requirements on flight data recorders; quantitative pairwise comparison method for aeronautical performance factor; preface.
DA  - 2018///
PY  - 2018
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85122826504&partnerID=40&md5=13520ae5451e44464b9394f83a13fbf1
DB  - Scopus
ER  - 

TY  - CONF
TI  - Ontology based behavior verification for complex systems
AU  - Chen, R.
AU  - Liu, Y.
AU  - Ye, X.
T2  - Proceedings of the ASME Design Engineering Technical Conference
AB  - Model Based Systems Engineering (MBSE) is a mainstream methodology for the design of complex systems. Verification is a necessary part of MBSE. Although there is significant past research on verification, some deficiencies still exist, such as behavior requirement verification in the early design stage is lacking. In this study, behavior verification at the early design stage is presented. First, a unified modeling method based on SysML is proposed and some transformation rules are defined to ensure the correctness and definiteness of the ontology generation. Second, behavior requirements are classified and formalized as rules. Finally, a hierarchical behavior verification approach based on ontology reasoning is proposed. This approach is convenient for designers to use and no additional expertise is needed. A case study is provided to demonstrate its effectiveness. Copyright Â© 2018 ASME.
DA  - 2018///
PY  - 2018
DO  - 10.1115/DETC2018-85689
VL  - 1B-2018
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056896987&doi=10.1115%2fDETC2018-85689&partnerID=40&md5=11cd48f75086822e21bce2aac5ef7b4a
DB  - Scopus
ER  - 

TY  - CONF
TI  - The OpenSE Cookbook: A practical, recipe based collection of patterns, procedures, and best practices for executable systems engineering for the Thirty Meter Telescope
AU  - Karban, R.
AU  - Crawford, A.G.
AU  - Trancho, G.
AU  - Zamparelli, M.
AU  - Herzig, S.
AU  - Gomes, I.
AU  - Piette, M.
AU  - Brower, E.
T2  - Proceedings of SPIE - The International Society for Optical Engineering
AB  - The OpenSE Cookbook is an open-sourced collection of patterns, procedures, and best practices targeted for systems engineers who seek guidance on applying model-based and executable systems engineering (MBSE) using SysML. Its content has emerged from the system level modeling effort on the European Framework Program 6 (FP6) and the Thirty Meter Telescope (TMT). The TMT MBSE approach applied the Executable Systems Engineering Method (ESEM) and the open-source Engineering Environment (OpenMBEE) to specify, analyze, and verify requirements of TMT's Alignment and Phasing System (APS) and the Narrow Field Infrared Adaptive Optics System (NFIRAOS). In these applications, implicit dependencies are made explicit in a formal model through the use of ESEM, OpenMBEE, and SysML modeling constructs. The value proposition for applying this MBSE approach was to establish precise requirements and fine-grained traceability to system designs, and to verify key requirements beginning early in development. The integration of ESEM and the OpenMBEE tooling infrastructure (providing linked-data and web-operability) is a significant added value for the MBSE approach. The APS is responsible for the overall pre-adaptive optics wavefront quality, using starlight to measure wavefront errors and align the TMT optics. In the formally integrated and executable SysML model, simulations are performed to analyze the impact of changed requirements and verify specified constraints for various operational scenarios. The APS team used several modeling patterns to capture information such as the requirements, the operational scenarios, involved subsystems and their interaction points, the estimated or required time durations, and the mass and power consumption. Adaptive optics systems are designed to sense real-time atmospheric turbulence and correct the telescope's optical beam to remove its effect. The system model for the adaptive optics operational modes was developed to capture sequence behaviors and operational scenarios to run Monte-Carlo simulations for verifying acquisition time, observing efficiency, and operational behavior requirements. The model is particularly useful for investigating the effect of parallelization, identifying interface issues, and re-ordering sequence acquisition tasks. A former version of the Cookbook (which is now updated to MBSE challenges, goals, and lessons learned) included modeling guidelines and conventions for all system aspects, hierarchy levels, and views, which were developed during for the Active Phasing Experiment (APE), an opto-mechatronical system technology demonstrator for the Extremely Large Telescope (ELT). The Cookbook utilizes the above mentioned system models as real-world case-studies to demonstrate and document the applications of the recipes, providing also instructional examples and addressing the available tooling support. The Cookbook is accompanied by a number of SysML models and aodel libraries which facilitate model authoring and maintenance. The Cookbook covers the different aspects of Systems Engineering such as management of Requirements, Design (behavior and structure), Interfaces, Interdisciplinary Integration, Analysis, Trade Studies, and Technical Resources. This paper presents the background, motivation, architecture, and highlights some key content of the Cookbook. For example, interface management, error budget management, requirements verification, Monte Carlo driven analysis, and timing analysis of operational scenarios. The paper discusses how the capabilities of OpenMBEE contributed significantly to the adoption of executable systems engineering. Â© 2018 SPIE.
DA  - 2018///
PY  - 2018
DO  - 10.1117/12.2312281
VL  - 10705
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051237880&doi=10.1117%2f12.2312281&partnerID=40&md5=3c51cd19716d108d6258fa9991ef938b
DB  - Scopus
ER  - 

TY  - CONF
TI  - An approach: SysML-based automated completeness evaluation of the system requirements specification
AU  - Bankauskaite, J.
AU  - Morkevicius, A.
T2  - CEUR Workshop Proceedings
AB  - Model-Based Systems Engineering (MBSE) is systems engineering methodology that emphasizes the application of strict visual modeling principles. Models are created to deal with complexity, they allow to understand an area of interest or concern and provide unambiguous communication amongst interested sides. MBSE improves the quality of models of the system by providing the ability to evaluate it for completeness, correctness and consistency. MBSE is enabled by Systems Modeling Language (SysML) that supports the analysis, specification, design, verification, validation of complex systems and is used for modeling system requirements, behavior, structure, and parametrics. SysML is not a methodology, nor a method. In this case, it is necessary to choose a specific method in combination with system modeling language to comprehensively and accurately evaluate the completeness of system requirements specification (SRS). This opens up discussions of how to apply SysML provided infrastructure to evaluate the system requirements specification throughout the entire specifying process of SRS and achieve a high-quality of the SRS. In this paper, a new approach of how requirements specification, expressed with sufficient precision in SysML can be used for automated completeness evaluation. Â© 2018 CEUR-WS. All rights reserved.
DA  - 2018///
PY  - 2018
VL  - 2147
SP  - 66
EP  - 72
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051026119&partnerID=40&md5=41566804de81a09bf3dd986854ed8dbf
DB  - Scopus
KW  - SysML
KW  - MBSE
KW  - Requirements engineering
KW  - Completeness metrics
KW  - MBSE grid
KW  - System requirements specification
ER  - 

TY  - CONF
TI  - Rapid-Control-Prototyping as part of Model-Based Development of Heat Pump Dryers
AU  - HoltkÃ¶tter, J.
AU  - Michael, J.
AU  - Henke, C.
AU  - TrÃ¤chtler, A.
AU  - Bockholt, M.
AU  - MÃ¶hlenkamp, A.
AU  - Katter, M.
T2  - Procedia Manufacturing
AB  - Today's products are characterized by a highly interdisciplinary level. Likewise, household appliances are affected to this evolution. Mechanical structures, actuators, sensors and distributed control units can be found in modern tumble dryers, as well as in other mechatronic systems. The main challenge in the development process of such systems is to ensure the functionality which contains the proper interaction within the components of the tumble dryer. Mechanical knowledge, thermodynamical expertise, control-engineering competence and knowledge in software have to be managed and brought together. Apart from the interdisciplinary challenge, the rising functionality of modern tumble dryers leads to a further challenge, which appears in the development. Intelligent processes within their components have to be tested intensively, to ensure the benefit they promise. Time-consuming iterations during the development are inacceptable, to guarantee a specified start of production. To face the mentioned challenges in the development process, Miele already applies model-based systems engineering in its development [1]. Using simulation models enables Miele to analyze a lot of different and complex concepts of tumble dryers, to consider innovative and novel ways to dry clothes. As part of these Model-in-the-Loop simulations in early phases of the development, holistic system simulation-models are established. These models basically contain physical and control behavior. Immediately after different concepts are analyzed by the virtual systems, the concepts have to be validated. This work focusses the Rapid-Control-Prototyping (RCP) technology to validate novel innovative heating concepts for tumble dryers. Evaluation different concepts and the integration into home appliance processes is a formidable challenge, accepted in this paper. The RCP technology enables to test first component setups of heating systems, which are controlled by the simulation model of the controller. To set up the Rapid-Control-Prototyping scenario, a testing bench is built up, including equally the software-environment. The controller models are elaborated and simulated within the MathWorksÂ® environment, in detail SimulinkÂ®/StateflowÂ®. This model contains the logical procedure and several safety aspects of a drying process. The simulation model is subsequent integrated into the software environment of National Instruments, to connect the virtual controller with existing and prototypical hardware components of a prototypically heat pump dryer. Within the test bench and the software periphery, the integration of the approach into the development process of Miele is described in this work. Â© 2018 The Authors Published by Elsevier B.V.
DA  - 2018///
PY  - 2018
DO  - 10.1016/j.promfg.2018.06.033
VL  - 24
SP  - 235
EP  - 242
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050396552&doi=10.1016%2fj.promfg.2018.06.033&partnerID=40&md5=77d5508ac5d8af12ee896e78ea0b73a5
DB  - Scopus
KW  - Model-Based Systems Engineering
KW  - Simulation
KW  - Heat Pump
KW  - Laundry Dryer
KW  - Model-Based Development
KW  - Model-in-the-Loop
KW  - Object-oriented Modelling of Control Units
KW  - Rapid-Control-Prototyping
ER  - 

TY  - CONF
TI  - Design analysis method for multidisciplinary complex product using SysML
AU  - Liu, J.
AU  - Wang, S.
AU  - Fu, C.
T2  - MATEC Web of Conferences
AB  - In the design of multidisciplinary complex products, model-based systems engineering methods are widely used. However, the methodologies only contain only modeling order and simple analysis steps, and lack integrated design analysis methods supporting the whole process. In order to solve the problem, a conceptual design analysis method with integrating modern design methods has been proposed. First, based on the requirement analysis of the quantization matrix, the user's needs are quantitatively evaluated and translated to system requirements. Then, by the function decomposition of the function knowledge base, the total function is semi-automatically decomposed into the predefined atomic function. The function is matched into predefined structure through the behaviour layer using function-structure mapping based on the interface matching. Finally based on design structure matrix (DSM), the structure reorganization is completed. The process of analysis is implemented with SysML, and illustrated through an aircraft air conditioning system for the system validation. Â© The Authors, published by EDP Sciences, 2017.
DA  - 2017///
PY  - 2017
DO  - 10.1051/matecconf/201713900014
VL  - 139
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85039452565&doi=10.1051%2fmatecconf%2f201713900014&partnerID=40&md5=3934e2e4d376014122e9c83a6aedd103
DB  - Scopus
ER  - 

TY  - CONF
TI  - Model based verification of Electronic Control Unit (ECU) in high lift systems: Verification and validation
AU  - Farooq, U.
T2  - 2017 IEEE International Symposium on Systems Engineering, ISSE 2017 - Proceedings
AB  - Aircraft flight control systems are complex systems to verify, especially considering the amount of software and hardware involved. One such flight control system is the High Lift System which provides the fundamental aircraft function of increasing wing lift. UTC Aerospace Systems provides complete 'stick to surface' High Lift Actuation Systems for large commercial aircraft as well as smaller business jets. Verification of High Lift actuation Systems is a complex task, as each component has different performance, functionality and environmental requirements that need to be verified at an early stage in the lifecycle. This paper provides an overview of the method used to verify the interfaces and behaviour of a High Lift System Electronic Control Unit (ECU) with the greater system and aircraft through the use of models. The paper describes an approach to assess the functional behaviour of a system through simulation of failure conditions in a model and assessing the system response. In addition, the paper describes an approach undertaken to get visibility of the level of margin present in the Safety Monitors in the High Lift System ECU. Â© 2017 IEEE.
DA  - 2017///
PY  - 2017
DO  - 10.1109/SysEng.2017.8088318
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85040116728&doi=10.1109%2fSysEng.2017.8088318&partnerID=40&md5=de47647e6efd51319df2a2be6b3fac45
DB  - Scopus
KW  - Model Based Systems Engineering
KW  - Systems Engineering
KW  - Electronic Control Unit
KW  - High Lift System
KW  - Safety Monitors
KW  - Verification
ER  - 

TY  - JOUR
TI  - Model-Based Design and Simulation for an Aircraft Flight Control System
AU  - Chi, Y.
AU  - Shan, D.
AU  - Yan, Z.
AU  - Hei, P.
T2  - Xitong Fangzhen Xuebao / Journal of System Simulation
AB  - The process and method of model-based system engineering (MBSE) and its implementation in highly complex flight control system were clearly introduced. By comparing with traditional design methods, MBSE applied models as baseline instead of documents to handle the complexity of modern systems. The top-down workflow is more capable of ensuring coherence of design process, completeness of requirements verification and system testability. With the simulation of system model, the integrality of design and verification process, system function behavior simulation, implementation of the failure mode, effect analysis (FMEA) and the decreasing of system risk grade are well achieved. Â© 2017, The Editorial Board of Journal of System Simulation. All right reserved.
DA  - 2017///
PY  - 2017
DO  - 10.16182/j.issn1004731x.joss.201710041
VL  - 29
IS  - 10
SP  - 2556
EP  - 2566
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049753738&doi=10.16182%2fj.issn1004731x.joss.201710041&partnerID=40&md5=ae464d30f7b843ad18253bfe59eb3b9d
DB  - Scopus
KW  - Simulation
KW  - Model-based system engineering (MBSE)
KW  - Flight control system
KW  - Function analysis
ER  - 

TY  - CONF
TI  - Civil aircraft landing gear brake system development and evaluation using model based system engineering
AU  - Hai, X.
AU  - Zhang, S.
AU  - Xu, X.
T2  - Chinese Control Conference, CCC
AB  - Civil aircraft landing gear brake system development and evaluation using model based system engineering is proposed in this paper. This paper describes the process of civil aircraft landing gear brake system development by model based system engineering (MBSE), and implementation using IBM Rational Rhapsody, a SysML Language Software Environment. Use case, function flow, and state-machine of system are set up by model and to describe the requirement analysis and architecture design of highly complex system in civil aircraft. It demonstrates how to integrate a SysML modeling tool with Simulink to validate system specification. The integration enables users to validate the behavior by simulating the overall composition. Â© 2017 Technical Committee on Control Theory, CAA.
DA  - 2017///
PY  - 2017
DO  - 10.23919/ChiCC.2017.8028981
SP  - 10192
EP  - 10197
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85032219375&doi=10.23919%2fChiCC.2017.8028981&partnerID=40&md5=165ef98b60b1cdb49de7c1ccf3f7d807
DB  - Scopus
KW  - SysML
KW  - Simulation
KW  - Aircraft Landing Gear Brake System
KW  - Model-based System Engineering
ER  - 

TY  - CONF
TI  - Simulation-based verification of system requirements: An integrated solution
AU  - Aiello, F.
AU  - Garro, A.
AU  - Lemmens, Y.
AU  - Dutre, S.
T2  - Proceedings of the 2017 IEEE 14th International Conference on Networking, Sensing and Control, ICNSC 2017
AB  - Modeling of system properties deals with formally expressing constraints and requirements that influence and determine the structure and behavior of a system. System Property Models enable the verification of system properties through real or simulated experiments so as to support their evaluation during system design and their monitoring during system operation. However, several challenges should be addressed to effectively handle systems properties with the support of an integrated tool-chain. In this context, the paper presents the concrete experimentation of a promising solution that enables the formal modeling of requirements in Modelica and their subsequent simulation-based verification. The solution is applied to evaluate different design variants of a trailing-edge high-lift system. In particular, two ways to feed the requirements model are explored: in an early phase, data series are used to evaluate the requirements themselves; then a co-simulation of the requirements model with the 3D-model of the system is used to evaluate and identify what design variants best meet the system requirements. Â© 2017 IEEE.
DA  - 2017///
PY  - 2017
DO  - 10.1109/ICNSC.2017.8000180
SP  - 726
EP  - 731
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028518530&doi=10.1109%2fICNSC.2017.8000180&partnerID=40&md5=880393b8e525d9dcdf02cff40d7b4145
DB  - Scopus
KW  - Requirements Engineering
KW  - Model-Based Systems Engineering
KW  - Modelica
KW  - Formal Properties Modeling
KW  - Modeling and Simulation
KW  - System Verification
ER  - 

TY  - CONF
TI  - Systems architecture in failure analysis (Applications of architecture modeling to system failure analysis)
AU  - Rambikur, A.
AU  - Giammarco, K.
AU  - O'Halloran, B.
T2  - 2017 12th System of Systems Engineering Conference, SoSE 2017
AB  - This paper describes research into the applicability and value of architecture modeling techniques in conducting failure analysis on a system that is currently in service. Many Systems of Systems (SoS) currently in service did not include architecture modeling in their design and integration phases. In the absence of architectural models, knowledge of critical items, interfaces, and interactions, is difficult to learn, communicate, and maintain. Failure analysis, particularly for SoS, requires comprehensive system knowledge to produce accurate and timely results. This paper contributes specifically by summarizing existing model-based failure analysis research in terms of applicability to in-service systems and by focusing on Fault Tree Analysis (FTA) and Failure Modes Effects Analysis (FMEA). Much of the existing research in this area is either specific to design or development phases of system lifecycle, or presupposes that architectural models exist, and does not approach the topic from the perspective of value and practicality to an in-service system. Firstly, a general analysis of the commonality of principles, methods, and resources used for failure analysis with those of system architecture modeling is presented. The second contribution is a review of system and SoS modeling techniques and current research as applied to these failure analysis methods. The paper concludes with a summary of model applicability to FTA and FMEA, and a brief analysis of the studied methods, which will guide future research and evaluation of architecture modeling-based methods for failure analysis. Â© 2017 IEEE.
DA  - 2017///
PY  - 2017
DO  - 10.1109/SYSOSE.2017.7994966
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028573117&doi=10.1109%2fSYSOSE.2017.7994966&partnerID=40&md5=08efd1e075b158f768f9420805e139b8
DB  - Scopus
KW  - MBSE
KW  - FMEA
KW  - FTA
KW  - behavior modeling
KW  - failure analysis
KW  - failure modes
ER  - 

TY  - CONF
TI  - 2017 12th System of Systems Engineering Conference, SoSE 2017
T2  - 2017 12th System of Systems Engineering Conference, SoSE 2017
AB  - The proceedings contain 56 papers. The topics discussed include: developing the stakeholder requirements definition process - a journey of customization; cybersecurity considerations for an interconnected self driving car system of systems; an internetworked self-driving car system of systems; the internet of simulation: enabling agile model based systems engineering for cyber-physical systems; a conceptual model for analyzing information quality in system-of-systems; design and development of a low-cost autonomous surface vehicle; a design flow with integrated verification of requirements and faults in safety-critical systems; the internet of simulation: enabling agile model based systems engineering for cyber-physical systems; intelligent tag retrieval using deep learning of music information; incentivising the dissemination of truth versus fake news in social networks; quadruped implementation using parallel jointed leg architecture; comprehensive use case scenario generation: an approach for modeling system of systems behaviors; system of systems architecture feasibility analysis to support tradespace exploration; system of systems architecture feasibility analysis to support tradespace exploration; and development of robot operating system (ros) compatible open source quadcopter flight controller and interface.
DA  - 2017///
PY  - 2017
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028545628&partnerID=40&md5=7e61b7fb1d2d121251cde873ae60fd88
DB  - Scopus
ER  - 

TY  - CONF
TI  - Validation of a SysML based design for wireless sensor networks
AU  - Berrachedi, A.
AU  - Rahim, M.
AU  - Ioualalen, M.
AU  - Hammad, A.
T2  - AIP Conference Proceedings
AB  - When developing complex systems, the requirement for the verification of the systems' design is one of the main challenges. Wireless Sensor Networks (WSNs) are examples of such systems. We address the problem of how WSNs must be designed to fulfil the system requirements. Using the SysML Language, we propose a Model Based System Engineering (MBSE) specification and verification methodology for designing WSNs. This methodology uses SysML to describe the WSNs requirements, structure and behaviour. Then, it translates the SysML elements to an analytic model, specifically, to a Deterministic Stochastic Petri Net. The proposed approach allows to design WSNs and study their behaviors and their energy performances. Â© 2017 Author(s).
DA  - 2017///
PY  - 2017
DO  - 10.1063/1.4992500
VL  - 1863
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85026626750&doi=10.1063%2f1.4992500&partnerID=40&md5=5b053e4be256a885a3ccd986567065e6
DB  - Scopus
ER  - 

TY  - CONF
TI  - Developing a CubeSat Model-Based System Engineering (MBSE) reference model - Interim status #3
AU  - Kaslow, D.
AU  - Ayres, B.
AU  - Cahill, P.T.
AU  - Hart, L.
AU  - Yntema, R.
T2  - IEEE Aerospace Conference Proceedings
AB  - Model-Based Systems Engineering (MBSE) is the formalized application of modeling to support key systems engineering tasks for addressing requirements, design, analysis, validation, and verification. The International Council on Systems Engineering (INCOSE) established the MBSE Initiative to promote, advance, and institutionalize the practice of MBSE. As part of this effort, the INCOSE Space Systems Working Group (SSWG) has been investigating the applicability of MBSE for designing CubeSats. Our application of MBSE is enabled by the graphical modeling language Systems Modeling Language (SysML). SysML is used to model all aspects of a system either directly or through interfaces with other models. SysML diagrams are used to describe requirements, structures, behaviors, and parametrics from the system down to the component level. Requirements and design are contained in the model rather than in a series of independent engineering artifacts. The CubeSat Reference Model provides the logical architecture. The logical elements can be reused as a starting point for a mission-specific CubeSat logical architecture, followed by the physical architecture and the CubeSat development. Our prior work established the CubeSat Reference Model domain as consisting of the stakeholders, CubeSat enterprise, external environment, and external constraints, with the CubeSat enterprise consisting of space and ground segments. The CubeSat enterprise architecture has been refined to accommodate an external service providing CubeSat transportation to a launch site, integration into a launch vehicle, launch, and deployment. It has also been refined to accommodate a CubeSat project developing its own ground station or operating with an existing ground station that provides uplink and downlink services. Space and ground subsystems had been identified in our prior work. Use cases have now been established to further define the subsystem capabilities. It has been recognized that there are two modeling efforts. One is the SSWG developing a CubeSat Reference Model with its logical architecture. The other is a team eventually taking the CubeSat Reference Model as a basis for its mission-specific logical and physical architectures. Therefore, there are two categories of stakeholders. A stakeholder is any entity that has an interest in the system. The stakeholders for the CubeSat Reference Model include INCOSE, the Object Management Group (OMG), regulatory agencies, and the university teams that will be using the CubeSat Reference Model. We are exploring having NASA, NOAA, and FCC regulations contained within their own SysML models and connecting those models to our CubeSat Reference Model. The stakeholders for the mission-specific CubeSat model are those with an interest in the mission-specific CubeSat space and ground system. Typical stakeholders for a space and ground system include sponsor, user, operator, project manager, project engineer, developer, and tester. The list of stakeholders for a university CubeSat project is much smaller. We are collaborating with OMGs Space Domain Task Force (SDTF) to adopt the CubeSat Reference Model as an OMG specification. Â© 2017 IEEE.
DA  - 2017///
PY  - 2017
DO  - 10.1109/AERO.2017.7943691
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85021362868&doi=10.1109%2fAERO.2017.7943691&partnerID=40&md5=dccb95ea41993dde5ecdd2b8f5271d82
DB  - Scopus
ER  - 

TY  - CONF
TI  - Simulating SysML transportation models
AU  - Kotronis, C.
AU  - Tsadimas, A.
AU  - Kapos, G.-D.
AU  - Dalakas, V.
AU  - Nikolaidou, M.
AU  - Anagnostopoulos, D.
T2  - 2016 IEEE International Conference on Systems, Man, and Cybernetics, SMC 2016 - Conference Proceedings
AB  - Model-based Systems Engineering (MBSE) promises efficient and effective systems development, by providing integrated system model views and streamlining the transition between different development activities. For instance, system testing with simulation should be provided as a simple facility for the performance evaluation of complex systems. Transportation systems are complex and their behavior is determined by dynamic factors. However, research efforts define simulation models for transportation systems, using custom or simulation-specific notation. Additionally, model-based approaches for transportation systems emphasize peripheral issues, such as safety conditions and environmental impact. In this work, a framework that enables seamless performance evaluation of Railway Transportation System (RTS) models via simulation is proposed. The de facto standard for MBSE modeling, Systems Modeling Language (SysML), is selected as the modeling infrastructure, while other standards, like Query/View/Transformation (QVT), are used for the generation of executable simulation models. The latter can be simulated in Discrete Event System Specification (DEVS) simulators and the simulation results are returned in the RTS SysML model. Additionally, the application of the framework in the public RTS of Athens and the obtained simulation results are presented. Â© 2016 IEEE.
DA  - 2017///
PY  - 2017
DO  - 10.1109/SMC.2016.7844478
SP  - 1674
EP  - 1679
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015797062&doi=10.1109%2fSMC.2016.7844478&partnerID=40&md5=675ffccca5e62064dc4061e3982a43ba
DB  - Scopus
KW  - Model-based Engineering
KW  - SysML
KW  - DEVS
KW  - Simulation
KW  - MDA
KW  - QVT
KW  - Transportation Systems
ER  - 

TY  - CONF
TI  - Model based systems engineering applied to ESA's e.Deorbit mission
AU  - Wolahan, A.
AU  - Biesbroek, R.
AU  - Innocenti, L.
AU  - Serrano, S.M.
AU  - De Koning, H.-P.
T2  - Proceedings of the International Astronautical Congress, IAC
AB  - The design and development of a spacecraft system / mission is complex and typically involves inputs from a multi-disciplinary team of scientists, engineers and project managers. The information from these experts needs to be coordinated and communicated amongst all team members to avoid errors and confusion, and to ensure an effective design is derived. To aid in this process, technology is critical to support the experts, at both individual expert level (e.g. CAD tools) and at system level. Within ESA's Concurrent Design Facility (CDF), based at the European Space Research and Technology Centre (ESTEC) in The Netherlands, ESA has been implementing, at system level, a model-based approach for defining the physical architecture of the system for almost 20 years. In more recent years, within the majority of ESA programmes, a number of requirement tools have been used to help support the systems team. Through the development of new tools, it is now possible for the systems team to model many more aspects of the mission earlier in the lifecycle of a project, in fact starting at the conceptual design stage. However, implementing such an approach, such as deriving: the functional architecture, the concept of operations (CONOPS), the logical architecture, the behaviour of the system, the verification and validation of the design and possibly in the near future to also assist in project management. brings many new challenges for the systems team. This paper details the experiences of an ESA systems team who gradually implemented MBSE within a Phase A and Phase B1 contract. The systems team were supporting ESA's e.Deorbit mission, a mission to launch in 2024 that will remove a large space debris object from Low Earth Orbit (LEO).
DA  - 2017///
PY  - 2017
VL  - 14
SP  - 9625
EP  - 9631
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051444930&partnerID=40&md5=a5032b10c638190c7dfb75c5e5f4dd4c
DB  - Scopus
KW  - MBSE
KW  - Model based systems engineering
KW  - Active debris removal
KW  - Clean space
KW  - Concurrent engineering
ER  - 

TY  - CONF
TI  - Analyzing the operational behavior of the alignment and phasing system of the thirty meter telescope using SysML
AU  - Herzig, S.J.I.
AU  - Karban, R.
AU  - Trancho, G.
AU  - Dekens, F.G.
AU  - Jankevificius, N.
AU  - Troy, M.
T2  - Adaptive Optics for Extremely Large Telescopes, 2017 AO4ELT5
AB  - The Alignment and Phasing System (APS) of the Thirty Meter Telescope (TMT) is responsible for positioning individual segments of the primary mirror, as well as the secondary and tertiary mirrors. Given its essential role, understanding the as-specified behavior and verifying related requirements is vital to the correct operation of the TMT. Analyzing the behavior of APS is challenging due to the variety of interactions with other subsystems. This paper presents results from developing an integrated system model that captures the structure, behavior, and requirements in a formal modeling language to enable automated verification using appropriate solvers. Specifically, demonstrated and discussed are the results of applying a Systems Modeling Language (SysMLTM) based approach in which operational modes, behavior specifications and use case scenarios are used for the purpose of verifying requirements on timing, power, and pointing error through system-level simulation using a single, integrated model. Â©2017. All rights reserved.
DA  - 2017///
PY  - 2017
VL  - 2017-June
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049217630&partnerID=40&md5=b61fa6283e3cc4104311aef4158911ba
DB  - Scopus
KW  - Requirements
KW  - Model-based systems engineering
KW  - Modeling and simulation
KW  - Verification
KW  - TMT
ER  - 

TY  - CONF
TI  - Systems engineering for space exploration medical capabilities
AU  - Mindock, J.
AU  - Reilly, J.
AU  - Rubin, D.
AU  - Urbina, M.
AU  - Hailey, M.
AU  - Cerro, J.
AU  - Hanson, A.
AU  - McGuire, K.
AU  - Burba, T.
AU  - Middour, C.
AU  - Krihak, M.
AU  - Reyes, D.
T2  - AIAA SPACE and Astronautics Forum and Exposition, SPACE 2017
AB  - Human exploration missions that reach destinations beyond low Earth orbit, such as Mars, will present significant new challenges to crew health management. For the medical system, lack of consumable resupply, evacuation opportunities, and real-time ground support are key drivers toward greater autonomy. Recognition of the limited mission and vehicle resources available to carry out exploration missions motivates the Exploration Medical Capability (ExMC) Elementâs approach to enabling the necessary autonomy. The Elementâs work must integrate with the overall exploration mission and vehicle design efforts to successfully provide exploration medical capabilities. ExMC is applying systems engineering principles and practices to accomplish its goals. This paper discusses the structured and integrative approach that is guiding the medical system technical development. Assumptions for the required levels of care on exploration missions, medical system goals, and a Concept of Operations are early products that capture and clarify stakeholder expectations. Model-Based Systems Engineering techniques are then applied to define medical system behavior and architecture. Interfaces to other flight and ground systems, and within the medical system are identified and defined. Initial requirements and traceability are established, which sets the stage for identification of future technology development needs. An early approach for verification and validation, taking advantage of terrestrial and near-Earth exploration system analogs, is also defined to further guide system planning and development. Â© 2017, American Institute of Aeronautics and Astronautics Inc, AIAA. All rights reserved.
DA  - 2017///
PY  - 2017
DO  - 10.2514/6.2017-5236
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85047017933&doi=10.2514%2f6.2017-5236&partnerID=40&md5=db1bf912e39b69c1f5577f57773c496b
DB  - Scopus
ER  - 

TY  - CONF
TI  - Model based systems engineering (MBSE) approach for configurable product use-case scenarios in virtual environments
AU  - Mahboob, A.
AU  - Weber, C.
AU  - Husung, S.
AU  - Liebal, A.
AU  - KrÃ¶mker, H.
T2  - Proceedings of the International Conference on Engineering Design, ICED
AB  - Today, the designers have to deal with a great amount of uncertainties in the design process due to the lack of information about the product, its behaviour and the context in later life-phases (phase specific actors and surroundings). Current development primarily focuses on modelling of the product and its behaviour. The consideration of the product context also plays an important role. Virtual product development has the potential to support the designer by giving a blink into the later life-phases and context. It supports the early verification of product requirements and can also help to discover unseen requirements by means of use-case scenarios inside VR. A user and task oriented development method using VR can help to reduce the design uncertainties considerably. Therefore, in the paper a concept for user and task oriented model for product development in VR is presented. This model implements the actor(s) and the surrounding(s) along with the product inside VR using a MBSE approach. The standardised multidisciplinary modelling language the Systems Modelling Language (SysML) will be used for the modelling and an example will be presented as a proof of the presented concept.
DA  - 2017///
PY  - 2017
VL  - 3
SP  - 281
EP  - 290
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85029806992&partnerID=40&md5=e32c26d9e953a0b39c8ae8d59d796f2c
DB  - Scopus
KW  - Systems Engineering (SE)
KW  - Virtual Engineering (VE)
KW  - Design to X
KW  - Systems Modelling Language (SysML)
KW  - Use-case scenarios
ER  - 

TY  - CONF
TI  - Model-based engineering of autonomous systems using ontologies and metamodels
AU  - Bermejo-Alonso, J.
AU  - Hernandez, C.
AU  - Sanz, R.
T2  - ISSE 2016 - 2016 International Symposium on Systems Engineering - Proceedings Papers
AB  - Our research focuses on engineering processes for autonomous intelligent systems construction with a life-cycle holistic view, by means of a model-based framework. The conceptual core of the framework is ontologically-driven. Our ontological approach consists of two elements. The first one is a domain Ontology for Autonomous Systems (OASys) to capture the autonomous system structure, function and behaviour. The second element is an Ontology-driven Engineering Methodology (ODEM) to develop the target autonomous system. This methodology is based on Model-based Systems Engineering and produces models of the system as core assets. These models are used through the whole system life-cycle, from implementation or validation to operation and maintenance. On the application side, the ontological framework has been used to develop a metacontrol engineering technology for autonomous systems, the OM Engineering Process (OMEP), to improve their runtime adaptivity and resilience. OMEP has been applied to a mobile robot in the form of a metacontroller built on top of the robot's control architecture. It exploits a functional model of the robot (TOMASys Model) to reconfigure its control if required by the situation at runtime. The functional model is based on a metamodel about controller function and structure using concepts form the ontology. The metacontroller was developed using the ontology-driven methodology and a robot control reference architecture. Â© 2016 IEEE.
DA  - 2016///
PY  - 2016
DO  - 10.1109/SysEng.2016.7753185
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006371349&doi=10.1109%2fSysEng.2016.7753185&partnerID=40&md5=f25e69b8b6896db7f9b0e805543d9317
DB  - Scopus
ER  - 

TY  - CONF
TI  - Model-based off-nominal state isolation and detection system for autonomous fault management
AU  - Kolcio, K.
AU  - Fesq, L.
T2  - IEEE Aerospace Conference Proceedings
AB  - This paper presents a model-based fault management (FM) system designed to provide off-nominal state detection and isolation capabilities that are key components to assessing spacecraft state awareness. The ability to autonomously isolate spacecraft failures to component levels will enable faster and more targeted responses and recovery thereby reducing down time. The use of model-based systems and practices is being explored by the FM community as a viable approach to developing more capable, autonomous systems in order to meet mission objectives. Model-based systems can provide better fault identification than traditional methods of fault detection such as limit-checking. They also lend themselves to more straight-forward approaches to verification and validation. We have chosen a particular model-based technique called Constraint Suspension for autonomous fault detection and isolation that does not require explicit fault modeling. The system is composed of a diagnostic engine and nominal system models of the target application, for example sensors and actuators. Sensed data are propagated through models of nominal system behavior. Faults are diagnosed when inconsistencies arise between sensed and modeled data. Several benefits result from this choice. First, because knowledge of faulty behavior is not required, it is possible to detect unanticipated and unforeseen faults. In fact, anomalous, degraded, and failed states all can be detected. Second, the same models used for nominal analyses and operations can be re-used for fault management, saving development resources and time. Third, the core diagnostic engine algorithm is complete and requires no additions to accommodate a potentially growing number of faults over time resulting in a relatively compact software footprint. Related to the second and third points is that the core algorithm and, potentially, models can be reused from mission to mission. Finally, the system can be used early in the design phase as a tool for sensor placement analyses and model verification. Health information produced by the FM system can be used to make resource allocation and planning and scheduling decisions by ground operations or by other on-board autonomy agents. Autonomous fault detection, isolation, and recovery (FDIR) on board space vehicles will provide protection and increased mission availability and reliability. On the ground such systems enable lights-out monitoring as well as training and support for operators. This paper presents the development of fault detection and isolation algorithms and models. Application of the system to a spacecraft attitude control system is discussed. Finally we apply Model-Based Systems Engineering (MBSE) modeling patterns to the fault management system models as a way to facilitate the development of the models through the use of SysML. Â© 2016 IEEE.
DA  - 2016///
PY  - 2016
DO  - 10.1109/AERO.2016.7500793
VL  - 2016-June
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978532601&doi=10.1109%2fAERO.2016.7500793&partnerID=40&md5=90bcc494fd39a139fb2463bd53503a09
DB  - Scopus
ER  - 

TY  - CONF
TI  - Developing a CubeSat Model-Based System Engineering (MBSE) reference model - Interim status #2
AU  - Kaslow, D.
AU  - Hart, L.
AU  - Ayres, B.
AU  - Massa, C.
AU  - Chonoles, M.J.
AU  - Yntema, R.
AU  - Gasster, S.D.
AU  - Shiotani, B.
T2  - IEEE Aerospace Conference Proceedings
AB  - Model-Based Systems Engineering (MBSE) is a key practice to advance the systems engineering discipline. The International Council on Systems Engineering (INCOSE) established the MBSE Initiative to promote, advance, and institutionalize the practice of MBSE. As part of this effort, the INCOSE Space Systems Working Group (SSWG) Challenge Team has been investigating the applicability of MBSE for designing CubeSats since 2011. The goal of the team is to provide a sufficiently complete CubeSat Reference Model that can be adapted to any CubeSat project. The INCOSE Systems Engineering Vision 2020 defines MBSE as the formalized application of modeling to support system requirements, design, analysis, verification and validation activities beginning in the conceptual design phase and continuing throughout development and later life cycle phases. At the core of MBSE is the development of the system model that helps integrate other discipline-specific engineering models and simulations. The team has been creating this system model by capturing all aspects of a CubeSat project using the Systems Modeling Language (SysML), which is a graphical modeling language for systems engineering. SysML diagrams are used to describe requirements, structures, behaviors, and parametrics from the system level down to the component level. Requirements and design are contained in the model rather than in a series of independent engineering artifacts. In the past three phases of the project, the team has created the initial iteration of the reference model, applied it to the Radio Aurora Explorer (RAX) mission, executed simulations of system behaviors, interfaced with commercial simulation tools, and demonstrated how behaviors and constraint equations can be executed to perform operational trade studies. The modeling effort starts anew in this fourth phase. The CubeSat Reference Model starts with an identification of potential stakeholders. A stakeholder is any entity that has an interest in the system including sponsor, end user, procurer, supplier, and regulatory agencies. The each stakeholder's needs, objectives, constraints, and measures of effectiveness are incorporated in the model. Constraints are those items fixed and not subject to trades such as mission budget and schedule. One of the stakeholders is the Cal Poly CubeSat project. The Cal Poly CubeSat Specification has been populated into its own SysML model to enable the content of the specification to be related to the CubeSat Reference Model. The CubeSat mission enterprise consists of the space system, ground system, launch services, launch vehicle interface system, and communication services. Since the reference model is being developed by a team effort, there is an obligation to protect the investment of time and knowledge of each team member. There also needs to be a licensing environment that is conducive to a user organization supporting the development of and use of the model. There will be a license that allows for non-commercial use and prohibits incorporating the model or model features into a commercial product. Â© 2016 IEEE.
DA  - 2016///
PY  - 2016
DO  - 10.1109/AERO.2016.7500592
VL  - 2016-June
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978484063&doi=10.1109%2fAERO.2016.7500592&partnerID=40&md5=bee5734db78f836a2c4ff567ab034058
DB  - Scopus
ER  - 

TY  - CONF
TI  - A systems engineering approach for a dynamic co-simulation of a SysML tool and Matlab
AU  - Bank, D.
AU  - Blumrich, F.
AU  - Kress, P.
AU  - Stoferle, C.
T2  - 10th Annual International Systems Conference, SysCon 2016 - Proceedings
AB  - Industry is in a debate about the potential of the Systems Modeling Language (SysML). One part sees the advantage in development and project planning. The other part argues that the employment of SysML results in unnecessary additional work. The description of systems is still largely managed by the widely-used Microsoft Office software like Excel or PowerPoint. Indeed, this software has its limitations, especially when it comes to complex systems. Regarding SysML, the aim of this publication is to show the practical benefit and to open a further field of application. The cyclic coupling of SysML with a calculation software enables periodic data exchange in a flexible toolchain. This is a fundamental step, which leads to a new approach of systems development and domain collaboration. The SysML tool is intended to be the highest instance in the toolchain. A calculation software translates all the instructions coming from the highest instance into physical behavior, which can be simultaneously displayed with the aid of a visualization tool. As a significant result, an early validation of the behavior of a system under development can be performed with the aid of the overall model. In order to demonstrate this concept, a high-level simulation of a Â«Traffic Alert and Collision Avoidance System (TCAS)Â» serves as an example. Tests show that the SysML controlled TCAS simulation is a proper application to demonstrate the execution of important decisions. By means of the visualization, the TCAS behavior becomes transparent. The advantages of the dynamic co-simulation are particularly in the application of Model-Based Systems Engineering (MBSE) to heterogeneous complex systems. Â© 2016 IEEE.
DA  - 2016///
PY  - 2016
DO  - 10.1109/SYSCON.2016.7490534
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979210486&doi=10.1109%2fSYSCON.2016.7490534&partnerID=40&md5=903595d6f72e2e6b41e2160674529c93
DB  - Scopus
KW  - Dynamic Co-Simulation
KW  - Early Validation
KW  - Heterogeneous Complex Systems
KW  - Model-Based Systems Engineering (MBSE)
KW  - Systems Modeling Language (SysML)
KW  - Traffic Alert and Collision Avoidance System (TCAS)
KW  - Unmanned Aerial Vehicle (UAV)
ER  - 

TY  - JOUR
TI  - Model-based design and formal verification processes for automated waterway system operations
AU  - Petnga, L.
AU  - Austin, M.
T2  - Systems
AB  - Waterway and canal systems are particularly cost effective in the transport of bulk and containerized goods to support global trade. Yet, despite these benefits, they are among the most under-appreciated forms of transportation engineering systems. Looking ahead, the long-term view is not rosy. Failures, delays, incidents and accidents in aging waterway systems are doing little to attract the technical and economic assistance required for modernization and sustainability. In a step toward overcoming these challenges, this paper argues that programs for waterway and canal modernization and sustainability can benefit significantly from system thinking, supported by systems engineering techniques. We propose a multi-level multi-stage methodology for the model-based design, simulation and formal verification of automated waterway system operations. At the front-end of development, semi-formal modeling techniques are employed for the representation of project goals and scenarios, requirements and high-level models of behavior and structure. To assure the accuracy of engineering predictions and the correctness of operations, formal modeling techniques are used for the performance assessment and the formal verification of the correctness of functionality. The essential features of this methodology are highlighted in a case study examination of ship and lock-system behaviors in a two-stage lock system. Â© 2016 by the authors; licensee MDPI, Basel, Switzerland.
DA  - 2016///
PY  - 2016
DO  - 10.3390/systems4020023
VL  - 4
IS  - 2
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85111414419&doi=10.3390%2fsystems4020023&partnerID=40&md5=f118f8868cb31573c11cc2ccc58bef07
DB  - Scopus
KW  - Automation
KW  - Modeling
KW  - Model-based systems engineering
KW  - Formal verification
KW  - Canal systems
KW  - Waterways operation
ER  - 

TY  - JOUR
TI  - Model-based QoS evaluation and validation for embedded wireless sensor networks
AU  - Jager, S.
AU  - Jungebloud, T.
AU  - Maschotta, R.
AU  - Zimmermann, A.
T2  - IEEE Systems Journal
AB  - Wireless communication technologies have the potential to significantly reduce cabling cost, cut down on weight, and simplify the overall structure of industrial embedded systems. Potential risks and costs of a technological switch from wired interconnections toward a wireless solution are difficult to estimate, however. Model-based system engineering can help to reduce risk and cost and to increase the quality of the resulting system. However, standard network simulation software has to be adapted to the particular requirements of embedded wireless sensor networks such as system operational modes and phases, comprehensive means of configuration, and performance analysis; and models are not easy to validate in detail. This paper presents a highly scalable model for industrial embedded wireless networks to validate different system configurations and applies it to a system setup designed for avionic environments, using a software architectural framework for domain-specific simulation-based tools. The presented model is detailed enough to cover the significant behavior for quality of service requirements, including delays, throughput, reliability, energy consumption, and node lifetime. An additional important contribution is the direct connection between design tool and test bed or prototype system, allowing a seamless configuration of a hardware setup and an integration of measured behavior for a fine-grained validation of model and prototype. The application to a real-life system setup shows the benefits of the integrated approach. Â© 2007-2012 IEEE.
DA  - 2016///
PY  - 2016
DO  - 10.1109/JSYST.2014.2359690
VL  - 10
IS  - 2
SP  - 592
EP  - 603
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908042133&doi=10.1109%2fJSYST.2014.2359690&partnerID=40&md5=5a8e45db0d01eade0b1c87bfd32dad51
DB  - Scopus
KW  - simulation
KW  - validation
KW  - modeling
KW  - Energy consumption
KW  - quality of service (QoS)
KW  - wireless sensor networks (WSNs)
ER  - 

TY  - CONF
TI  - The U.S. National Airspace System: A model for verification and validation of complex, distributed systems-of-systems
AU  - Felder, W.N.
T2  - 16th AIAA Aviation Technology, Integration, and Operations Conference
AB  - This paper presents an integrated verification and validation framework for large, complex, distributed systems-of-systems. The framework is driven by features of such systems that make traditional forms of verification and validation problematic: notably the large number of potential system states, network interactions leading to emergent behavior, flexible cohorts of constituent systems, dynamically evolving requirements, rapidly changing technology, and non-traditional acquisition models. The framework offered is based on integrated management of verification and validation throughout the life cycle; application of model based system engineering principles; use of agile development techniques; continuous monitoring during system operation; and the integration of embedded test tools and formal methods as part of the continuous monitoring process. Examples of the integration of these best practices, and their successful use are given in the context of the U.S. National Airspace System. Â© 2016 American Institute of Aeronautics and Astronautics Inc, AIAA. All rights reserved.
DA  - 2016///
PY  - 2016
DO  - 10.2514/6.2016-3152
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051667837&doi=10.2514%2f6.2016-3152&partnerID=40&md5=2e31c549286cbb92f0322441e3fcd28d
DB  - Scopus
ER  - 

TY  - CONF
TI  - Process systems lifecycle management using a model based engineering approach
AU  - Hernandez, M.R.
AU  - Diaz, I.
AU  - Corbato, C.H.
AU  - Bravo, R.S.
AU  - Bermejo, J.
T2  - Computing and Systems Technology Division 2016 - Core Programming Area at the 2016 AIChE Annual Meeting
AB  - The motivation of this work is the constant evolution in industry. Nowadays we are in what is called the fourth industrial revolution (called Industry 4.0 or Connected Enterprise or Industrial Internet depending on the country or consortium). This revolution is being fostered in many countries to get a more competitive industry. Industry 4.0 target is to make more efficient and flexible plants, reduce times and costs of projects and products lifecycle. This revolution tries to converge the physical and the virtual plant, this is achieved by means of developing a digital model of the plant before constructing it. Industrial Internet tackles the current challenges of the industry: increased functionality in products, more connectivity, high interdisciplinarity, design for X, more product/process complexity, very software intensive, digitalization, needs of simulation and visualization, compliance with more demanding regulations, etc. It is an integrated engineering approach were different software tools are interconnected during the whole lifetime of the project, reducing inconsistencies and developing times. To fulfil the new requirements, traceability throughout the entire system lifecycle is needed, traceability from the initial requirements to the final physical product The concept of Model Based Systems Engineering provides methods to guide the cross-disciplinary, virtual product development process and to achieve the required traceability. Model Based Systems Engineering (MBSE) is a multi-disciplinary engineering paradigm propagating the use of models instead of documents to support analysis, specification, design and verification of the system being developed. Using models instead of documents, a discipline-neutral view of the system specification is created. The resulting coherent system model helps to understand and to overview the complexity of the developed system. System models are created by application of the Systems Modelling Language (SysML). This is a generalpurpose graphical modelling language for specifying, analysing, designing, and verifying complex systems that may include hardware, software, information, personnel, procedures, and facilities. In particular, the language provides graphical representations with a semantic foundation for modelling system requirements, behaviour, structure, and parametrics, which is used to integrate with other engineering analysis models. Under this framework models appear as a core component in every new development. Using a systems engineering methodology the developed model will be the one that guarantees the consistency and derives the different applications needed in every stage of the lifecycle, from simulation, to risk assessment or even documentation maintenance. The objective of our work is to develop a model of a process plant using SysML. This model will follow a systems engineering approach, starting from the requirements and will cover the whole lifecycle of the project. This model will be the core of the project allowing for the different applications. In this paper, we present first a Model Based Systems Engineering architecture for process systems and its relationship with the different stages of the lifecycle process. The core of the architecture is the neutral model of the system. This model is generated once the requirements are clearly stated. The generation of the general system model starts with the development of the functional model that refines the requirements to more specific functions that have to be fulfilled by the system. Once the functional model is built the behavioural and structural models are developed. These models reify the functions to physical equipment and to a topology and defines the behaviour of the components that achieve the functions. This general model has many parts that can be reusable and a model library is also constructed to store them. The final step is to build the specific models, these are models related to different views of the process and related with specific disciplines. The generic model is developed using SysML but as for specific models more efficient languages and tools exist it is necessary to do some model transformations from and back to SysML. Different applications are needed for the design and operation phases of the project (steady state simulation for process design, risk assessment tools, fault diagnosis, alarm management, etc.) After the architecture has been introduced we create a SysML model of a process plant (the production of ethylbenzene) starting with the requirements (package diagram). This model includes the behavioural (block definition and activity diagrams) and structural (internal and block definition diagrams) aspects of the model. Once the model is created an automatic transformation (bidirectional) from it to some applications, where specific and more efficient environments for those purposes exist, is illustrated. The applications addressed in this work are: -Process design. Transformation to a steady state model used in a process simulation environment, in this case Aspen Plus. This model is used for plant design calculating process operating conditions, equipment design and different production routes. -Risk assessment. Transformation to a functional model suited to perform risk analysis (HAZOP like analysis). In this case the transformation is made to D-higraphs, a graphical functional language. -Process optimization. Automatic generation of the optimization objective and constraints. In this case we do it using Matlab. The model used in the optimization will be the one generated for Aspen Plus that can be embedded in Matlab. In summary, this work shows some of the potential of having models at design time. Models that are neutral and that can be used for different applications. Current industry trends look for models that generate virtual plants that can be "operated" and that allow to discover design mistakes in this early design phase. Thus providing, when constructed, more robust, consistent and efficient plants.
DA  - 2016///
PY  - 2016
SP  - 242
EP  - 244
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85019117829&partnerID=40&md5=985b6ca606da1cec6696d20ebd621fa5
DB  - Scopus
ER  - 

TY  - CONF
TI  - Launch: A model based systems engineering platform for rapid collaboration on nasa launch-flight system integration launch
AU  - Singh-Derewa, C.
AU  - Srivastava, P.
T2  - Proceedings of the International Astronautical Congress, IAC
AB  - The process of launching a spacecraft safely into orbit or beyond is complex. The flight system design must iterate with the launch system to ensure the numerous analyses and tests are completed successfully and that the Launch-Flight system will function in unison. The launch architecture, product development and operations systems must work together to ensure resourceful, timely and cost-effective products. The current process of data analysis and integration relies heavily on traditional documents and technical interchange meetings. The Launch Systems Engineering team at NASA's Jet Propulsion Laboratory has developed a unified platform for launch systems data exchange using model-based systems engineering (MBSE). MBSE is a systems engineering methodology which simplifies complex systems by breaking down the architecture into elements and interconnecting them with relationships that define both function and behavior. The LSE group has created a model of launch vehicles, launch sites and other launch-related information such as functions and behaviors for teams involved in mission planning, flight system design and mission implementation phases of project to utilize. Users are able to explore and connect to data sets, view technical details about their components, compare capabilities and features, and link that data dynamically to their projects to perform further parametric analysis, design and operations. The Open MBEE (Model Based Engineering Environment) architecture provides a complete open source tool set in the Engineering Modeling System (EMS). The framework features a backend model-management tool and a front-end web-based interface allowing engineers to access and connect to repository data. Open MBEE combines the design metrics of Systems Modelling Language (SysML) with the graphical documentation created using EMS. Coupling extensive information related to mission parameters and launch systems configurations from launch expertise at JPL with supplier provided data, systems engineers have developed a comprehensive database of launch systems that includes the Space Launch System (SLS), Evolved Expendable Launch Vehicles (EELV), Venture class rockets and even secondary launch systems. LSE developers have built custom software extensions to integrate these components in an end-to-end launch systems constraints modeling platform. These constraints enable automatic property based requirement generation and verification and validation sequences. The Launch platform enables system engineers improved development and execution of the integration tasks required during the formulation and execution of a mission.
DA  - 2016///
PY  - 2016
VL  - 0
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016467598&partnerID=40&md5=0d08ae216d376709ed5af49166b105b8
DB  - Scopus
ER  - 

TY  - CONF
TI  - Traceability of information flow requirements in cyber-physical systems engineering
AU  - Gerking, C.
T2  - CEUR Workshop Proceedings
AB  - The secure information ow between a cyber-physical system and its environment has evolved into a critical factor. To comply with security regulations, engineers of cyber-physical systems need to trace information ow requirements from their specification to the software design. However, due to the interdisciplinary engineering of cyber-physical systems and their inherent real-Time behavior, requirements specified at a discipline-spanning level are hard to verify at the discipline-specific software design level. In this PhD project, we address this problem based on a specification of information ow requirements in model-based systems engineering. We provide a technique to verify if the real-Time behavior of software design models fulfills corresponding information ow properties, and trace verification results back to the initial requirements. By establishing traceability, we enable engineers to ensure the regulatory compliance of cyber-physical systems. We intend to validate the applicability of our approach in the scope of an Industrial Internet scenario.
DA  - 2016///
PY  - 2016
VL  - 1735
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006162234&partnerID=40&md5=13286b7f54d3ffe539678350fccdeba8
DB  - Scopus
KW  - Systems engineering
KW  - Information ow security
KW  - Requirements traceability
ER  - 

TY  - CONF
TI  - Creating system engineering products with executable models in a model-based engineering environment
AU  - Karban, R.
AU  - Dekens, F.G.
AU  - Herzig, S.
AU  - Elaasar, M.
AU  - Jankevicius, N.
T2  - Proceedings of SPIE - The International Society for Optical Engineering
AB  - Applying systems engineering across the life-cycle results in a number of products built from interdependent sources of information using different kinds of system level analysis. This paper focuses on leveraging the Executable System Engineering Method (ESEM) [1] [2], which automates requirements verification (e.g. power and mass budget margins and duration analysis of operational modes) using executable SysML [3] models. The particular value proposition is to integrate requirements, and executable behavior and performance models for certain types of system level analysis. The models are created with modeling patterns that involve structural, behavioral and parametric diagrams, and are managed by an open source Model Based Engineering Environment (named OpenMBEE [4]). This paper demonstrates how the ESEM is applied in conjunction with OpenMBEE to create key engineering products (e.g. operational concept document) for the Alignment and Phasing System (APS) within the Thirty Meter Telescope (TMT) project [5], which is under development by the TMT International Observatory (TIO) [5]. Â© 2016 SPIE.
DA  - 2016///
PY  - 2016
DO  - 10.1117/12.2232785
VL  - 9911
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992593522&doi=10.1117%2f12.2232785&partnerID=40&md5=5a15e7ccaf5925f16b99937792d59bd5
DB  - Scopus
KW  - SysML
KW  - MBSE
KW  - Requirements
KW  - Verification
ER  - 

TY  - CONF
TI  - A simulating method of dynamic inter-connection between models
AU  - Hong, R.
AU  - Xiong, Z.
AU  - Zhou, Q.
T2  - AIAA Modeling and Simulation Technologies Conference, 2016
AB  - This paper is mainly about system verification in model based system engineering. The typical design tools in system engineering as Rhapsody and scenario modeling tool as STK are both introduced and discussed. After analyzing the characteristics of Rhapsody in requirements analysis and functions modeling, and STK in scenario modeling and animation, this paper proposed a method of system simulation and verification in System Engineering. The proposed method starts with scenario modeling in STK and then integrating Rhapsody behavior models to STK scenario models. The proposed method integrates the two kinds of models in system development by interconnection and communication. The scenario models show the requirements in animation which give the users and engineers a more direct way. Rhapsody models take the scenario models as the basis and then simulate the structures and behaviors of the object systems. In this way, the two kinds of models keep consistency at the fisrt step. Then, the scenario models of STK can send events to Rhapsody models during the time of animation. The scenario models of STK sending events as simulator to trigger the statecharts of Rhapsody by causing status transfer in model execution. Meanwhile, Rhapsody models being executed are used as logical supporter to STK scenario models. If the status transfer of Rhapsody statechart showing incorrect, it means the scenario models of STK may be also inappropriate. But it is not easy to find the inappropriateness of scenarios by STK model itself. The proposed way of simulating helps users find the incorrectness in modeling as early as possible. By using this method, the Rhapsody models and the STK models verify each other and promote both the correctness and preciseness of system models effectively. Â© 2016 by the American Institute of Aeronautics and Astronautics, Inc. All rights reserved.
DA  - 2016///
PY  - 2016
DO  - 10.2514/6.2016-4003
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84985991350&doi=10.2514%2f6.2016-4003&partnerID=40&md5=1fe1d6bf72f276ddb5d974b9ef66023b
DB  - Scopus
ER  - 

TY  - JOUR
TI  - A Model-Based Toolchain to Verify Spatial Behavior of Cyber-Physical Systems
AU  - Herrmann, P.
AU  - Blech, J.O.
AU  - Han, F.
AU  - Schmidt, H.
T2  - International Journal of Web Services Research
AB  - A method preserving cyber-physical systems to operate safely in a joint physical space is presented. It comprises the model-based development of the control software and simulators for the continuous physical environment as well as proving the models for spatial and real-time properties. The corresponding toolchain is based on the model-based engineering tool Reactive Blocks and the spatial model checker BeSpaceD. The real-time constraints to be kept by the controller are proven using the model checker UPPAAL. Â© 2016, IGI Global.
DA  - 2016///
PY  - 2016
DO  - 10.4018/IJWSR.2016010103
VL  - 13
IS  - 1
SP  - 40
EP  - 52
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957098123&doi=10.4018%2fIJWSR.2016010103&partnerID=40&md5=690c0cebf53ae15533e07559dda0c5ae
DB  - Scopus
KW  - Model-Based System Engineering
KW  - BeSpaceD
KW  - Reactive Blocks
KW  - Real-Time Properties
KW  - Spatial Behavior Modeling and Verification
ER  - 

TY  - CONF
TI  - Object-oriented model validation for single bowden power window system development
AU  - Patalano, S.
AU  - Vitolo, F.
AU  - Lanzotti, A.
T2  - 1st IEEE International Symposium on Systems Engineering, ISSE 2015 - Proceedings
AB  - The paper deals with automotive power window systems and, in particular, tackles the problem of validating the object-oriented model of a single bowden system, to be used within a Model-Based System Engineering (MBSE) approach. Therefore, the paper tackles the problem of increasing accuracy of object-oriented models by defining model refinements i.e. by identifying objects whose modelling has to be improved. Firstly, the role of object-oriented modelling and the main characteristics of the power window system are summarized. Then, the object-oriented model of an automotive single bowden power window system is presented. Finally, the experimental phase, performed to characterize the behavior of the real system is summarised and the validation of simulation model, as well as the identification of model refinement, are accomplished. Â© 2015 IEEE.
DA  - 2015///
PY  - 2015
DO  - 10.1109/SysEng.2015.7302748
SP  - 150
EP  - 154
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954542827&doi=10.1109%2fSysEng.2015.7302748&partnerID=40&md5=a7ddc286a40a7edc8404abb9643b2965
DB  - Scopus
KW  - mechatronic systems
KW  - model validation
KW  - object-oriented modeling
KW  - single bowden power window system
ER  - 

TY  - CONF
TI  - Modeling of system properties: Research challenges and promising solutions
AU  - Garro, A.
AU  - Tundis, A.
T2  - 1st IEEE International Symposium on Systems Engineering, ISSE 2015 - Proceedings
AB  - Modeling of system properties deals with formally expressing constraints and requirements that influence and determine the structure and behavior of a system. System Property Models enable the verification of system properties through real or simulated experiments so as to support their evaluation during system design and their monitoring during system operation. However, several research challenges should be addressed to effectively handle systems properties, ranging from conceptual properties representation to tracing and verification. The paper aims at discussing these main challenges and presenting some promising solutions by focusing on those resulting from recent Systems Engineering research efforts. Â© 2015 IEEE.
DA  - 2015///
PY  - 2015
DO  - 10.1109/SysEng.2015.7302777
SP  - 324
EP  - 331
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954490432&doi=10.1109%2fSysEng.2015.7302777&partnerID=40&md5=79659a242cb0806a5ec4d2d835c7bcb0
DB  - Scopus
KW  - Model-Based Systems Engineering
KW  - Binding and Automated Model Composition
KW  - System Properties Modeling
KW  - Tracing and Verification
ER  - 

TY  - CONF
TI  - System architecture optimization with runtime reconfiguration of simulation models
AU  - Wichmann, A.
AU  - JÃ¤ger, S.
AU  - Jungebloud, T.
AU  - Maschotta, R.
AU  - Zimmermann, A.
T2  - 9th Annual IEEE International Systems Conference, SysCon 2015 - Proceedings
AB  - The development of complex systems often leads to delays in integration and roll-out, massive cost overruns, and in many cases to sub-optimal solutions regarding system performance and robustness. In order to overcome these issues, model-based systems engineering methodologies can be employed. The application of simulation models in addition to system specifications increase the engineers' understanding of complex system behavior. The approach also allows the detection of incomplete or inconsistent functional requirements as well as other design failures. With increasing complexity of system models it is necessary to optimize parameters to achieve a resource-efficient system. Indirect simulation is a well-known tool for this task, and there are numerous heuristics that can control the search in the parameter space. However, this task is much harder if the design parameters are not only numerical values from a predefined interval. In many cases the design issue (and optimization task) involves decisions about how a system architecture should be composed out of modules and interfaces / connections. In such cases, already the generation of feasible design variants may be hard to automate as a part of an optimization algorithm. Domainspecific knowledge and technical constraints have to be taken into account, and the non-numerical parameters have to be encoded such that they become accessible by the controlling heuristic. This paper presents a model-based methodology to optimize the architecture of a wireless sensor network that is designed for future avionic applications. We show how dynamically reconfigurable simulation models can be used to simplify an optimization of architecture or topology of a system. The system modeling and design tool MLDesigner is used for model implementation and simulations. In addition to that, the heuristic optimization process is described in such a model, thus controlling on a meta level the actual optimization. It can be changed or adapted easily, because it is not programmed but described with a high-level model. Â© 2015 IEEE.
DA  - 2015///
PY  - 2015
DO  - 10.1109/SYSCON.2015.7116826
SP  - 660
EP  - 667
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941309246&doi=10.1109%2fSYSCON.2015.7116826&partnerID=40&md5=88a41039a18113d52a7e5e562662fbe2
DB  - Scopus
KW  - discrete event simulation
KW  - global optimization
KW  - model reconfiguration
KW  - Performance evaluation
KW  - probabilistic metaheuristic
KW  - simulated annealing
ER  - 

TY  - JOUR
TI  - On the reliability analysis of systems and SoS: The RAMSAS method and related extensions
AU  - Garro, A.
AU  - Tundis, A.
T2  - IEEE Systems Journal
AB  - This paper aims at contributing to fill the lack of methods specifically conceived for addressing the analysis and verification of nonfunctional requirements. In particular, the attention is focused on system reliability, which is a key requirement to be satisfied particularly for mission-critical systems where system failures could cause even human losses. To this end, this paper presents an up-to-date version of RAMSAS, which is a recently proposed model-based method for the reliability analysis of systems through simulation. The present version of RAMSAS is the result of an intensive experimentation phase in several application domains (avionics, automotive, and satellite) that allowed for the improvement of the effectiveness of the method, particularly in the modeling of both the intended and dysfunctional system behaviors. Moreover, this paper discusses the specific issues that arise when moving from the reliability analysis of systems to that of systems of systems (SoSs) and proposes a possible extension of the RAMSAS method (called RAMSoS) that is able to address the identified issues and thus support the reliability analysis of SoSs through simulation. Â© 2015 IEEE.
DA  - 2015///
PY  - 2015
DO  - 10.1109/JSYST.2014.2321617
VL  - 9
IS  - 1
SP  - 232
EP  - 241
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028163347&doi=10.1109%2fJSYST.2014.2321617&partnerID=40&md5=7057b732edfb4f1b13d7e78a0083c6a3
DB  - Scopus
KW  - model-based systems engineering
KW  - reliability analysis
KW  - Agent-based modeling and simulation
KW  - dysfunctional behavior modeling
ER  - 

TY  - JOUR
TI  - Implementation of Human System Integration (HSI) and âNon-functional Characteristicsâ into the Systems Engineering Lifecycle - A Practical Approach at Airbus Defence and Space
AU  - Sharples, R.A.
T2  - Procedia Manufacturing
AB  - This paper provides an overview of the process, practices, developments and synergies that Airbus Defence and Space are implementing Human System Integration (HSI) into the Continuous Engineering /Model Based System Engineering (MBSE) throughout the company. The paper highlights these developments, which include internal research programmes, European Union funded research projects, Airbus internal Synergy project. This research includes an EU funded 3 year project HoliDes - Holistic Human Factors and System Design of Adaptive Cooperative Human Machine Systems. Continuous engineering within Airbus has included various corporate and divisional Synergy programs and lean and agile initiatives. As our business is defined by Multiple Portfolio products, supplied from multi countries, the MBSE process had to speed up delivery and reduce overall cost. The Airbus process models needed significant amendment due to products supplied via multiple business lines throughout the company. This problem is exacerbated by varying requirements of four national defence requirements, who impose restrictions on the use of Architectural Frameworks (NAF/MODAF/DODAF) and supporting tools. Our Human System Integration (HSI) is continuing from the initial Human View Architectural Framework research to include the nine HSI domains. These nine domains overlap with our current Human factors research and will now allow us to pull in our Non-functional work into our Systems Engineering lifecycle. This paper highlights the research projects Airbus Space and Defence are incorporating in to our overall strategy, these include internal R&D funding and European Union funded research programs. These research projects have highlighted several areas of interest these include, stochastic modelling with respect to Human System Integration and Human views, verification and analysis of emergent behaviour and non-functional properties, which conforms with our own work on non-functional requirements and finally the use of System of System Formal Methods for parts of the lifecycle. Â© 2015 The Authors
DA  - 2015///
PY  - 2015
DO  - 10.1016/j.promfg.2015.07.232
VL  - 3
SP  - 1896
EP  - 1902
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010008949&doi=10.1016%2fj.promfg.2015.07.232&partnerID=40&md5=a53f70902b1ab4c9695d4b5099168456
DB  - Scopus
KW  - Architecture frameworks
KW  - Human Factors
KW  - Human System Integration (HSI)
KW  - Human views
KW  - Model Based System Engineering (MBSE)
KW  - Non functional charactertics
KW  - Systems Of Systems (SoS)
ER  - 

TY  - CONF
TI  - Support of the system integration with automatically generated behaviour models
AU  - KÃ¶Ãler, J.
AU  - Paetzold, K.
T2  - Proceedings of the International Conference on Engineering Design, ICED
AB  - The development of technical systems is faced with an increasing complexity. A reason for this is the growing number of domains working together for a final product. Thereby the system integration is getting more important for companies while the development of single components is often outsourced to other companies. This leads to the need of detailed interfaces descriptions between these components to support the product development process and the data and information flows. In this paper the initial steps to automatically generated behavioural simulation models are presented. The fundament for the generation of these models is model-based system engineering (MBSE). The available diagrams of MBSE are used to generate the main structure of a behaviour model. In addition partial models have been developed describing the behaviour of machine elements. Combining the MBSE models with the partial behaviour models allows the generation of a behaviour model of a complete system. A first validation of the concept of automatically generated models is presented. Based on simple MBSE and CAD models of a gear unit, different behaviour models are generated for the use with Matlab/Simulink.
DA  - 2015///
PY  - 2015
VL  - 11
SP  - 21
EP  - 30
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979760363&partnerID=40&md5=e8a502cad2e8966022f01335b4d9d085
DB  - Scopus
KW  - Model-based systems engineering (MBSE)
KW  - Complexity
KW  - Functional modelling
KW  - Interfaces
KW  - Systems engineering (SE)
ER  - 

TY  - CONF
TI  - Towards Security as a Service (SecaaS): On the modeling of Security Services for Cloud Computing
AU  - Furfaro, A.
AU  - Garro, A.
AU  - Tundis, A.
T2  - Proceedings - International Carnahan Conference on Security Technology
AB  - The security of software services accessible via the Internet has always been a crosscutting non-functional requirement of uttermost importance. The recent advent of the Cloud Computing paradigm and its wide diffusion has given birth to new challenges towards the securing of existing Cloud services, by properly accounting the issues related to their delivery models and their usage patterns, and has opened the way to the new concept of Security as a Service(SecaaS), i.e. the ability of developing reusable software services which can be composed with standard Cloud services in order to offer them the suitable security features. In this context, there is a strong need for methods and tools for the modeling of security concerns, as well as for evaluation techniques, for supporting both the comparison of different design choices and the analysis of their impact on the behavior of new services before their actual realization. This paper proposes a meta-model for supporting the modeling of Security Services in a Cloud Computing environment as well as an approach for guiding the identification and the integration of security services within the standard Cloud delivery models. The proposal is exemplified through a case study. Â© 2014 IEEE.
DA  - 2014///
PY  - 2014
DO  - 10.1109/CCST.2014.6986995
VL  - 2014-October
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84931030035&doi=10.1109%2fCCST.2014.6986995&partnerID=40&md5=5ef78b308eaa83d18433823c436ea97b
DB  - Scopus
KW  - Model-Based Systems Engineering
KW  - Modeling and Simulation
KW  - Cloud Computing
KW  - Cyber-Security
KW  - Security Engineering
ER  - 

TY  - CONF
TI  - Checking models based on an iterative co-specification process of a critical system
AU  - Bouffaron, F.
AU  - Marange, P.
AU  - Morel, G.
T2  - Proceedings - 2014 12th IEEE International Conference on Industrial Informatics, INDIN 2014
AB  - Recurrent incident reports indicate that critical systems such as power plants exhibit unintended emergent behaviors outside of acceptable limits, despite of the increasing development of dependable automation technologies as well as of a lot of techniques related to dependability issues. Among many causes, the role of human for operating technical artefacts is of importance, but also for designing them from the early stages of specification in order to check the basic property of wholeness of any system. A mean is to ensure a continuum of compliant models to component integration through an iterative process between all the disciplines involved to engineer these systems as whole all along their life cycle. However, a human-based process to check the right-system requirements-right remains not fully adequate at the scale of real systems engineering projects and in any case to critical issues. This paper explores the formal checking compliance of architecting models with dependability requirements. These models are refined iteratively by specialist and specialty engineers interoperating with a system engineer through a co-specification process on a particular case study of a critical power-plant sub-system. Â© 2014 IEEE.
DA  - 2014///
PY  - 2014
DO  - 10.1109/INDIN.2014.6945516
SP  - 248
EP  - 254
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84914128774&doi=10.1109%2fINDIN.2014.6945516&partnerID=40&md5=b65f3128d2dce6088d237e5d88631bb2
DB  - Scopus
KW  - model based systems engineering
KW  - co-specification
KW  - dependability requirements
KW  - model-checking
KW  - verification/validation
ER  - 

TY  - JOUR
TI  - Relational oriented systems engineering framework for flight training
AU  - Dickerson, C.
AU  - Holden, T.
T2  - Journal of Defense Modeling and Simulation
AB  - The integration of systems of systems (SoS) associated with a flight training mission directly reflects the problem of developing a system engineering process for the design of live, virtual and constructive (LVC) experiments. Due to the complexity and disparity of the technology in a flight training SoS (FTSoS), modeling and analysis of architecture is becoming increasingly important. Relational Oriented Systems Engineering (ROSE) methodology is used to develop a framework for simulation and analysis of a navigational SoS for a typical aircraft. The framework can be used for both the prescription of navigation systems entering and exiting the SoS and for the analysis of pilot behavior as navigation quality of service (QoS) changes. ROSE offers a novel approach to developing a model-based systems engineering (MBSE) process for simulation and analysis of a complex SoS problem. Â© 2013 The Society for Modeling and Simulation International.
DA  - 2014///
PY  - 2014
DO  - 10.1177/1548512913500394
VL  - 11
IS  - 2
SP  - 103
EP  - 113
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901252712&doi=10.1177%2f1548512913500394&partnerID=40&md5=2adab65cdbffc55e3e116dfeb1d96d20
DB  - Scopus
KW  - Model simulation and verification
KW  - System analysis
KW  - Tools and technology
ER  - 

TY  - CONF
TI  - Research on integrated avionics system safety methodology
AU  - Wang, G.
AU  - Gu, Q.
AU  - Wang, M.
AU  - Zhai, M.
T2  - AIAA AVIATION 2014 -14th AIAA Aviation Technology, Integration, and Operations Conference
AB  - With the trend of integration, avionics system becomes more and more complexity which has a huge increase in task synthsis, functional fusion and resources integration. The traditional engineering methods for systems safety assessment faces the challenges of analyzing dynamic behavior of system safety for involving multiple system goals, multiple processes, multiple elements, multiple relations and multiple conditions. In this paper, three scientific issure are presented by refining the fault characters of application integration, function integration and resource integration at first. Secondly, the hazard and mishap modes of avionics system are studied and the methods of hazard analysis, hazard evaluation, risk controlling, risk elimination and risk mitigation are presented based on the system hazard controlling theory. Furthermore, In order to proactively design safety into a product, the task synthesis safety process, function fusion safety process and resources integration processs are put forward, threse processes that integrate with model-based system engineering process start at the concept definition phase and continue throughout the life cycle. Finally, the organizing and engineering technologies methodology of system safety which based on Zachman model are also discussed to provide foundation for designing integrated avionics system.
DA  - 2014///
PY  - 2014
DO  - 10.2514/6.2014-2224
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085773433&doi=10.2514%2f6.2014-2224&partnerID=40&md5=a979ac2de416d4d14a140285540f6d10
DB  - Scopus
ER  - 

TY  - CONF
TI  - Exporting object-process methodology system models to the semantic web
AU  - Jacobs, S.
AU  - Wengrowicz, N.
AU  - Dori, D.
T2  - Conference Proceedings - IEEE International Conference on Systems, Man and Cybernetics
AB  - Model-Based Systems Engineering (MBSE) is gradually becoming an acceptable good practice, especially for large-scale complex systems. The variety of modeling languages enables detailed representation of domain-specific knowledge of different aspects of a system. Semantic Web concepts provide opportunities for easier and more efficient collaboration between design and verification teams using different modeling tools. IBM Semantic Mediation Container (SMC) is a tool interoperability platform, allowing mediation and synchronization among models in different languages based on their ontologies. We propose integrating into SMC the ability to translate Object-Process Methodology (OPM), the emerging ISO 19450 Standard, which provides a holistic view of the system's function, structure, and behavior. In this paper we describe the first integration stages - defining the OPM ontology in a way that conforms to Semantic Web specifications and developing a module for exporting OPM models from their visual representation to and back from Resource Description Framework (RDF). We discuss the scope of the ontology and different approaches of element representation. We portray the implementation of the export module as an extension to OPM CASE tool (OPCAT). The ontology and export module are validated by round-trip transformation of OPM models from their visual representation to RDF and back by experimenting with OPM experts. Â© 2014 IEEE.
DA  - 2014///
PY  - 2014
DO  - 10.1109/SMC.2014.6974046
VL  - 2014-January
SP  - 1014
EP  - 1019
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938095803&doi=10.1109%2fSMC.2014.6974046&partnerID=40&md5=e4a129cc551a8ac622acd0e727ccda15
DB  - Scopus
KW  - Conceptual modeling
KW  - Ontology design
KW  - RDF
KW  - Semantic mediation
KW  - Object-process methodology
KW  - Semantic web
ER  - 

TY  - CONF
TI  - Electric drive vehicle development and evaluation using system simulation
AU  - Rousseau, A.
AU  - Halbach, S.
AU  - Michaels, L.
AU  - Shidore, N.
AU  - Kim, Na.
AU  - Kim, N.
AU  - Karbowski, D.
AU  - Kropinski, M.
T2  - IFAC Proceedings Volumes (IFAC-PapersOnline)
AB  - To reduce development time and introduce technologies faster to the market, many companies have been moving to Model-based System Engineering (MBSE). In MBSE, the development process centers around a multi-physics model of the complete system being developed, from requirements to design, implementation and test. Engineers can avoid a generation of system design processes based on hand coding, and use graphical models to design, analyze, and implement the software that determines system performance and behavior. This paper describes the process implemented in Autonomie, a Plug-and-Play Software Environment, to design and evaluate electric drive powertrain and component technologies in a multi-physics environment. We will discuss best practices and provide examples of the different steps of the V-diagram including model-in-the-loop, software-in-the-loop and component-in-the-loop simulation. Â© IFAC.
DA  - 2014///
PY  - 2014
DO  - 10.3182/20140824-6-za-1003.02832
VL  - 19
SP  - 7886
EP  - 7891
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929832469&doi=10.3182%2f20140824-6-za-1003.02832&partnerID=40&md5=679be93beb512f8b48682897d2198729
DB  - Scopus
KW  - Simulation
KW  - Control
KW  - Model Based System Engineering
KW  - Electric Drive Vehicles
KW  - System Engineering
ER  - 

TY  - CONF
TI  - Quantum statistical testing of a quantum random number generator
AU  - Humble, T.S.
T2  - Proceedings of SPIE - The International Society for Optical Engineering
AB  - The unobservable elements in a quantum technology, e.g., the quantum state, complicate system verification against promised behavior. Using model-based system engineering, we present methods for verifying the opera- tion of a prototypical quantum random number generator. We begin with the algorithmic design of the QRNG followed by the synthesis of its physical design requirements. We next discuss how quantum statistical testing can be used to verify device behavior as well as detect device bias. We conclude by highlighting how system design and verification methods must inuence effort to certify future quantum technologies. Â© 2014 SPIE.
DA  - 2014///
PY  - 2014
DO  - 10.1117/12.2060846
VL  - 9225
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922689929&doi=10.1117%2f12.2060846&partnerID=40&md5=6e823476de8154053f08c2770689c703
DB  - Scopus
KW  - Quantum engineering
KW  - Quantum random number generator
KW  - Statistical testing
ER  - 

TY  - CONF
TI  - Modeling and simulation for the performance evaluation of the on-board communication system of a metro train
AU  - Falcone, A.
AU  - Garro, A.
AU  - Tundis, A.
T2  - 13th International Conference on Modeling and Applied Simulation,  MAS 2014
AB  - The paper presents the evaluation of the dependability performances of a real On-Board Communication System of a Metro train centered on the application of RAMSAS, a recently but promising model-based method for the reliability analysis of systems through Simulation. In particular, after the description of the On-Board Communication System under consideration, of its dependability requirements, and related performance indicators to be evaluated, a SysML-based model of the structure and behavior of the system is presented. Beside the nominal system behavior, specific dysfunctional tasks, able to alter the intended behavior of the system, are introduced in order not only to evaluate through Simulation system dependability performances but also to compare different design choices and parameters settings against the requirements.
DA  - 2014///
PY  - 2014
SP  - 20
EP  - 29
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912102514&partnerID=40&md5=107cdf8df7d7649aeb7b2de6dfe7a604
DB  - Scopus
KW  - Model-based systems engineering
KW  - Reliability
KW  - Safety
KW  - Performance evaluation
KW  - Availability
KW  - Urban rail transport
ER  - 

TY  - CONF
TI  - Defining object-process methodology in web ontology language for semantic mediation
AU  - Jacobs, S.
AU  - Wengrowicz, N.
AU  - Dori, D.
T2  - Proceedings - 2014 IEEE International Conference on Software Science, Technology and Engineering, SWSTE 2014
AB  - Model-Based Systems Engineering (MBSE) is gradually becoming an acceptable good practice, especially for large-scale complex systems. The variety of modeling languages allows detailed representation of domain-specific knowledge of different components and aspects of a system. Semantic Web concepts provide opportunities for easier and more efficient collaboration between design and verification teams using different modeling tools. IBM Semantic Mediation Container (SMC) is a tool interoperability platform, allowing mediation and synchronization among models in different languages based on their ontologies. We propose integrating into SMC the ability to translate Object-Process Methodology (OPM), the emerging ISO 19450 Standard, which provides a holistic view of the system's function, structure, and behavior. In this paper we describe the first integration stage - defining the OPM ontology in a way that conforms to Semantic Web specifications. We discuss different approaches of element representation and validate the ontology by round-trip transformation of OPM models from their visual representation to Resource Description Framework (RDF) and back. Â© 2014 IEEE.
DA  - 2014///
PY  - 2014
DO  - 10.1109/SWSTE.2014.14
SP  - 87
EP  - 95
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907052520&doi=10.1109%2fSWSTE.2014.14&partnerID=40&md5=d2d6482771b1b5648919bb0ec436ddbe
DB  - Scopus
KW  - Conceptual modeling
KW  - Object-Process Methodology
KW  - Ontology design
KW  - RDF
KW  - Semantic Web Semantic mediation
ER  - 

TY  - CONF
TI  - Systems engineering in the large synoptic survey telescope project: An application of model based systems engineering
AU  - Claver, C.F.
AU  - Selvy, B.M.
AU  - Angeli, G.
AU  - Delgado, F.
AU  - Dubois-Felsmann, G.
AU  - Hascall, P.
AU  - Lotz, P.
AU  - Marshall, S.
AU  - Schumacher, G.
AU  - Sebag, J.
T2  - Proceedings of SPIE - The International Society for Optical Engineering
AB  - The Large Synoptic Survey Telescope project was an early adopter of SysML and Model Based Systems Engineering practices. The LSST project began using MBSE for requirements engineering beginning in 2006 shortly after the initial release of the first SysML standard. Out of this early work the LSST's MBSE effort has grown to include system requirements, operational use cases, physical system definition, interfaces, and system states along with behavior sequences and activities. In this paper we describe our approach and methodology for cross-linking these system elements over the three classical systems engineering domains-requirement, functional and physical-into the LSST System Architecture model. We also show how this model is used as the central element to the overall project systems engineering effort. More recently we have begun to use the cross-linked modeled system architecture to develop and plan the system verification and test process. In presenting this work we also describe "lessons learned" from several missteps the project has had with MBSE. Lastly, we conclude by summarizing the overall status of the LSST's System Architecture model and our plans for the future as the LSST heads toward construction. Â© 2014 SPIE.
DA  - 2014///
PY  - 2014
DO  - 10.1117/12.2056781
VL  - 9150
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906862061&doi=10.1117%2f12.2056781&partnerID=40&md5=e9cab71adfc8e2d4a6553c624081156f
DB  - Scopus
KW  - SysML
KW  - MBSE
KW  - Systems Engineering
KW  - LSST
ER  - 

TY  - CONF
TI  - Model-based systems engineering for design and automated operation of modern waterway systems
AU  - Petnga, L.
AU  - Austin, M.
T2  - 8th Annual IEEE International Systems Conference, SysCon 2014 - Proceedings
AB  - Waterway and canal systems are particularly cost effective in the transport of bulk and containerized goods to support global trade. Yet, despite these benefits, they are among the most under-appreciated of transportation engineering systems. Looking ahead, the long-term view is not rosy. Failures, delays, incidents, and accidents in aging waterway systems are doing little to attract the technical and economic assistance required for modernization and sustainability. We argue that programs for waterway and canal modernization and sustainability can benefit significantly from system thinking, supported by systems engineering techniques. To support this claim, we develop a framework for the Model-Based Systems Engineering (MBSE) design of modern waterways, especially canal systems. The proposed framework supports organizational, requirements and engineering models. Semi-formal modeling techniques are employed for the representation of project goals and scenarios and high-level models of behavior and structure. The essential features of this framework are highlighted in a case study where modelbased systems engineering procedures are used for the design and analysis of a post-Panamax waterlock system. Formal verification procedures to demonstrate that essential system properties such as safety, liveliness and reachability are satisfied are currently under development. Â© 2014 IEEE.
DA  - 2014///
PY  - 2014
DO  - 10.1109/SysCon.2014.6819274
SP  - 309
EP  - 316
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902491322&doi=10.1109%2fSysCon.2014.6819274&partnerID=40&md5=c78159db7e449df18c6d6550ca0693cf
DB  - Scopus
ER  - 

TY  - JOUR
TI  - SysML as backbone for engineering and safety - Practical experience with TRW braking ECU
AU  - Lovric, T.
AU  - Schneider-Scheyer, M.
AU  - Sarkic, S.
T2  - SAE Technical Papers
AB  - Today's Automotive ECU development is a global engineering exercise. It requires efficient planning, design and implementation. Time to market, innovative customer functions and cost effective design are key to success. Not only the technical realization with compressed time schedules and frequent change requests, but also the documentation, and the proof of compliance to ISO-26262 requires efficient solutions to be applied. Key to successful ECU development of complex safety critical systems inside a global team is a systematic approach to identify the ideal realization out of multiple design alternatives. This is why TRW Electronics Engineering for its Braking ECU products decided to design the new product generation with the help of Model Based System Engineering methods (MBSE). With these methods the team is realizing the opportunities provided by top-down driven development considering Requirements Engineering, Semi-formal Architecture Description, and early support to create evidence to conform to ASIL D in accordance to ISO 26262. This is seen as an approach consistent with the state-of-the-Art of automotive engineering by allowing early proof of concept, and realizing efficient evaluation of design solutions. Also, it supports design engineers in their necessary tasks like interface definition, requirements allocation, testing etc. as needed for global development teams. Beside this it supports safety evidence generation which is needed to assure high quality and to satisfy customers and internal safety auditors, who need to be convinced of safe and ISO compliant design solutions (safety case). Traditionally in many companies safety may still be in "its own world", with dedicated safety specialists and safety tools. This leads to significant effort in alignment between safety investigations and system design, as it evolves. The main aspect of the presented TRW approach is to use the design information (system structure and behaviour) from the ECU SysML model also for the development of the ECU safety concept. This integration ensures that changes in design can be reanalyzed with high efficiency. As safety aspects are linked directly into their system models, the design engineers become immediately aware of functional safety needs, and they can support the necessary safety analyses more efficiently. Further benefits come from fewer issues with inconsistencies, due to the possibility to perform automated traceability checks, as well as other consistency- and completeness-checks on the model. The paper evaluates key success factors in comparison to legacy development process, reflects our experience in this field, and gives outlook to further future improvements: Interface management (System / OEM / Suppliers / Software)Requirements EngineeringDesign and Alternatives EvaluationTest, Verification, and ValidationSafety Management and Safety AnalysisAssessment and Audit SupportChange Management The paper concludes with a summary of advantages and achievements and discussion of remaining challenges and outlook to possible future solutions. Copyright Â© 2014 SAE International.
DA  - 2014///
PY  - 2014
DO  - 10.4271/2014-01-0212
VL  - 1
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899509880&doi=10.4271%2f2014-01-0212&partnerID=40&md5=72df8f1e625a9fae6d9558668924d891
DB  - Scopus
ER  - 

TY  - CONF
TI  - Synthesis and analysis of supervisory controllers for time-abstracted discrete-event systems
AU  - Markovski, J.
T2  - IEEE International Conference on Automation Science and Engineering
AB  - We synthesize supervisory controllers for timed discrete-event systems by employing data-based control requirements and by abstracting from the timing aspects of the original system. This enables us to employ standard synthesis tools, like Supremica, whereas the timing behavior of the supervised system can be analyzed by using model checking tools, like UPPAAL. We cast our proposal in a synthesis-centric modelbased systems engineering framework that is supported by a process-theoretic treatment of supervisory control theory for timed discrete-event systems with data. The theory provides for the appropriate abstractions of the timed behavior of the original system and for compositional model transformation from Supremica to UPPAAL. To this end, we develop a suitable model transformation tool that interfaces the employed synthesis and verification tools. Finally, we illustrate the proposed framework on a case study dealing with movement coordination of automated guided vehicles in pipeless chemical plants. Â© 2013 IEEE.
DA  - 2013///
PY  - 2013
DO  - 10.1109/CoASE.2013.6653906
SP  - 1075
EP  - 1082
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891522849&doi=10.1109%2fCoASE.2013.6653906&partnerID=40&md5=3f6e870c829c331008ac6b3d0e7e7be5
DB  - Scopus
ER  - 

TY  - CONF
TI  - Towards optimal supervisory control of discrete-time stochastic discrete-event processes with data
AU  - Markovski, J.
T2  - Proceedings - International Conference on Application of Concurrency to System Design, ACSD
AB  - We propose a model-based systems engineering framework for supervisory control and probabilistic model checking of discrete-time stochastic discrete-event systems. Supervisory control theory deals with synthesis of models of supervisory controllers that ensure safe and nonblocking behavior, based on models of the uncontrolled system and the control requirements. However, guaranteeing only safety and nonblocking properties of the supervised system is not sufficient, and often performance measures must be taken into account. Unfortunately, treating optimality in the synthesis procedure is a costly undertaking. Therefore, we propose to decouple the synthesis of the supervisor that caters for functional aspects of the system from the performance evaluation that considers the quantitative aspects. We provide an appropriate abstraction of the stochastic behavior, which enables us to employ standard supervisory controller synthesis tools. The synthesized supervisor is, thereafter, coupled with the stochastic model of the unsupervised system, and abstracted to a discretetime Markov process, which is fed to a probabilistic model checker to validate the performance requirements. Â© 2013 IEEE.
DA  - 2013///
PY  - 2013
DO  - 10.1109/ACSD.2013.29
SP  - 31
EP  - 40
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885621589&doi=10.1109%2fACSD.2013.29&partnerID=40&md5=d037dd4af36b4f144fe2317d349295bb
DB  - Scopus
KW  - probabilistic model checking
KW  - controllability of probabilistic timed systems
KW  - probabilistic timed partial bisimulation
KW  - supervisory control theory
ER  - 

TY  - JOUR
TI  - Model based control system design using SysML, simulink, and computer algebra system
AU  - Sakairi, T.
AU  - Palachi, E.
AU  - Cohen, C.
AU  - Hatsutori, Y.
AU  - Shimizu, J.
AU  - Miyashita, H.
T2  - Journal of Control Science and Engineering
AB  - The Systems Modeling Language (SysML) is a standard, general-purpose, modeling language for model-based systems engineering (MBSE). SysML supports the specification, analysis, and design of a broad range of complex systems such as control systems. The authors demonstrate how they can integrate a SysML modeling tool (IBM Rational Rhapsody) with a proprietary simulation tool (MathWorks Simulink) and a Computer Algebra System (CAS) to validate system specification. The integration with Simulink enables users to perform systems engineering process in a SysML model, while designing continuous control algorithms and plant behavior in Simulink, and to validate the behavior by simulating the overall composition in Simulink. The integration with a CAS enables the evaluation of mathematical constraints defined in SysML parametric diagrams. The authors also show the overall approach using a Dual Clutch Transmission (DCT) and a Cruise Control System as examples. Â© 2013 Takashi Sakairi et al.
DA  - 2013///
PY  - 2013
DO  - 10.1155/2013/485380
VL  - 2013
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884237283&doi=10.1155%2f2013%2f485380&partnerID=40&md5=dbe2b17d2aea53f184b3a0b0805941f1
DB  - Scopus
ER  - 

TY  - CONF
TI  - Simulation of cyber physical models using SysML and numerical solvers
AU  - Palachi, E.
AU  - Cohen, C.
AU  - Takashi, S.
T2  - SysCon 2013 - 7th Annual IEEE International Systems Conference, Proceedings
AB  - We demonstrate a modeling and simulation technique that allows integrating controller/plant behavior specified in numerical solvers, such as Simulink and Modelica, within the SysML model. This allows the mixing of discrete and continuous behaviors in a context of a system model that can be simulated as a complete system level specification. Our approach involves code generation, rather than semantic mappings or model transformation of behaviors, combined with the capability to transform the interface and type specification from one modeling language to the other. Using such complementary languages/tools allows the specification of a complete design model that can be simulated for various purposes such as verification and validation and trade studies. Â© 2013 IEEE.
DA  - 2013///
PY  - 2013
DO  - 10.1109/SysCon.2013.6549954
SP  - 671
EP  - 675
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882943548&doi=10.1109%2fSysCon.2013.6549954&partnerID=40&md5=b3a55328e54d1d2201214acf09831dc5
DB  - Scopus
KW  - Cyber-Physical Systems
KW  - Simulation
KW  - Modelica
KW  - Simulink
KW  - Model-Based Systems Engineering (MBSE)
ER  - 

TY  - JOUR
TI  - Extending a synthesis-centric model-based systems engineering framework with stochastic model checking
AU  - Markovski, J.
AU  - Estens Musa, E.S.
AU  - Reniers, M.A.
T2  - Electronic Notes in Theoretical Computer Science
AB  - We propose to integrate performance evaluation with supervisory control synthesis to bring higher confidence in the control design. Supervisory control theory deals with automatic synthesis of supervisory controllers that ensure safe behavior of the supervised system, based on the models of the uncontrolled system and the (safety) control requirements. For the purpose of performance evaluation, we turn to stochastic model checking of continuous-time Markov chains, which requires an extension of the model of the uncontrolled system with Markovian delays. We cast our proposal as an extension of a model-based systems engineering framework that relies on supervisor synthesis. We treat the Markovian delays syntactically, exploiting their equivalent interleaving behavior with uniquely-named uncontrollable transitions. In this way, we can employ already available synthesis tools, while preserving the stochastic behavior. To this end, we develop model transformation tools to extract the underlying Markov process from the stochastic discrete-event model of the supervised system. We illustrate the approach by modeling a pipeless plant that employs automated guided vehicles instead of fixed piping in order to ensure greater flexibility of the plant. The control problem that we solve is safe high-level movement coordination of the vehicles, ensured by the supervisory controller. We show how to seamlessly introduce stochastic behavior in the supervised system and we evaluate several performance and reliability aspects of the plant. We implement the framework by interfacing two state-of-the-art tools: Supremica for supervisory controller synthesis and MRMC for Markovian model checking. To this end, we improve previous attempts by providing support for data-based observers, which greatly improve the modeling capabilities of the framework. Â© 2013 Elsevier B.V.
DA  - 2013///
PY  - 2013
DO  - 10.1016/j.entcs.2013.07.011
VL  - 296
SP  - 163
EP  - 181
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883343978&doi=10.1016%2fj.entcs.2013.07.011&partnerID=40&md5=7e9404ca43c39ef39f2d4e7ac879702c
DB  - Scopus
KW  - supervisory control theory
KW  - Markov processes
KW  - performance evaluation
ER  - 

TY  - JOUR
TI  - Virtual engineering at work: The challenges for designing mechatronic products
AU  - Van Der Auweraer, H.
AU  - Anthonis, J.
AU  - De Bruyne, S.
AU  - Leuridan, J.
T2  - Engineering with Computers
AB  - The product race has become an innovation race, reconciling challenges of branding, performance, time to market and competitive pricing while complying with ecological, safety and legislation constraints. The answer lies in "smart" products of high complexity, relying on heterogeneous technologies and involving active components. To keep pace with this evolution and further accelerate the design cycle, the design engineering process must be rethought. The paper presents a mechatronic simulation approach to achieve this goal. The starting point is the current virtual prototyping paradigm that is widely adopted and that continues to improve in terms of model complexity, accuracy, robustness and automated optimization. Two evolutions are discussed. A first one is the extension to multi-physics simulation answering the design needs of the inherent multi-disciplinarity of "intelligent" products. Integration of thermal, hydraulic, mechanical, haptic and electrical functions requires simulation to extend beyond the traditional CAD-FEM approach, supporting the use of system, functional and perception models. The second evolution is the integration of control functions in the products. Where current industrial practice treats mechanical system design and control design as different design loops, this paper discusses their integration in a model-based design process at all design stages, turning concepts such as software-in-the-loop and hardware-in-the-loop into basic elements of an industrial design approach. These concepts are illustrated by a number of automotive design engineering cases, which demonstrate that the combined use of perception, geometric and system models allows to develop innovative solutions for the active safety, low-emission and high-comfort performance of next-generation vehicles. This process in turn poses new challenges to the design in terms of the specification and validation of such innovative products, including their failure modes and fault-tolerant behaviour. This will imply adopting a model-based system engineering approach that is currently already common practice in software engineering. Â© 2012 The Author(s).
DA  - 2013///
PY  - 2013
DO  - 10.1007/s00366-012-0286-6
VL  - 29
IS  - 3
SP  - 389
EP  - 408
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879306895&doi=10.1007%2fs00366-012-0286-6&partnerID=40&md5=7ed40cdcc2d1701f09cd47bbfae6eb7f
DB  - Scopus
KW  - Control
KW  - Design engineering
KW  - CAE
KW  - Mechatronic systems
KW  - Multi-disciplinary
ER  - 

TY  - CONF
TI  - An integrated approach to developing automotive climate control systems
AU  - Belloncle, G.
AU  - Chombart, P.
AU  - Clark, B.
T2  - Complex Systems Design and Management - Proceedings of the 3rd International Conference on Complex Systems Design and Management, CSD and M 2012
AB  - The development of embedded systems for complex cyber-physical products involves multiple processes and disciplines - from project management and requirements engineering, to configuration, integration, simulation, test and verification management. Traditional model based systems engineering approaches, where generated models and simulations are largely isolated from one another, make it almost impossible to get a 'holistic' view of a complete product or systems behavior. While most frameworks for model-based design support a single discipline, what is actually needed is a framework that can handle the multi-disciplinary architecture and systems integration of the complete product or system. There is a need for standards to enable the combination of cross-discipline design efforts in a common environment that fully supports modeling, simulation and embedded software generation and validation. This paper outlines an integrated approach where the Requirement, Functional, Logical, and Physical (RFLP) decomposition of complex cyber-physical products is achieved in a fully integrated 2D / 3D collaborative systems development environment. We will outline how the Modelica1 language, in conjunction with the open 'Functional Mockup2' and AUTOSAR3 concepts, can be leveraged by a Product Lifecycle Management (PLM) based systems integration platform, to define and evaluate the functional definition of a complete product or system. We will illustrate this approachthrough an example of an automotive climate control system development process. Â©Springer-Verlag Berlin Heidelberg 2013.
DA  - 2013///
PY  - 2013
DO  - 10.1007/978-3-642-34404-6_14
SP  - 209
EP  - 226
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926063838&doi=10.1007%2f978-3-642-34404-6_14&partnerID=40&md5=fe79409bdeb2d823bf58c1142548d619
DB  - Scopus
ER  - 

TY  - CONF
TI  - An integrated systems engineering framework for supervisor synthesis, verification, and performance evaluation
AU  - Markovski, J.
T2  - 2013 European Control Conference, ECC 2013
AB  - We propose a model-based systems engineering framework that enables supervisor synthesis of stochastic (nondeterministic) discrete-event systems, and post-synthesis validation of functional and quantitative properties of the supervised system. Supervisory control theory deals with synthesis of models of supervisory controllers that ensure safe and nonblocking behavior, based on discrete-event models of the uncontrolled system and the control requirements. Typically, neither more elaborated functional properties nor performance metrics can be guaranteed by the synthesis procedure for large systems, due to high computational complexity. Thus, the supervised system must be validated to ensure that intended behavior is present. The framework employs a single integrated model that denotes all relevant aspects of the system. We rely on state-of-the-art tools to implement the proposed framework. For supervisor synthesis we employ Supremica, which models we extend to denote stochastic behavior. For verification, we provide a consistent translation of the supervised system to the model checker UPPAAL. To evaluate quantitative supervised behavior, first we transform the denoted system model to a labeled Interactive Markov chain and couple it with the synthesized supervisor. Then, we derive the underlying labeled Markov process and feed it to the stochastic model checker MRMC. We illustrate the framework on an industrial case study of coordinating printing maintenance procedures. Â© 2013 EUCA.
DA  - 2013///
PY  - 2013
DO  - 10.23919/ecc.2013.6669190
SP  - 650
EP  - 657
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893245888&doi=10.23919%2fecc.2013.6669190&partnerID=40&md5=5dda653802ac6f617036e82e2e28a259
DB  - Scopus
ER  - 

TY  - BOOK
TI  - Verifying liveness in supervised systems using UPPAAL and mCRL2
AU  - Markovski, J.
AU  - Reniers, M.A.
T2  - Advances in Intelligent Systems and Computing
AB  - Supervisory control ensures safe coordination of high-level discrete-event system behavior. Supervisory controllers observe discrete-event system behavior, make a decision on allowed activities, and communicate the control signals to the involved parties. Models of such controllers are automatically synthesized from the formal models of the unsupervised system and the specified safety requirements. Traditionally, the supervisory controllers do not ensure that intended behavior is preserved, but only ensure that undersired behavior is precluded. Recent work suggested that ensuring liveness properties during the synthesis procedure is a costly undertaking. Therefore, we augment state-of-the-art synthesis tools to provide for efficient post-synthesis verification. To this end, we interface a model-based systems engineering framework with the state-based model checker UPPAAL and the event-based tool suite mCRL2. We demonstrate the framework on an industrial case study involving coordination of maintenance procedures of a high-end printer. Based on our experiences, we discuss the advantages and disadvantages of the used tools. A comparison is given of the functionality offered by the tools and the extent to which these are useful in our proposed method. Â© 2013 Springer-Verlag.
DA  - 2013///
PY  - 2013
VL  - 207 AISC
SP  - 295
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876239459&doi=10.1007%2f978-3-642-37169-1_29&partnerID=40&md5=243f61c006bd197119a85c193132d82b
DB  - Scopus
KW  - Supervisory control
KW  - model checking
KW  - UPPAAL
KW  - Î¼-calculus
ER  - 

TY  - CONF
TI  - AIAA SPACE Conference and Exposition 2012
T2  - AIAA SPACE Conference and Exposition 2012
AB  - The proceedings contain 226 papers. The special focus in this conference is on Space Exposition. The topics include: The James Webb space telescope; daytime GEO satellite characterization with the HANDSIONS camera; considerations of quantum key distribution for space applications; electric propulsion tug modeling improvements and application to the NASA/DARPA manned geosynchronous servicing study; high performance thermo-mechanical joint for space applications; analysis of operational efficiency; MSL-RAD cruise operations concept; ultra reliable space life support; a graph-theoretic modeling framework for resource-economy in space logistics; communications for lunar commercial logistics; the logistics of utilizing a cis-lunar transfer vehicle for near solar system exploration; a space logistics system based on efficient in-space transportation; creation of an upper stage trajectory capability boundary to enable booster system trade space exploration; permanent manned outpost with commercial launch and propellant depots; technology investment agendas to expand human space futures; architectural study of crew launch escape systems with ascent assist capability; comparison of earth departure strategies for human missions to mars; phase E cost analysis for NASA science missions; commercially hosted payload acquisition framework; affordable development of a nuclear cryogenic propulsion stage; human interplanetary/asteroid vehicle concept; characteristics of Quallion's lithium-ion cells for aerospace applications; net-centric network and operational management; next generation simulation framework for robotic and human space missions; development, simulation and experimental validation of a radioisotope exploration probe for the Martian surface; application of the national launch system proven technologies to NASA's heavy lift launch vehicle; hydrocarbon liquid rocket engine technology impact forecasting; NASA suborbital research partner market analysis using inno360; Athena launch services rideshare opportunities AIAA Spce 2012; from airports to commercial spaceports; ten-year forecast of markets and launches for suborbital vehicles; 3D state decomposition modeling method for MBSE in space engineering; analysis of state of the art practices for the reduction of cost and schedule in launch vehicle DDT&E; model-based systems engineering pilot program at NASA Langley; contaminant removal from oxygen production systems for in situ resource utilization; space solar energy system for thermal and photosynthetic applications; conceptual design and architecture for a deep space habitation module; analyses of a huge space shield to weaken the global warming; using satellites to predict earthquakes, volcano eruptions, identify and track tsunamis; suomi NPP environmental products; adaptive non-linear modeling for ionospheric disturbances behavior estimation on spaceborne synthetic aperture radar interferometry; rapid cost estimation for space exploration systems; decision gate process for assessment of a NASA technology development portfolio; the use of reconfigurable FPGAs in developing reliable satellite on board computers; a comparative analysis of attitude determination algorithms for the solution of wahba's problem; a facility for ground based testing of nanosatellites in relevant environments; design of a flexible nanosatellite bus for science missions; using the prognostic health management program on the air force next generation reusable launch vehicle; aero-assisted pre-stage for ballistic and aero-assisted launch vehicles; analyses of cryogenic propellant tank pressurization based upon ground experiments; new technologies for cryogenic propellant management for next generation launchers; advanced exploration crew mobility systems program; critical flight conditions of operational rocketback trajectories; cognitive perception utilizing operationally intelligent software agents (OISAs); rideshare on EELV using ESPA - challenges and opportunities; liberty ; transportation services; interplanetary cubesat architecture and missions; a risk management plan for cubesats; multi-mission simulation and visualization for real-time telemetry display, playback and EDL event reconstruction; multi-vehicle lunar operations simulation using SEXTANT; the effects of clock drift on the mars exploration rovers; space exploration strategies for constrained funding; compact MRI for astronaut physiological research and medical diagnosis; the polymorphic, evolutionary, neural learning and processing environment (PENLPE); artificial neural sensory/short-term/long-term/emotional memory integration for autonomous AI systems; U.S. air force's SMC/XR Space environmental NanoSat experiment; advanced modular power approach to affordable, supportable space systems; trash to supply gas (TtSG) project overview; defining the complex JPSS ground system in pieces using DoDAF 2.0 as implemented with UPDM; lessons learned for NASA missions delivering data to the planetary data system; satellite servicing opportunities in geosynchronous orbit; changing satellite morphology through cellularization; vision-based on-orbit service robot; JPSS CGS C3 segment McMurdo multimission communications system; knowledge management for architecting space systems; the SMC-MIT space engineering academy; resource management and contingencies in aerospace concurrent engineering; applications of nanosats to small body exploration; European sample retrieval system; a comparison of astronaut near-earth object missions; evolution of the space cruise ship "cosmic mariner" innovative framework for orbital debris mitigation through satellite rejuvenation; ISS protection process for the COLA gap after launch; wireless structural monitoring for spacecraft; spacecraft line-of-sight stabilization using LWIR earth signature and a blueprint for cis-lunar exploration.
DA  - 2012///
PY  - 2012
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880978853&partnerID=40&md5=a38028bfd9c42b98205acccf609a7486
DB  - Scopus
ER  - 

TY  - CONF
TI  - AIAA Infotech at Aerospace Conference and Exhibit 2012
T2  - AIAA Infotech at Aerospace Conference and Exhibit 2012
AB  - The proceedings contain 199 papers. The special focus in this conference is on Infotech at Aerospace. The topics include: decision fusion methods with applications to structural health monitoring; FalconSAT-6 electrical power subsystem diagnostics; developing an architecture and framework for decision support system; on the robustness properties of M-MRAC; adaptive critic optimization of dynamic inverse control; adaptability in engineering resilient systems (ERS); the artificial cognitive neural framework (ACNF); reasoning frameworks for autonomous systems; an elegant hardware in loop simulator for cooperative missions of MAVs; enhancing ADS-B for future UAV operations; a model-based avionic prognostic reasoner (MAPR); system modeling for SHM using dynamic Bayesian networks; tele-operation control of robonaut on the international space station; predictive assessment for phased array antenna scheduling; intelligent space surveillance network (SSN) scheduling; UAS standards, regulations and developmental strategies; qualitative relational mapping for robotic navigation; Bayesian decision making for planetary micro-rovers; towards autonomous operation of robonaut 2; detecting abnormal space catalog updates; creating a comprehensive feature space library for machine learning; human intent prediction using Markova decision processes; optimal search for a random moving intruder; asynchronous displays for multi-UV search tasks; delegation control in control of unmanned aerial systems (UAS); automatic pipeline detection for UAVs; a framework for data skimming in UAS sensor net imagery; spacecraft adaptive control evaluation; adaptive motion planning approaches for small UAV flight; verification of adaptive systems; applying advanced networks and signal processing to spaceborne computing; adaptive autopilot designs for improved tracking and robustness; efficient video distribution for unmanned air vehicles; quaternion control for autonomous path following maneuvers; airport capacity prediction integrating ensemble weather forecasts; a view of SDRE control methods as one branch of indirect adaptive control; incorporating terrain avoidance into a small UAS sense and avoid system; a SPA-1 enabled plug-and-play CubeLab for ISS payloads; fault mitigation schemes for future spaceflight multicore processors; assessing vehicle health management requirements for unmanned air systems; layered moment-linear network models as tools for strategic air traffic flow management; volcano monitoring with small unmanned aerial systems; time to capture target using cyclic pursuit strategy; multi-unmanned vehicle supervisory control; plan to validate an ISHM system in a real-time simulation test bed; multi-disciplinary MBSE approach in industrial phases; UAV software architecture; fuzzy logic control of a tensegrity control base for a flight simulator; fuzzy collaborative robotic pong (FLIP); SIERRA team flight of zephyr UAS at west Virginia wild land fire burn; highly reactive, real-time planner for aggressive 3D aircraft maneuvers to avoid unguided threats; obstacle avoidance system for a quadrotor UAV; future unmanned aerial systems control; intelligent wireless sensor networks for spacecraft health monitoring; a robustness assessment for design tool; tactical flight management concept for trajectory based operations; engineering for safety and security; covariance intersection for multi-sensor ballistic missile tracking; practical approaches to distributed tracking in sensor networks; behavior-based onboard mission management for an unmanned fixed-wing aircraft; runtime monitoring and verification of systems with hidden information; physics based modeling and prognostics of electrolytic capacitors and prototype unmanned system training simulator.
DA  - 2012///
PY  - 2012
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880836839&partnerID=40&md5=b5ea9c28cefc5255dc310c74add80115
DB  - Scopus
ER  - 

TY  - CONF
TI  - A model-based approach to engineering behavior of complex aerospace systems
AU  - Ingham, M.
AU  - Day, J.
AU  - Donahue, K.
AU  - Kadesch, A.
AU  - Kennedy, A.
AU  - Khan, M.O.
AU  - Post, E.
AU  - Standley, S.
T2  - AIAA Infotech at Aerospace Conference and Exhibit 2012
AB  - One of the most challenging yet poorly defined aspects of engineering a complex aerospace system is behavior engineering, including definition, specification, design, implementation, and verification and validation of the system's behaviors. This is especially true for behaviors of highly autonomous and intelligent systems. Behavior engineering is more of an art than a science. As a process it is generally ad-hoc, poorly specified, and inconsistently applied from one project to the next. It uses largely informal representations, and results in system behavior being documented in a wide variety of disparate documents. To address this problem, JPL has undertaken a pilot project to apply its institutional capabilities in Model-Based Systems Engineering to the challenge of specifying complex spacecraft system behavior. This paper describes the results of the work in progress on this project. In particular, we discuss (1) our approach to modeling spacecraft behavior, (2) the content of the system model, including patterns for representing system structure, requirements, behavior and V&V-related information, (3) a trade study exploration of a few different patterns for allocating behavior to components in the system decomposition, (4) a revised modeling pattern for behavior specification that we have developed based on the experience acquired on this project, and (5) additional uses of the system model for the purposes of document generation and analysis. Â© 2012 by the American Institute of Aeronautics and Astronautics, Inc.
DA  - 2012///
PY  - 2012
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880806777&partnerID=40&md5=de40b505f86cef913152b2a1cb532749
DB  - Scopus
ER  - 

TY  - BOOK
TI  - Towards model-based system engineering for simulation-based design in product data management systems
AU  - Vosgien, T.
AU  - Nguyen Van, T.
AU  - Jankovic, M.
AU  - Eynard, B.
AU  - Bocquet, J.-C.
T2  - IFIP Advances in Information and Communication Technology
AB  - System integration and simulation are essential phases in design verification and optimization of system capabilities. Currently, different approaches in Systems Engineering (SE) are not entirely taking into account integration and simulation constraints thus complicating the process and enhancing its running time. The target of this paper is to propose a framework bridging the gap between Model Based System Engineering (MBSE) and current Product Lifecycle Management (PLM) and Simulation Lifecycle Management (SLM) functionalities. In this paper we address these gaps between MBSE design concepts and the current PLM capabilities and propose an innovative approach to manage architecture design for simulation. The proposed framework supports the definition of product architectures so as to organize and facilitate simulation and the specification of different types of interfaces enabling the organisation of several product behaviour simulations. An example of this framework based on an industrial case study for the structural analysis of an aero-engine is described and discussed addressing the limits and future developments. Â© 2012 International Federation for Information Processing.
DA  - 2012///
PY  - 2012
VL  - 388 AICT
SP  - 612
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872744430&doi=10.1007%2f978-3-642-35758-9_55&partnerID=40&md5=826f0c8e71ab19c09ef231e5d33360d5
DB  - Scopus
KW  - Model Based System Engineering
KW  - Design for Simulation
KW  - Engineering Data Management
KW  - Product Architecture Modelling
KW  - Product Lifecycle Management
ER  - 

TY  - CONF
TI  - Performance evaluation with cost estimation for supervised systems
AU  - Markovski, J.
T2  - Conference Proceedings - IEEE International Conference on Systems, Man and Cybernetics
AB  - Supervisory control theory deals with automated synthesis of models of supervisory controllers that ensure safe and nonblocking behavior of the supervised system. Typically, (large) supervised systems cannot be guaranteed to meet elaborated performance requirements, as ensuring them during the synthesis procedure is a costly undertaking. We propose a model-based systems engineering framework that enables supervisor synthesis of stochastic (nondeterministic) discrete-event systems, and post-synthesis validation of quantitative properties of the supervised system by imposing a cost model. To this end, we develop several extension tools that interface with the supervisory controller synthesis tool Supremica. To illustrate our approach, we remodel an industrial case study involving coordination of maintenance procedures of a printing process and demonstrate how to obtain performance measures using Markovian reward model checking. Â© 2012 IEEE.
DA  - 2012///
PY  - 2012
DO  - 10.1109/ICSMC.2012.6377668
SP  - 6
EP  - 11
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872379644&doi=10.1109%2fICSMC.2012.6377668&partnerID=40&md5=a2e5f6c0ff0185e1c54a92375c821481
DB  - Scopus
KW  - Markov processes
KW  - performance evaluation
KW  - discrete-event systems
KW  - formal specification
KW  - supervisory control
ER  - 

TY  - CONF
TI  - Towards configuration support for collaborative simulator development: A product line approach in model based systems engineering
AU  - Andersson, H.
AU  - Carlsson, M.
AU  - Ãlvander, J.
T2  - Proceedings of the 2011 20th IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises, WETICE 2011
AB  - In development and support of complex products such as power plants, automotive vehicles, or aircrafts, modeling and simulation has become an important activity as a basis for knowledge capture. Simulation is used in several steps of the product lifecycle; for evaluation of early design, for system verification, and for user training. With emerging techniques such as tools for high-level modeling, multi-core computing, and visualization, the number of useful models is growing. This paper focuses on reuse of multipurpose models and configuration support in a product line context. A configurator prototype system is presented. The simulator set created from validated models is considered to be a secondary product line. The product set which the simulation models represent is considered to be the primary product line. The Saab Gripen fighter aircraft, together with simulators in which the aircraft behavior, performance, and handling qualities are represented, is used to exemplify application. Integration principles of the systems for simulator configuration, Software Configuration Management, and Product Data Management (PDM) are studied. Preliminary results show that a configurator tool can be used, but there is need to map structures between the simulation and PDM domains. Â© 2011 IEEE.
DA  - 2011///
PY  - 2011
DO  - 10.1109/WETICE.2011.74
SP  - 185
EP  - 192
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-80052639762&doi=10.1109%2fWETICE.2011.74&partnerID=40&md5=afd745db6515ba26d049d5f6c6a731ad
DB  - Scopus
KW  - MBSE
KW  - Simulation
KW  - Configurator
KW  - Product Line
ER  - 

TY  - JOUR
TI  - Model-based systems engineering for the design and development of complex aerospace systems
AU  - Uckun, S.
AU  - Kurtoglu, T.
AU  - Bunus, P.
AU  - Tumer, I.
AU  - Hoyle, C.
AU  - Musliner, D.
T2  - SAE Technical Papers
AB  - The complexity of modern aerospace vehicles is growing constantly. New technologies create opportunities for higher levels of integration. Modern vehicles contain a larger number of components that interact with each other in non-linear and often unpredictable ways. Unintended interactions lead to unexpected behaviors and consequences, some of which have proven to be catastrophic. A key technical challenge in developing such complex systems is to ensure that catastrophic subsystem and component interactions are well understood and contained prior to full-scale development. To address these challenges, the U.S. Defense Advanced Research Projects Agency (DARPA) is investing in novel methods for design and verification of complex systems. The META program is specifically aimed at compressing the timeline for product development and deployment of complex defense systems, through model-based design and manufacturing. Using the META design paradigm, different component model libraries can be used to instantiate, analyze, and verify a system design independent of its physical manifestation. The goal is to establish a "correct-by-construction" design prior to detailed design and prototyping. This paper presents a model-based system-engineering framework that we developed as part of the META program. This framework enables architectural synthesis and analysis of complex systems during the conceptual design phase. Using this framework, design teams can systematically explore architectural design decisions during the early stage of system development before selecting specific components. The analysis performed at this earliest stage of design facilitates the development of more robust and reliable system architectures. In this paper, we describe the proposed framework and present its application to the design of a representative aerospace electrical power system (EPS). Copyright Â© 2011 SAE International.
DA  - 2011///
PY  - 2011
DO  - 10.4271/2011-01-2664
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072489507&doi=10.4271%2f2011-01-2664&partnerID=40&md5=6bb4ec6ea1f5dcfffae2a8a335090650
DB  - Scopus
ER  - 

TY  - JOUR
TI  - System-level model integration of design and simulation for mechatronic systems based on SysML
AU  - Cao, Y.
AU  - Liu, Y.
AU  - Paredis, C.J.J.
T2  - Mechatronics
AB  - The design of a mechatronic system (MTS) is not a trivial task due to the complexity of the systems. The evaluation of various design scenarios for the given requirements of a specific MTS is also difficult. Currently, model-based systems engineering (MBSE) and the modeling language SysML provide a novel means for the systematic design of MTSs. However, the specific requirements of MTS behavior modeling, i.e., continuous dynamics or even discrete/continuous hybrid behavior modeling, and automatic simulation and evaluation of the behavior models, are not supported by SysML which intends to create descriptive static design models. Therefore, extension should be made for SysML to support detailed hybrid behavior modeling and the transformation between hybrid models in SysML and executable simulation models in certain simulation environment. For this study, a meta-model based method is proposed to integrate the system design and simulation models of MTSs. First, a set of stereotypes is defined to facilitate the designer to explicitly model hybrid dynamic behavior based on SysML. The necessary simulation information is also formalized in SysML to support an analysis of the system dynamic behavior with the aid of simulations. Finally, the SysML-based system dynamic behavior, and the related simulation information are integrated with the platform-specific simulation model through a bidirectional model transformation approach based on a triple graph grammar (TGG), which facilitates the automatic model consistency and traceability between system design and simulation. The proposed method is implemented and illustrated by using an Inverted Pendulum System (IPS). Â© 2011 Elsevier Ltd. All rights reserved.
DA  - 2011///
PY  - 2011
DO  - 10.1016/j.mechatronics.2011.05.003
VL  - 21
IS  - 6
SP  - 1063
EP  - 1075
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-80052766346&doi=10.1016%2fj.mechatronics.2011.05.003&partnerID=40&md5=c384bb41f33357740689dfd6378c53f2
DB  - Scopus
KW  - SysML
KW  - Model transformation
KW  - Simulation
KW  - Model-based systems engineering
KW  - Simulink
KW  - Simscape
KW  - System dynamics
ER  - 

TY  - CONF
TI  - Integration of system-level design and analysis models of mechatronic system behavior based on SysML and Simscape
AU  - Cao, Y.
AU  - Liu, Y.
AU  - Paredis, C.J.J.
T2  - Proceedings of the ASME Design Engineering Technical Conference
AB  - Model Based Systems Engineering (MBSE) provides a new method for the design of mechatronic systems with increasing complexity. However, different from other complex systems, the behavior of mechatronic systems is characterized best in terms of continuous dynamics and therefore it is not easy for the designer to evaluate it based on static design models. In this study, a method for integrating system-level design and analysis models of mechatronic system behavior is presented. A set of stereotypes is defined based on the Simscape modeling language to support explicit modeling of continuous dynamics in SysML. Simulation models are then introduced into SysML to support analyzing the system dynamics behavior with the help of simulation in Simscape. Finally, the system dynamics model and simulation model in SysML are integrated with the analysis model in Simscape through a bidirectional model transformation based on a triple graph grammar (TGG). The model transformation facilitates automatic model consistency and traceability. Also, the system dynamics behavior can be simulated automatically for verification and validation. The proposed method is implemented and illustrated with a simple example. Copyright Â© 2010 by ASME.
DA  - 2010///
PY  - 2010
DO  - 10.1115/DETC2010-28213
VL  - 3
SP  - 1099
EP  - 1108
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-80054991415&doi=10.1115%2fDETC2010-28213&partnerID=40&md5=a4419635271b887625f7414e7b21d294
DB  - Scopus
KW  - SysML
KW  - Model transformation
KW  - Simulation
KW  - Model-based systems engineering
KW  - Simscape
KW  - System dynamics
ER  - 

TY  - CONF
TI  - Function model of train control system for unmanned operation of urban transit system
AU  - Lee, Y.-H.
T2  - ICCAS 2010 - International Conference on Control, Automation and Systems
AB  - The train control system (TCS) plays the core role to secure the safety and punctuality for railway train operation. There are various systems applied to urban transit lines which are developed differently and independently from other countries. The national standard specifications and guidelines have been established and maintained for the TCS in Korea. As the requirements of the high-efficient and economic operation of the urban transit system is getting higher, the unmanned operation of the train is moving to the limelight. Lots of systems supporting unmanned operation are being applied to the new lines such as Yongin, Busan (3rd line), Incheon (2nd line) and so on. The standard of the TCS for urban transit supports the system for unmanned operation as requirements. The function model of TCS has been established on the basis of the standard specification to analyze the requirements and behavior of the TCS. The model is also to support the test and evaluation of the system to be operated with the unmanned through the standard. Â©ICROS.
DA  - 2010///
PY  - 2010
SP  - 1129
EP  - 1133
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-78751526559&partnerID=40&md5=30eea09ec57ca4795eda03666779851b
DB  - Scopus
KW  - Model-based systems engineering
KW  - Function model
KW  - Train control
KW  - Urban transit
ER  - 

TY  - CONF
TI  - A model-based systems engineering approach to capturing disaster management systems
AU  - Soyler, A.
AU  - Sala-Diakanda, S.
T2  - 2010 IEEE International Systems Conference Proceedings, SysCon 2010
AB  - The purpose of this paper is to initiate the design of a framework for defining and capturing disaster management systems (DMS). Recognizing the management of disasters as complex adaptive systems (CAS), whose performance cannot be improved through the isolated optimization of their constituents, this paper proposes the adoption of model-based systems engineering (MBSE) to capturing the behavior of such systems, as well as the structure responsible for their behaviors. Using a domain-independent language such as the systems modeling language (SysML) to implement MBSE, the holistic approach proposed here effectively introduces a new paradigm in disaster management studies that is aimed at reducing the aforementioned complexity. By enforcing traceability between the DMS subsystems, and by leveraging artifacts such as viewpoints to develop perspectives that are tailored to specific stakeholders and users, it is anticipated that a MBSE-based holistic approach such as the one presented in this paper will promote proper use of the scientific method for the design, verification, validation and improvement of disaster management systems. Â©2010 IEEE.
DA  - 2010///
PY  - 2010
DO  - 10.1109/SYSTEMS.2010.5482340
SP  - 283
EP  - 287
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-77954430671&doi=10.1109%2fSYSTEMS.2010.5482340&partnerID=40&md5=3e08d65da9189789ef4333e2af035ebb
DB  - Scopus
KW  - SysML
KW  - Model-based systems engineering
KW  - Systems modeling
KW  - Agency management
KW  - Natural disaster management
KW  - System architecture
ER  - 

TY  - CONF
TI  - Model based systems engineering and CORE - An introduction
AU  - Levine, C.
T2  - AHS Technical Specialists Meeting on Systems Engineering 2009
AB  - Systems Engineering is a systematic approach to defining a system. Its four (4) domains are requirements analysis, behavior analysis, architecture synthesis, and verification and validation. Model Based Systems Engineering, MBSE, focuses this approach through the development of an integrated executable system model. Vitech Corporation's CORE provides a single integrated environment for performing MBSE. This paper will describe the MBSE approach and how CORE facilitates its development. Copyright Â© 2009 Vitech Corporation. All rights reserved.
DA  - 2009///
PY  - 2009
VL  - 1
SP  - 524
EP  - 544
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-77954238015&partnerID=40&md5=7545024e8d3715f6422762a56c80e71f
DB  - Scopus
ER  - 

TY  - CONF
TI  - Evaluating aspects of systems modeling languages by example: SysML and OPM
AU  - Grobshtein, Y.
AU  - Dori, D.
T2  - 18th Annual International Symposium of the International Council on Systems Engineering, INCOSE 2008
AB  - As systems are becoming larger and more complex, the challenge of developing quality systems efficiently is on the rise. While traditionally document-centric approaches have been used, in recent years the benefits of model-based systems engineering have been acknowledged. Recognizing the importance of modeling as a key factor in managing system development complexity, the selection of the modeling language to be used should be considered. This work evaluates aspects of two systems modeling languages: SysML - OMG's Systems Modeling Language and OPM - Object-Process Methodology. The evaluation was done on the basis of a concrete sample problem, in which multiple aspects of the system were modeled in both SysML and OPM. Some of the findings, which were generalized from the case study, suggest that OPM is usually advantageous in presenting the system different hierarchy levels and combining structure with behavior, while SysML is more convenient for modeling detailed views of some aspects. Â© 2008 by Yariv Grobshtein and Dov Dori.
DA  - 2008///
PY  - 2008
VL  - 4
SP  - 2123
EP  - 2137
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878132857&partnerID=40&md5=d4065f0c6668a18fceefa39c5dade50e
DB  - Scopus
ER  - 

TY  - CONF
TI  - Model-based systems engineering of automotive systems
AU  - Fisher, Gerard H.
T2  - AIAA/IEEE Digital Avionics Systems Conference - Proceedings
AB  - For as long as systems engineers have been around, people have thought of them as `paper pushers.' The primary products of systems engineers all seem to be documents such, as specifications and trade-off studies. Communicating the requirements to hardware and software designers with documents is fraught with problems. By using a model-based approach to systems engineering, there is no ambiguity. The model fully defines the functional behavior, inputs and outputs, and the physical architecture, as well as the performance and resource requirements. This method provides a unified, consistent and traceable design. This paper describes the design of the Automotive Personal Assistance System (APAS) exploiting the features of the Global Positioning System, which is similar to the Cadillac OnStar System. It includes the entire systems engineering life cycle, from source requirements analysis, through behavior analysis and physical architecture, to verification and validation. The behavior model can be fully executed to verify its correctness long before money is wasted building prototypes. The use of the model-based approach will aid in the reduction of product cost and the increase in product quality.
DA  - 1998///
PY  - 1998
VL  - 1
UR  - https://www.scopus.com/inward/record.uri?eid=2-s2.0-0032302580&partnerID=40&md5=1eca322660f295f804bcc30606af47e4
DB  - Scopus
ER  - 

